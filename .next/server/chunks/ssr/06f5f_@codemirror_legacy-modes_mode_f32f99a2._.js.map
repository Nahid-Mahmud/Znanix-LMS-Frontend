{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/simple-mode.js","turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/factor.js"],"sourcesContent":["export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    mergeTokens: meta.mergeTokens,\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.dontIndentStates.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n","import {simpleMode} from \"./simple-mode.js\"\n\nexport const factor = simpleMode({\n    start: [\n      // comments\n      {regex: /#?!.*/, token: \"comment\"},\n      // strings \"\"\", multiline --> state\n      {regex: /\"\"\"/, token: \"string\", next: \"string3\"},\n      {regex: /(STRING:)(\\s)/, token: [\"keyword\", null], next: \"string2\"},\n      {regex: /\\S*?\"/, token: \"string\", next: \"string\"},\n      // numbers: dec, hex, unicode, bin, fractional, complex\n      {regex: /(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\-?\\d+.?\\d*)(?=\\s)/, token: \"number\"},\n      //{regex: /[+-]?/} //fractional\n      // definition: defining word, defined word, etc\n      {regex: /((?:GENERIC)|\\:?\\:)(\\s+)(\\S+)(\\s+)(\\()/, token: [\"keyword\", null, \"def\", null, \"bracket\"], next: \"stack\"},\n      // method definition: defining word, type, defined word, etc\n      {regex: /(M\\:)(\\s+)(\\S+)(\\s+)(\\S+)/, token: [\"keyword\", null, \"def\", null, \"tag\"]},\n      // vocabulary using --> state\n      {regex: /USING\\:/, token: \"keyword\", next: \"vocabulary\"},\n      // vocabulary definition/use\n      {regex: /(USE\\:|IN\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"tag\"]},\n      // definition: a defining word, defined word\n      {regex: /(\\S+\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"def\"]},\n      // \"keywords\", incl. ; t f . [ ] { } defining words\n      {regex: /(?:;|\\\\|t|f|if|loop|while|until|do|PRIVATE>|<PRIVATE|\\.|\\S*\\[|\\]|\\S*\\{|\\})(?=\\s|$)/, token: \"keyword\"},\n      // <constructors> and the like\n      {regex: /\\S+[\\)>\\.\\*\\?]+(?=\\s|$)/, token: \"builtin\"},\n      {regex: /[\\)><]+\\S+(?=\\s|$)/, token: \"builtin\"},\n      // operators\n      {regex: /(?:[\\+\\-\\=\\/\\*<>])(?=\\s|$)/, token: \"keyword\"},\n      // any id (?)\n      {regex: /\\S+/, token: \"variable\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    vocabulary: [\n      {regex: /;/, token: \"keyword\", next: \"start\"},\n      {regex: /\\S+/, token: \"tag\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    string: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string2: [\n      {regex: /^;/, token: \"keyword\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string3: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"\"\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    stack: [\n      {regex: /\\)/, token: \"bracket\", next: \"start\"},\n      {regex: /--/, token: \"bracket\"},\n      {regex: /\\S+/, token: \"meta\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    languageData: {\n      name: \"factor\",\n      dontIndentStates: [\"start\", \"vocabulary\", \"string\", \"string3\", \"stack\"],\n      commentTokens: {line: \"!\"}\n    }\n  });\n"],"names":[],"mappings":"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","ignoreList":[0,1]}