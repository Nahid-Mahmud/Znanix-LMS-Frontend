{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/mscgen.js"],"sourcesContent":["function mkParser(lang) {\n  return {\n    name: \"mscgen\",\n    startState: startStateFn,\n    copyState: copyStateFn,\n    token: produceTokenFunction(lang),\n    languageData: {\n      commentTokens: {line: \"#\", block: {open: \"/*\", close: \"*/\"}}\n    }\n  }\n}\n\nexport const mscgen = mkParser({\n  \"keywords\" : [\"msc\"],\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\"],\n  \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\"],\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"], // [ and  ] are brackets too, but these get handled in with lists\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nexport const msgenny = mkParser({\n  \"keywords\" : null,\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n  \"attributes\" : null,\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"],\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nexport const xu = mkParser({\n  \"keywords\" : [\"msc\", \"xu\"],\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n  \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\", \"title\", \"deactivate\", \"activate\", \"activation\"],\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"],  // [ and  ] are brackets too, but these get handled in with lists\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nfunction wordRegexpBoundary(pWords) {\n  return new RegExp(\"^\\\\b(\" + pWords.join(\"|\") + \")\\\\b\", \"i\");\n}\n\nfunction wordRegexp(pWords) {\n  return new RegExp(\"^(?:\" + pWords.join(\"|\") + \")\", \"i\");\n}\n\nfunction startStateFn() {\n  return {\n    inComment : false,\n    inString : false,\n    inAttributeList : false,\n    inScript : false\n  };\n}\n\nfunction copyStateFn(pState) {\n  return {\n    inComment : pState.inComment,\n    inString : pState.inString,\n    inAttributeList : pState.inAttributeList,\n    inScript : pState.inScript\n  };\n}\n\nfunction produceTokenFunction(pConfig) {\n  return function(pStream, pState) {\n    if (pStream.match(wordRegexp(pConfig.brackets), true, true)) {\n      return \"bracket\";\n    }\n    /* comments */\n    if (!pState.inComment) {\n      if (pStream.match(/\\/\\*[^\\*\\/]*/, true, true)) {\n        pState.inComment = true;\n        return \"comment\";\n      }\n      if (pStream.match(wordRegexp(pConfig.singlecomment), true, true)) {\n        pStream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (pState.inComment) {\n      if (pStream.match(/[^\\*\\/]*\\*\\//, true, true))\n        pState.inComment = false;\n      else\n        pStream.skipToEnd();\n      return \"comment\";\n    }\n    /* strings */\n    if (!pState.inString && pStream.match(/\\\"(\\\\\\\"|[^\\\"])*/, true, true)) {\n      pState.inString = true;\n      return \"string\";\n    }\n    if (pState.inString) {\n      if (pStream.match(/[^\\\"]*\\\"/, true, true))\n        pState.inString = false;\n      else\n        pStream.skipToEnd();\n      return \"string\";\n    }\n    /* keywords & operators */\n    if (!!pConfig.keywords && pStream.match(wordRegexpBoundary(pConfig.keywords), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexpBoundary(pConfig.options), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexpBoundary(pConfig.arcsWords), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexp(pConfig.arcsOthers), true, true))\n      return \"keyword\";\n\n    if (!!pConfig.operators && pStream.match(wordRegexp(pConfig.operators), true, true))\n      return \"operator\";\n\n    if (!!pConfig.constants && pStream.match(wordRegexp(pConfig.constants), true, true))\n      return \"variable\";\n\n    /* attribute lists */\n    if (!pConfig.inAttributeList && !!pConfig.attributes && pStream.match('[', true, true)) {\n      pConfig.inAttributeList = true;\n      return \"bracket\";\n    }\n    if (pConfig.inAttributeList) {\n      if (pConfig.attributes !== null && pStream.match(wordRegexpBoundary(pConfig.attributes), true, true)) {\n        return \"attribute\";\n      }\n      if (pStream.match(']', true, true)) {\n        pConfig.inAttributeList = false;\n        return \"bracket\";\n      }\n    }\n\n    pStream.next();\n    return null\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}