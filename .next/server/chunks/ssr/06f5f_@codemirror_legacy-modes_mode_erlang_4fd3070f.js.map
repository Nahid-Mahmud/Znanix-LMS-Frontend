{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/erlang.js"],"sourcesContent":["/////////////////////////////////////////////////////////////////////////////\n// constants\n\nvar typeWords = [\n  \"-type\", \"-spec\", \"-export_type\", \"-opaque\"];\n\nvar keywordWords = [\n  \"after\",\"begin\",\"catch\",\"case\",\"cond\",\"end\",\"fun\",\"if\",\n  \"let\",\"of\",\"query\",\"receive\",\"try\",\"when\"];\n\nvar separatorRE    = /[\\->,;]/;\nvar separatorWords = [\n  \"->\",\";\",\",\"];\n\nvar operatorAtomWords = [\n  \"and\",\"andalso\",\"band\",\"bnot\",\"bor\",\"bsl\",\"bsr\",\"bxor\",\n  \"div\",\"not\",\"or\",\"orelse\",\"rem\",\"xor\"];\n\nvar operatorSymbolRE    = /[\\+\\-\\*\\/<>=\\|:!]/;\nvar operatorSymbolWords = [\n  \"=\",\"+\",\"-\",\"*\",\"/\",\">\",\">=\",\"<\",\"=<\",\"=:=\",\"==\",\"=/=\",\"/=\",\"||\",\"<-\",\"!\"];\n\nvar openParenRE    = /[<\\(\\[\\{]/;\nvar openParenWords = [\n  \"<<\",\"(\",\"[\",\"{\"];\n\nvar closeParenRE    = /[>\\)\\]\\}]/;\nvar closeParenWords = [\n  \"}\",\"]\",\")\",\">>\"];\n\nvar guardWords = [\n  \"is_atom\",\"is_binary\",\"is_bitstring\",\"is_boolean\",\"is_float\",\n  \"is_function\",\"is_integer\",\"is_list\",\"is_number\",\"is_pid\",\n  \"is_port\",\"is_record\",\"is_reference\",\"is_tuple\",\n  \"atom\",\"binary\",\"bitstring\",\"boolean\",\"function\",\"integer\",\"list\",\n  \"number\",\"pid\",\"port\",\"record\",\"reference\",\"tuple\"];\n\nvar bifWords = [\n  \"abs\",\"adler32\",\"adler32_combine\",\"alive\",\"apply\",\"atom_to_binary\",\n  \"atom_to_list\",\"binary_to_atom\",\"binary_to_existing_atom\",\n  \"binary_to_list\",\"binary_to_term\",\"bit_size\",\"bitstring_to_list\",\n  \"byte_size\",\"check_process_code\",\"contact_binary\",\"crc32\",\n  \"crc32_combine\",\"date\",\"decode_packet\",\"delete_module\",\n  \"disconnect_node\",\"element\",\"erase\",\"exit\",\"float\",\"float_to_list\",\n  \"garbage_collect\",\"get\",\"get_keys\",\"group_leader\",\"halt\",\"hd\",\n  \"integer_to_list\",\"internal_bif\",\"iolist_size\",\"iolist_to_binary\",\n  \"is_alive\",\"is_atom\",\"is_binary\",\"is_bitstring\",\"is_boolean\",\n  \"is_float\",\"is_function\",\"is_integer\",\"is_list\",\"is_number\",\"is_pid\",\n  \"is_port\",\"is_process_alive\",\"is_record\",\"is_reference\",\"is_tuple\",\n  \"length\",\"link\",\"list_to_atom\",\"list_to_binary\",\"list_to_bitstring\",\n  \"list_to_existing_atom\",\"list_to_float\",\"list_to_integer\",\n  \"list_to_pid\",\"list_to_tuple\",\"load_module\",\"make_ref\",\"module_loaded\",\n  \"monitor_node\",\"node\",\"node_link\",\"node_unlink\",\"nodes\",\"notalive\",\n  \"now\",\"open_port\",\"pid_to_list\",\"port_close\",\"port_command\",\n  \"port_connect\",\"port_control\",\"pre_loaded\",\"process_flag\",\n  \"process_info\",\"processes\",\"purge_module\",\"put\",\"register\",\n  \"registered\",\"round\",\"self\",\"setelement\",\"size\",\"spawn\",\"spawn_link\",\n  \"spawn_monitor\",\"spawn_opt\",\"split_binary\",\"statistics\",\n  \"term_to_binary\",\"time\",\"throw\",\"tl\",\"trunc\",\"tuple_size\",\n  \"tuple_to_list\",\"unlink\",\"unregister\",\"whereis\"];\n\n// upper case: [A-Z] [Ø-Þ] [À-Ö]\n// lower case: [a-z] [ß-ö] [ø-ÿ]\nvar anumRE       = /[\\w@Ø-ÞÀ-Öß-öø-ÿ]/;\nvar escapesRE    =\n    /[0-7]{1,3}|[bdefnrstv\\\\\"']|\\^[a-zA-Z]|x[0-9a-zA-Z]{2}|x{[0-9a-zA-Z]+}/;\n\n/////////////////////////////////////////////////////////////////////////////\n// tokenizer\n\nfunction tokenizer(stream,state) {\n  // in multi-line string\n  if (state.in_string) {\n    state.in_string = (!doubleQuote(stream));\n    return rval(state,stream,\"string\");\n  }\n\n  // in multi-line atom\n  if (state.in_atom) {\n    state.in_atom = (!singleQuote(stream));\n    return rval(state,stream,\"atom\");\n  }\n\n  // whitespace\n  if (stream.eatSpace()) {\n    return rval(state,stream,\"whitespace\");\n  }\n\n  // attributes and type specs\n  if (!peekToken(state) &&\n      stream.match(/-\\s*[a-zß-öø-ÿ][\\wØ-ÞÀ-Öß-öø-ÿ]*/)) {\n    if (is_member(stream.current(),typeWords)) {\n      return rval(state,stream,\"type\");\n    }else{\n      return rval(state,stream,\"attribute\");\n    }\n  }\n\n  var ch = stream.next();\n\n  // comment\n  if (ch == '%') {\n    stream.skipToEnd();\n    return rval(state,stream,\"comment\");\n  }\n\n  // colon\n  if (ch == \":\") {\n    return rval(state,stream,\"colon\");\n  }\n\n  // macro\n  if (ch == '?') {\n    stream.eatSpace();\n    stream.eatWhile(anumRE);\n    return rval(state,stream,\"macro\");\n  }\n\n  // record\n  if (ch == \"#\") {\n    stream.eatSpace();\n    stream.eatWhile(anumRE);\n    return rval(state,stream,\"record\");\n  }\n\n  // dollar escape\n  if (ch == \"$\") {\n    if (stream.next() == \"\\\\\" && !stream.match(escapesRE)) {\n      return rval(state,stream,\"error\");\n    }\n    return rval(state,stream,\"number\");\n  }\n\n  // dot\n  if (ch == \".\") {\n    return rval(state,stream,\"dot\");\n  }\n\n  // quoted atom\n  if (ch == '\\'') {\n    if (!(state.in_atom = (!singleQuote(stream)))) {\n      if (stream.match(/\\s*\\/\\s*[0-9]/,false)) {\n        stream.match(/\\s*\\/\\s*[0-9]/,true);\n        return rval(state,stream,\"fun\");      // 'f'/0 style fun\n      }\n      if (stream.match(/\\s*\\(/,false) || stream.match(/\\s*:/,false)) {\n        return rval(state,stream,\"function\");\n      }\n    }\n    return rval(state,stream,\"atom\");\n  }\n\n  // string\n  if (ch == '\"') {\n    state.in_string = (!doubleQuote(stream));\n    return rval(state,stream,\"string\");\n  }\n\n  // variable\n  if (/[A-Z_Ø-ÞÀ-Ö]/.test(ch)) {\n    stream.eatWhile(anumRE);\n    return rval(state,stream,\"variable\");\n  }\n\n  // atom/keyword/BIF/function\n  if (/[a-z_ß-öø-ÿ]/.test(ch)) {\n    stream.eatWhile(anumRE);\n\n    if (stream.match(/\\s*\\/\\s*[0-9]/,false)) {\n      stream.match(/\\s*\\/\\s*[0-9]/,true);\n      return rval(state,stream,\"fun\");      // f/0 style fun\n    }\n\n    var w = stream.current();\n\n    if (is_member(w,keywordWords)) {\n      return rval(state,stream,\"keyword\");\n    }else if (is_member(w,operatorAtomWords)) {\n      return rval(state,stream,\"operator\");\n    }else if (stream.match(/\\s*\\(/,false)) {\n      // 'put' and 'erlang:put' are bifs, 'foo:put' is not\n      if (is_member(w,bifWords) &&\n          ((peekToken(state).token != \":\") ||\n           (peekToken(state,2).token == \"erlang\"))) {\n        return rval(state,stream,\"builtin\");\n      }else if (is_member(w,guardWords)) {\n        return rval(state,stream,\"guard\");\n      }else{\n        return rval(state,stream,\"function\");\n      }\n    }else if (lookahead(stream) == \":\") {\n      if (w == \"erlang\") {\n        return rval(state,stream,\"builtin\");\n      } else {\n        return rval(state,stream,\"function\");\n      }\n    }else if (is_member(w,[\"true\",\"false\"])) {\n      return rval(state,stream,\"boolean\");\n    }else{\n      return rval(state,stream,\"atom\");\n    }\n  }\n\n  // number\n  var digitRE      = /[0-9]/;\n  var radixRE      = /[0-9a-zA-Z]/;         // 36#zZ style int\n  if (digitRE.test(ch)) {\n    stream.eatWhile(digitRE);\n    if (stream.eat('#')) {                // 36#aZ  style integer\n      if (!stream.eatWhile(radixRE)) {\n        stream.backUp(1);                 //\"36#\" - syntax error\n      }\n    } else if (stream.eat('.')) {       // float\n      if (!stream.eatWhile(digitRE)) {\n        stream.backUp(1);        // \"3.\" - probably end of function\n      } else {\n        if (stream.eat(/[eE]/)) {        // float with exponent\n          if (stream.eat(/[-+]/)) {\n            if (!stream.eatWhile(digitRE)) {\n              stream.backUp(2);            // \"2e-\" - syntax error\n            }\n          } else {\n            if (!stream.eatWhile(digitRE)) {\n              stream.backUp(1);            // \"2e\" - syntax error\n            }\n          }\n        }\n      }\n    }\n    return rval(state,stream,\"number\");   // normal integer\n  }\n\n  // open parens\n  if (nongreedy(stream,openParenRE,openParenWords)) {\n    return rval(state,stream,\"open_paren\");\n  }\n\n  // close parens\n  if (nongreedy(stream,closeParenRE,closeParenWords)) {\n    return rval(state,stream,\"close_paren\");\n  }\n\n  // separators\n  if (greedy(stream,separatorRE,separatorWords)) {\n    return rval(state,stream,\"separator\");\n  }\n\n  // operators\n  if (greedy(stream,operatorSymbolRE,operatorSymbolWords)) {\n    return rval(state,stream,\"operator\");\n  }\n\n  return rval(state,stream,null);\n}\n\n/////////////////////////////////////////////////////////////////////////////\n// utilities\nfunction nongreedy(stream,re,words) {\n  if (stream.current().length == 1 && re.test(stream.current())) {\n    stream.backUp(1);\n    while (re.test(stream.peek())) {\n      stream.next();\n      if (is_member(stream.current(),words)) {\n        return true;\n      }\n    }\n    stream.backUp(stream.current().length-1);\n  }\n  return false;\n}\n\nfunction greedy(stream,re,words) {\n  if (stream.current().length == 1 && re.test(stream.current())) {\n    while (re.test(stream.peek())) {\n      stream.next();\n    }\n    while (0 < stream.current().length) {\n      if (is_member(stream.current(),words)) {\n        return true;\n      }else{\n        stream.backUp(1);\n      }\n    }\n    stream.next();\n  }\n  return false;\n}\n\nfunction doubleQuote(stream) {\n  return quote(stream, '\"', '\\\\');\n}\n\nfunction singleQuote(stream) {\n  return quote(stream,'\\'','\\\\');\n}\n\nfunction quote(stream,quoteChar,escapeChar) {\n  while (!stream.eol()) {\n    var ch = stream.next();\n    if (ch == quoteChar) {\n      return true;\n    }else if (ch == escapeChar) {\n      stream.next();\n    }\n  }\n  return false;\n}\n\nfunction lookahead(stream) {\n  var m = stream.match(/^\\s*([^\\s%])/, false)\n  return m ? m[1] : \"\";\n}\n\nfunction is_member(element,list) {\n  return (-1 < list.indexOf(element));\n}\n\nfunction rval(state,stream,type) {\n\n  // parse stack\n  pushToken(state,realToken(type,stream));\n\n  // map erlang token type to CodeMirror style class\n  //     erlang             -> CodeMirror tag\n  switch (type) {\n  case \"atom\":        return \"atom\";\n  case \"attribute\":   return \"attribute\";\n  case \"boolean\":     return \"atom\";\n  case \"builtin\":     return \"builtin\";\n  case \"close_paren\": return null;\n  case \"colon\":       return null;\n  case \"comment\":     return \"comment\";\n  case \"dot\":         return null;\n  case \"error\":       return \"error\";\n  case \"fun\":         return \"meta\";\n  case \"function\":    return \"tag\";\n  case \"guard\":       return \"property\";\n  case \"keyword\":     return \"keyword\";\n  case \"macro\":       return \"macroName\";\n  case \"number\":      return \"number\";\n  case \"open_paren\":  return null;\n  case \"operator\":    return \"operator\";\n  case \"record\":      return \"bracket\";\n  case \"separator\":   return null;\n  case \"string\":      return \"string\";\n  case \"type\":        return \"def\";\n  case \"variable\":    return \"variable\";\n  default:            return null;\n  }\n}\n\nfunction aToken(tok,col,ind,typ) {\n  return {token:  tok,\n          column: col,\n          indent: ind,\n          type:   typ};\n}\n\nfunction realToken(type,stream) {\n  return aToken(stream.current(),\n                stream.column(),\n                stream.indentation(),\n                type);\n}\n\nfunction fakeToken(type) {\n  return aToken(type,0,0,type);\n}\n\nfunction peekToken(state,depth) {\n  var len = state.tokenStack.length;\n  var dep = (depth ? depth : 1);\n\n  if (len < dep) {\n    return false;\n  }else{\n    return state.tokenStack[len-dep];\n  }\n}\n\nfunction pushToken(state,token) {\n\n  if (!(token.type == \"comment\" || token.type == \"whitespace\")) {\n    state.tokenStack = maybe_drop_pre(state.tokenStack,token);\n    state.tokenStack = maybe_drop_post(state.tokenStack);\n  }\n}\n\nfunction maybe_drop_pre(s,token) {\n  var last = s.length-1;\n\n  if (0 < last && s[last].type === \"record\" && token.type === \"dot\") {\n    s.pop();\n  }else if (0 < last && s[last].type === \"group\") {\n    s.pop();\n    s.push(token);\n  }else{\n    s.push(token);\n  }\n  return s;\n}\n\nfunction maybe_drop_post(s) {\n  if (!s.length) return s\n  var last = s.length-1;\n\n  if (s[last].type === \"dot\") {\n    return [];\n  }\n  if (last > 1 && s[last].type === \"fun\" && s[last-1].token === \"fun\") {\n    return s.slice(0,last-1);\n  }\n  switch (s[last].token) {\n  case \"}\":    return d(s,{g:[\"{\"]});\n  case \"]\":    return d(s,{i:[\"[\"]});\n  case \")\":    return d(s,{i:[\"(\"]});\n  case \">>\":   return d(s,{i:[\"<<\"]});\n  case \"end\":  return d(s,{i:[\"begin\",\"case\",\"fun\",\"if\",\"receive\",\"try\"]});\n  case \",\":    return d(s,{e:[\"begin\",\"try\",\"when\",\"->\",\n                              \",\",\"(\",\"[\",\"{\",\"<<\"]});\n  case \"->\":   return d(s,{r:[\"when\"],\n                           m:[\"try\",\"if\",\"case\",\"receive\"]});\n  case \";\":    return d(s,{E:[\"case\",\"fun\",\"if\",\"receive\",\"try\",\"when\"]});\n  case \"catch\":return d(s,{e:[\"try\"]});\n  case \"of\":   return d(s,{e:[\"case\"]});\n  case \"after\":return d(s,{e:[\"receive\",\"try\"]});\n  default:     return s;\n  }\n}\n\nfunction d(stack,tt) {\n  // stack is a stack of Token objects.\n  // tt is an object; {type:tokens}\n  // type is a char, tokens is a list of token strings.\n  // The function returns (possibly truncated) stack.\n  // It will descend the stack, looking for a Token such that Token.token\n  //  is a member of tokens. If it does not find that, it will normally (but\n  //  see \"E\" below) return stack. If it does find a match, it will remove\n  //  all the Tokens between the top and the matched Token.\n  // If type is \"m\", that is all it does.\n  // If type is \"i\", it will also remove the matched Token and the top Token.\n  // If type is \"g\", like \"i\", but add a fake \"group\" token at the top.\n  // If type is \"r\", it will remove the matched Token, but not the top Token.\n  // If type is \"e\", it will keep the matched Token but not the top Token.\n  // If type is \"E\", it behaves as for type \"e\", except if there is no match,\n  //  in which case it will return an empty stack.\n\n  for (var type in tt) {\n    var len = stack.length-1;\n    var tokens = tt[type];\n    for (var i = len-1; -1 < i ; i--) {\n      if (is_member(stack[i].token,tokens)) {\n        var ss = stack.slice(0,i);\n        switch (type) {\n        case \"m\": return ss.concat(stack[i]).concat(stack[len]);\n        case \"r\": return ss.concat(stack[len]);\n        case \"i\": return ss;\n        case \"g\": return ss.concat(fakeToken(\"group\"));\n        case \"E\": return ss.concat(stack[i]);\n        case \"e\": return ss.concat(stack[i]);\n        }\n      }\n    }\n  }\n  return (type == \"E\" ? [] : stack);\n}\n\n/////////////////////////////////////////////////////////////////////////////\n// indenter\n\nfunction indenter(state, textAfter, cx) {\n  var t;\n  var wordAfter = wordafter(textAfter);\n  var currT = peekToken(state,1);\n  var prevT = peekToken(state,2);\n\n  if (state.in_string || state.in_atom) {\n    return null;\n  }else if (!prevT) {\n    return 0;\n  }else if (currT.token == \"when\") {\n    return currT.column + cx.unit;\n  }else if (wordAfter === \"when\" && prevT.type === \"function\") {\n    return prevT.indent+cx.unit;\n  }else if (wordAfter === \"(\" && currT.token === \"fun\") {\n    return  currT.column+3;\n  }else if (wordAfter === \"catch\" && (t = getToken(state,[\"try\"]))) {\n    return t.column;\n  }else if (is_member(wordAfter,[\"end\",\"after\",\"of\"])) {\n    t = getToken(state,[\"begin\",\"case\",\"fun\",\"if\",\"receive\",\"try\"]);\n    return t ? t.column : null;\n  }else if (is_member(wordAfter,closeParenWords)) {\n    t = getToken(state,openParenWords);\n    return t ? t.column : null;\n  }else if (is_member(currT.token,[\",\",\"|\",\"||\"]) ||\n            is_member(wordAfter,[\",\",\"|\",\"||\"])) {\n    t = postcommaToken(state);\n    return t ? t.column+t.token.length : cx.unit;\n  }else if (currT.token == \"->\") {\n    if (is_member(prevT.token, [\"receive\",\"case\",\"if\",\"try\"])) {\n      return prevT.column+cx.unit+cx.unit;\n    }else{\n      return prevT.column+cx.unit;\n    }\n  }else if (is_member(currT.token,openParenWords)) {\n    return currT.column+currT.token.length;\n  }else{\n    t = defaultToken(state);\n    return truthy(t) ? t.column+cx.unit : 0;\n  }\n}\n\nfunction wordafter(str) {\n  var m = str.match(/,|[a-z]+|\\}|\\]|\\)|>>|\\|+|\\(/);\n\n  return truthy(m) && (m.index === 0) ? m[0] : \"\";\n}\n\nfunction postcommaToken(state) {\n  var objs = state.tokenStack.slice(0,-1);\n  var i = getTokenIndex(objs,\"type\",[\"open_paren\"]);\n\n  return truthy(objs[i]) ? objs[i] : false;\n}\n\nfunction defaultToken(state) {\n  var objs = state.tokenStack;\n  var stop = getTokenIndex(objs,\"type\",[\"open_paren\",\"separator\",\"keyword\"]);\n  var oper = getTokenIndex(objs,\"type\",[\"operator\"]);\n\n  if (truthy(stop) && truthy(oper) && stop < oper) {\n    return objs[stop+1];\n  } else if (truthy(stop)) {\n    return objs[stop];\n  } else {\n    return false;\n  }\n}\n\nfunction getToken(state,tokens) {\n  var objs = state.tokenStack;\n  var i = getTokenIndex(objs,\"token\",tokens);\n\n  return truthy(objs[i]) ? objs[i] : false;\n}\n\nfunction getTokenIndex(objs,propname,propvals) {\n\n  for (var i = objs.length-1; -1 < i ; i--) {\n    if (is_member(objs[i][propname],propvals)) {\n      return i;\n    }\n  }\n  return false;\n}\n\nfunction truthy(x) {\n  return (x !== false) && (x != null);\n}\n\n/////////////////////////////////////////////////////////////////////////////\n// this object defines the mode\n\nexport const erlang = {\n  name: \"erlang\",\n  startState() {\n    return {tokenStack: [],\n            in_string:  false,\n            in_atom:    false};\n  },\n\n  token: tokenizer,\n\n  indent: indenter,\n\n  languageData: {\n    commentTokens: {line: \"%\"}\n  }\n};\n\n"],"names":[],"mappings":"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","ignoreList":[0]}