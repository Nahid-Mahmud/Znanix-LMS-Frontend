{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/crystal.js"],"sourcesContent":["function wordRegExp(words, end) {\n  return new RegExp((end ? \"\" : \"^\") + \"(?:\" + words.join(\"|\") + \")\" + (end ? \"$\" : \"\\\\b\"));\n}\n\nfunction chain(tokenize, stream, state) {\n  state.tokenize.push(tokenize);\n  return tokenize(stream, state);\n}\n\nvar operators = /^(?:[-+/%|&^]|\\*\\*?|[<>]{2})/;\nvar conditionalOperators = /^(?:[=!]~|===|<=>|[<>=!]=?|[|&]{2}|~)/;\nvar indexingOperators = /^(?:\\[\\][?=]?)/;\nvar anotherOperators = /^(?:\\.(?:\\.{2})?|->|[?:])/;\nvar idents = /^[a-z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/;\nvar types = /^[A-Z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/;\nvar keywords = wordRegExp([\n  \"abstract\", \"alias\", \"as\", \"asm\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"do\",\n  \"else\", \"elsif\", \"end\", \"ensure\", \"enum\", \"extend\", \"for\", \"fun\", \"if\",\n  \"include\", \"instance_sizeof\", \"lib\", \"macro\", \"module\", \"next\", \"of\", \"out\", \"pointerof\",\n  \"private\", \"protected\", \"rescue\", \"return\", \"require\", \"select\", \"sizeof\", \"struct\",\n  \"super\", \"then\", \"type\", \"typeof\", \"uninitialized\", \"union\", \"unless\", \"until\", \"when\", \"while\", \"with\",\n  \"yield\", \"__DIR__\", \"__END_LINE__\", \"__FILE__\", \"__LINE__\"\n]);\nvar atomWords = wordRegExp([\"true\", \"false\", \"nil\", \"self\"]);\nvar indentKeywordsArray = [\n  \"def\", \"fun\", \"macro\",\n  \"class\", \"module\", \"struct\", \"lib\", \"enum\", \"union\",\n  \"do\", \"for\"\n];\nvar indentKeywords = wordRegExp(indentKeywordsArray);\nvar indentExpressionKeywordsArray = [\"if\", \"unless\", \"case\", \"while\", \"until\", \"begin\", \"then\"];\nvar indentExpressionKeywords = wordRegExp(indentExpressionKeywordsArray);\nvar dedentKeywordsArray = [\"end\", \"else\", \"elsif\", \"rescue\", \"ensure\"];\nvar dedentKeywords = wordRegExp(dedentKeywordsArray);\nvar dedentPunctualsArray = [\"\\\\)\", \"\\\\}\", \"\\\\]\"];\nvar dedentPunctuals = new RegExp(\"^(?:\" + dedentPunctualsArray.join(\"|\") + \")$\");\nvar nextTokenizer = {\n  \"def\": tokenFollowIdent, \"fun\": tokenFollowIdent, \"macro\": tokenMacroDef,\n  \"class\": tokenFollowType, \"module\": tokenFollowType, \"struct\": tokenFollowType,\n  \"lib\": tokenFollowType, \"enum\": tokenFollowType, \"union\": tokenFollowType\n};\nvar matching = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\", \"<\": \">\"};\n\nfunction tokenBase(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  // Macros\n  if (state.lastToken != \"\\\\\" && stream.match(\"{%\", false)) {\n    return chain(tokenMacro(\"%\", \"%\"), stream, state);\n  }\n\n  if (state.lastToken != \"\\\\\" && stream.match(\"{{\", false)) {\n    return chain(tokenMacro(\"{\", \"}\"), stream, state);\n  }\n\n  // Comments\n  if (stream.peek() == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  // Variables and keywords\n  var matched;\n  if (stream.match(idents)) {\n    stream.eat(/[?!]/);\n\n    matched = stream.current();\n    if (stream.eat(\":\")) {\n      return \"atom\";\n    } else if (state.lastToken == \".\") {\n      return \"property\";\n    } else if (keywords.test(matched)) {\n      if (indentKeywords.test(matched)) {\n        if (!(matched == \"fun\" && state.blocks.indexOf(\"lib\") >= 0) && !(matched == \"def\" && state.lastToken == \"abstract\")) {\n          state.blocks.push(matched);\n          state.currentIndent += 1;\n        }\n      } else if ((state.lastStyle == \"operator\" || !state.lastStyle) && indentExpressionKeywords.test(matched)) {\n        state.blocks.push(matched);\n        state.currentIndent += 1;\n      } else if (matched == \"end\") {\n        state.blocks.pop();\n        state.currentIndent -= 1;\n      }\n\n      if (nextTokenizer.hasOwnProperty(matched)) {\n        state.tokenize.push(nextTokenizer[matched]);\n      }\n\n      return \"keyword\";\n    } else if (atomWords.test(matched)) {\n      return \"atom\";\n    }\n\n    return \"variable\";\n  }\n\n  // Class variables and instance variables\n  // or attributes\n  if (stream.eat(\"@\")) {\n    if (stream.peek() == \"[\") {\n      return chain(tokenNest(\"[\", \"]\", \"meta\"), stream, state);\n    }\n\n    stream.eat(\"@\");\n    stream.match(idents) || stream.match(types);\n    return \"propertyName\";\n  }\n\n  // Constants and types\n  if (stream.match(types)) {\n    return \"tag\";\n  }\n\n  // Symbols or ':' operator\n  if (stream.eat(\":\")) {\n    if (stream.eat(\"\\\"\")) {\n      return chain(tokenQuote(\"\\\"\", \"atom\", false), stream, state);\n    } else if (stream.match(idents) || stream.match(types) ||\n               stream.match(operators) || stream.match(conditionalOperators) || stream.match(indexingOperators)) {\n      return \"atom\";\n    }\n    stream.eat(\":\");\n    return \"operator\";\n  }\n\n  // Strings\n  if (stream.eat(\"\\\"\")) {\n    return chain(tokenQuote(\"\\\"\", \"string\", true), stream, state);\n  }\n\n  // Strings or regexps or macro variables or '%' operator\n  if (stream.peek() == \"%\") {\n    var style = \"string\";\n    var embed = true;\n    var delim;\n\n    if (stream.match(\"%r\")) {\n      // Regexps\n      style = \"string.special\";\n      delim = stream.next();\n    } else if (stream.match(\"%w\")) {\n      embed = false;\n      delim = stream.next();\n    } else if (stream.match(\"%q\")) {\n      embed = false;\n      delim = stream.next();\n    } else {\n      if(delim = stream.match(/^%([^\\w\\s=])/)) {\n        delim = delim[1];\n      } else if (stream.match(/^%[a-zA-Z_\\u009F-\\uFFFF][\\w\\u009F-\\uFFFF]*/)) {\n        // Macro variables\n        return \"meta\";\n      } else if (stream.eat('%')) {\n        // '%' operator\n        return \"operator\";\n      }\n    }\n\n    if (matching.hasOwnProperty(delim)) {\n      delim = matching[delim];\n    }\n    return chain(tokenQuote(delim, style, embed), stream, state);\n  }\n\n  // Here Docs\n  if (matched = stream.match(/^<<-('?)([A-Z]\\w*)\\1/)) {\n    return chain(tokenHereDoc(matched[2], !matched[1]), stream, state)\n  }\n\n  // Characters\n  if (stream.eat(\"'\")) {\n    stream.match(/^(?:[^']|\\\\(?:[befnrtv0'\"]|[0-7]{3}|u(?:[0-9a-fA-F]{4}|\\{[0-9a-fA-F]{1,6}\\})))/);\n    stream.eat(\"'\");\n    return \"atom\";\n  }\n\n  // Numbers\n  if (stream.eat(\"0\")) {\n    if (stream.eat(\"x\")) {\n      stream.match(/^[0-9a-fA-F_]+/);\n    } else if (stream.eat(\"o\")) {\n      stream.match(/^[0-7_]+/);\n    } else if (stream.eat(\"b\")) {\n      stream.match(/^[01_]+/);\n    }\n    return \"number\";\n  }\n\n  if (stream.eat(/^\\d/)) {\n    stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+-]?\\d+)?/);\n    return \"number\";\n  }\n\n  // Operators\n  if (stream.match(operators)) {\n    stream.eat(\"=\"); // Operators can follow assign symbol.\n    return \"operator\";\n  }\n\n  if (stream.match(conditionalOperators) || stream.match(anotherOperators)) {\n    return \"operator\";\n  }\n\n  // Parens and braces\n  if (matched = stream.match(/[({[]/, false)) {\n    matched = matched[0];\n    return chain(tokenNest(matched, matching[matched], null), stream, state);\n  }\n\n  // Escapes\n  if (stream.eat(\"\\\\\")) {\n    stream.next();\n    return \"meta\";\n  }\n\n  stream.next();\n  return null;\n}\n\nfunction tokenNest(begin, end, style, started) {\n  return function (stream, state) {\n    if (!started && stream.match(begin)) {\n      state.tokenize[state.tokenize.length - 1] = tokenNest(begin, end, style, true);\n      state.currentIndent += 1;\n      return style;\n    }\n\n    var nextStyle = tokenBase(stream, state);\n    if (stream.current() === end) {\n      state.tokenize.pop();\n      state.currentIndent -= 1;\n      nextStyle = style;\n    }\n\n    return nextStyle;\n  };\n}\n\nfunction tokenMacro(begin, end, started) {\n  return function (stream, state) {\n    if (!started && stream.match(\"{\" + begin)) {\n      state.currentIndent += 1;\n      state.tokenize[state.tokenize.length - 1] = tokenMacro(begin, end, true);\n      return \"meta\";\n    }\n\n    if (stream.match(end + \"}\")) {\n      state.currentIndent -= 1;\n      state.tokenize.pop();\n      return \"meta\";\n    }\n\n    return tokenBase(stream, state);\n  };\n}\n\nfunction tokenMacroDef(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  var matched;\n  if (matched = stream.match(idents)) {\n    if (matched == \"def\") {\n      return \"keyword\";\n    }\n    stream.eat(/[?!]/);\n  }\n\n  state.tokenize.pop();\n  return \"def\";\n}\n\nfunction tokenFollowIdent(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  if (stream.match(idents)) {\n    stream.eat(/[!?]/);\n  } else {\n    stream.match(operators) || stream.match(conditionalOperators) || stream.match(indexingOperators);\n  }\n  state.tokenize.pop();\n  return \"def\";\n}\n\nfunction tokenFollowType(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  stream.match(types);\n  state.tokenize.pop();\n  return \"def\";\n}\n\nfunction tokenQuote(end, style, embed) {\n  return function (stream, state) {\n    var escaped = false;\n\n    while (stream.peek()) {\n      if (!escaped) {\n        if (stream.match(\"{%\", false)) {\n          state.tokenize.push(tokenMacro(\"%\", \"%\"));\n          return style;\n        }\n\n        if (stream.match(\"{{\", false)) {\n          state.tokenize.push(tokenMacro(\"{\", \"}\"));\n          return style;\n        }\n\n        if (embed && stream.match(\"#{\", false)) {\n          state.tokenize.push(tokenNest(\"#{\", \"}\", \"meta\"));\n          return style;\n        }\n\n        var ch = stream.next();\n\n        if (ch == end) {\n          state.tokenize.pop();\n          return style;\n        }\n\n        escaped = embed && ch == \"\\\\\";\n      } else {\n        stream.next();\n        escaped = false;\n      }\n    }\n\n    return style;\n  };\n}\n\nfunction tokenHereDoc(phrase, embed) {\n  return function (stream, state) {\n    if (stream.sol()) {\n      stream.eatSpace()\n      if (stream.match(phrase)) {\n        state.tokenize.pop();\n        return \"string\";\n      }\n    }\n\n    var escaped = false;\n    while (stream.peek()) {\n      if (!escaped) {\n        if (stream.match(\"{%\", false)) {\n          state.tokenize.push(tokenMacro(\"%\", \"%\"));\n          return \"string\";\n        }\n\n        if (stream.match(\"{{\", false)) {\n          state.tokenize.push(tokenMacro(\"{\", \"}\"));\n          return \"string\";\n        }\n\n        if (embed && stream.match(\"#{\", false)) {\n          state.tokenize.push(tokenNest(\"#{\", \"}\", \"meta\"));\n          return \"string\";\n        }\n\n        escaped = stream.next() == \"\\\\\" && embed;\n      } else {\n        stream.next();\n        escaped = false;\n      }\n    }\n\n    return \"string\";\n  }\n}\n\nexport const crystal = {\n  name: \"crystal\",\n  startState: function () {\n    return {\n      tokenize: [tokenBase],\n      currentIndent: 0,\n      lastToken: null,\n      lastStyle: null,\n      blocks: []\n    };\n  },\n\n  token: function (stream, state) {\n    var style = state.tokenize[state.tokenize.length - 1](stream, state);\n    var token = stream.current();\n\n    if (style && style != \"comment\") {\n      state.lastToken = token;\n      state.lastStyle = style;\n    }\n\n    return style;\n  },\n\n  indent: function (state, textAfter, cx) {\n    textAfter = textAfter.replace(/^\\s*(?:\\{%)?\\s*|\\s*(?:%\\})?\\s*$/g, \"\");\n\n    if (dedentKeywords.test(textAfter) || dedentPunctuals.test(textAfter)) {\n      return cx.unit * (state.currentIndent - 1);\n    }\n\n    return cx.unit * state.currentIndent;\n  },\n\n  languageData: {\n    indentOnInput: wordRegExp(dedentPunctualsArray.concat(dedentKeywordsArray), true),\n    commentTokens: {line: \"#\"}\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}