{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/elm.js"],"sourcesContent":["function switchState(source, setState, f)\n{\n  setState(f);\n  return f(source, setState);\n}\n\nvar lowerRE = /[a-z]/;\nvar upperRE = /[A-Z]/;\nvar innerRE = /[a-zA-Z0-9_]/;\n\nvar digitRE = /[0-9]/;\nvar hexRE = /[0-9A-Fa-f]/;\nvar symbolRE = /[-&*+.\\\\/<>=?^|:]/;\nvar specialRE = /[(),[\\]{}]/;\nvar spacesRE = /[ \\v\\f]/; // newlines are handled in tokenizer\n\nfunction normal()\n{\n  return function(source, setState)\n  {\n    if (source.eatWhile(spacesRE))\n    {\n      return null;\n    }\n\n    var char = source.next();\n\n    if (specialRE.test(char))\n    {\n      return (char === '{' && source.eat('-'))\n        ? switchState(source, setState, chompMultiComment(1))\n        : (char === '[' && source.match('glsl|'))\n        ? switchState(source, setState, chompGlsl)\n        : 'builtin';\n    }\n\n    if (char === '\\'')\n    {\n      return switchState(source, setState, chompChar);\n    }\n\n    if (char === '\"')\n    {\n      return source.eat('\"')\n        ? source.eat('\"')\n        ? switchState(source, setState, chompMultiString)\n        : 'string'\n      : switchState(source, setState, chompSingleString);\n    }\n\n    if (upperRE.test(char))\n    {\n      source.eatWhile(innerRE);\n      return 'type';\n    }\n\n    if (lowerRE.test(char))\n    {\n      var isDef = source.pos === 1;\n      source.eatWhile(innerRE);\n      return isDef ? \"def\" : \"variable\";\n    }\n\n    if (digitRE.test(char))\n    {\n      if (char === '0')\n      {\n        if (source.eat(/[xX]/))\n        {\n          source.eatWhile(hexRE); // should require at least 1\n          return \"number\";\n        }\n      }\n      else\n      {\n        source.eatWhile(digitRE);\n      }\n      if (source.eat('.'))\n      {\n        source.eatWhile(digitRE); // should require at least 1\n      }\n      if (source.eat(/[eE]/))\n      {\n        source.eat(/[-+]/);\n        source.eatWhile(digitRE); // should require at least 1\n      }\n      return \"number\";\n    }\n\n    if (symbolRE.test(char))\n    {\n      if (char === '-' && source.eat('-'))\n      {\n        source.skipToEnd();\n        return \"comment\";\n      }\n      source.eatWhile(symbolRE);\n      return \"keyword\";\n    }\n\n    if (char === '_')\n    {\n      return \"keyword\";\n    }\n\n    return \"error\";\n  }\n}\n\nfunction chompMultiComment(nest)\n{\n  if (nest == 0)\n  {\n    return normal();\n  }\n  return function(source, setState)\n  {\n    while (!source.eol())\n    {\n      var char = source.next();\n      if (char == '{' && source.eat('-'))\n      {\n        ++nest;\n      }\n      else if (char == '-' && source.eat('}'))\n      {\n        --nest;\n        if (nest === 0)\n        {\n          setState(normal());\n          return 'comment';\n        }\n      }\n    }\n    setState(chompMultiComment(nest));\n    return 'comment';\n  }\n}\n\nfunction chompMultiString(source, setState)\n{\n  while (!source.eol())\n  {\n    var char = source.next();\n    if (char === '\"' && source.eat('\"') && source.eat('\"'))\n    {\n      setState(normal());\n      return 'string';\n    }\n  }\n  return 'string';\n}\n\nfunction chompSingleString(source, setState)\n{\n  while (source.skipTo('\\\\\"')) { source.next(); source.next(); }\n  if (source.skipTo('\"'))\n  {\n    source.next();\n    setState(normal());\n    return 'string';\n  }\n  source.skipToEnd();\n  setState(normal());\n  return 'error';\n}\n\nfunction chompChar(source, setState)\n{\n  while (source.skipTo(\"\\\\'\")) { source.next(); source.next(); }\n  if (source.skipTo(\"'\"))\n  {\n    source.next();\n    setState(normal());\n    return 'string';\n  }\n  source.skipToEnd();\n  setState(normal());\n  return 'error';\n}\n\nfunction chompGlsl(source, setState)\n{\n  while (!source.eol())\n  {\n    var char = source.next();\n    if (char === '|' && source.eat(']'))\n    {\n      setState(normal());\n      return 'string';\n    }\n  }\n  return 'string';\n}\n\nvar wellKnownWords = {\n  case: 1,\n  of: 1,\n  as: 1,\n  if: 1,\n  then: 1,\n  else: 1,\n  let: 1,\n    in: 1,\n  type: 1,\n  alias: 1,\n  module: 1,\n  where: 1,\n  import: 1,\n  exposing: 1,\n  port: 1\n};\n\nexport const elm = {\n  name: \"elm\",\n  startState: function ()  { return { f: normal() }; },\n  copyState:  function (s) { return { f: s.f }; },\n\n  token: function(stream, state) {\n    var type = state.f(stream, function(s) { state.f = s; });\n    var word = stream.current();\n    return (wellKnownWords.hasOwnProperty(word)) ? 'keyword' : type;\n  },\n\n  languageData: {\n    commentTokens: {line: \"--\"}\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}