{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/pascal.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nvar keywords = words(\n  \"absolute and array asm begin case const constructor destructor div do \" +\n    \"downto else end file for function goto if implementation in inherited \" +\n    \"inline interface label mod nil not object of operator or packed procedure \" +\n    \"program record reintroduce repeat self set shl shr string then to type \" +\n    \"unit until uses var while with xor as class dispinterface except exports \" +\n    \"finalization finally initialization inline is library on out packed \" +\n    \"property raise resourcestring threadvar try absolute abstract alias \" +\n    \"assembler bitpacked break cdecl continue cppdecl cvar default deprecated \" +\n    \"dynamic enumerator experimental export external far far16 forward generic \" +\n    \"helper implements index interrupt iocheck local message name near \" +\n    \"nodefault noreturn nostackframe oldfpccall otherwise overload override \" +\n    \"pascal platform private protected public published read register \" +\n    \"reintroduce result safecall saveregisters softfloat specialize static \" +\n    \"stdcall stored strict unaligned unimplemented varargs virtual write\");\nvar atoms = {\"null\": true};\n\nvar isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == \"#\" && state.startOfLine) {\n    stream.skipToEnd();\n    return \"meta\";\n  }\n  if (ch == '\"' || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (ch == \"(\" && stream.eat(\"*\")) {\n    state.tokenize = tokenComment;\n    return tokenComment(stream, state);\n  }\n  if (ch == \"{\") {\n    state.tokenize = tokenCommentBraces;\n    return tokenCommentBraces(stream, state);\n  }\n  if (/[\\[\\]\\(\\),;\\:\\.]/.test(ch)) {\n    return null;\n  }\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n  if (ch == \"/\") {\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_]/);\n  var cur = stream.current().toLowerCase();\n  if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !escaped) state.tokenize = null;\n    return \"string\";\n  };\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \")\" && maybeEnd) {\n      state.tokenize = null;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction tokenCommentBraces(stream, state) {\n  var ch;\n  while (ch = stream.next()) {\n    if (ch == \"}\") {\n      state.tokenize = null;\n      break;\n    }\n  }\n  return \"comment\";\n}\n\n// Interface\n\nexport const pascal = {\n  name: \"pascal\",\n\n  startState: function() {\n    return {tokenize: null};\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\" || style == \"meta\") return style;\n    return style;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {block: {open: \"(*\", close: \"*)\"}}\n  }\n};\n"],"names":[],"mappings":"8DAKA,IAAI,EAAW,AALf,SAAe,AAAN,CAAS,EAEhB,IAAK,IADD,EAAM,CAAC,EAAG,EAAQ,EAAI,KAAK,CAAC,KACvB,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,EAAE,EAAG,CAAG,CAAC,CAAK,CAAC,EAAE,CAAC,EAAG,EACvD,OAAO,CACT,EAEE,2EACE,2EACA,+EACA,4EACA,8EACA,yEACA,yEACA,8EACA,+EACA,uEACA,4EACA,sEACA,2EACA,MACA,EAAQ,CAAC,KAAQ,EAAI,EAErB,EAAiB,mBAwDrB,SAAS,EAAa,CAAM,CAAE,CAAK,EAEjC,IADA,IAAsB,EAAlB,GAAW,EACR,EAAK,EAAO,IAAI,IAAI,CACzB,GAAU,KAAN,GAAa,EAAU,CACzB,EAAM,QAAQ,CAAG,KACjB,KACF,CACA,EAAkB,KAAN,CACd,CACA,MAAO,SACT,CAEA,SAAS,EAAmB,CAAM,CAAE,CAAK,EAEvC,IADA,IAAI,EACG,EAAK,EAAO,IAAI,GAAI,CACzB,GAAI,AAAM,OAAK,CACb,EAAM,QAAQ,CAAG,KACjB,KACF,CAEF,MAAO,SACT,CAIO,IAAM,EAAS,CACpB,KAAM,SAEN,WAAY,WACV,MAAO,CAAC,SAAU,IAAI,CACxB,EAEA,MAAO,SAAS,CAAM,CAAE,CAAK,EAC3B,GAAI,EAAO,QAAQ,GAAI,OAAO,KAC9B,IAAI,EAAQ,CAAC,EAAM,QAAQ,EAxF/B,EAwFmC,OAxF1B,AAAU,CAAM,CAAE,CAAK,EAC9B,MAAI,EAAK,EAAO,IAAI,GACpB,GAAU,KAAN,GAAa,EAAM,WAAW,CAEhC,CAFkC,MAClC,EAAO,SAAS,GACT,OAET,GAAU,KAAN,GAAmB,KAAN,AAAW,GAE1B,OAkCiB,EAnCY,EAA7B,CAmCsB,CAnChB,QAAQ,CAoCT,EApCY,OAoCH,CAAM,CAAE,CAAK,EAE3B,IADA,IAAqB,EAAjB,EAAU,GAAa,GAAM,EAC1B,AAA0B,OAAzB,EAAO,EAAO,IAAI,EAAA,CAAE,EAAW,CACrC,GAAI,GAAQ,GAAS,CAAC,EAAS,CAAC,GAAM,EAAM,KAAM,CAClD,EAAU,CAAC,GAAmB,MAAR,CACxB,CAEA,MADI,IAAO,CAAC,CAAA,IAAS,EAAM,QAAQ,CAAG,IAAA,EAC/B,QACT,EA3CS,EAAM,QAAQ,CAAC,EAAQ,EAAA,CAEhC,GAAI,AAAM,QAAO,EAAO,GAAG,CAAC,KAE1B,CAFgC,MAChC,EAAM,QAAQ,CAAG,EACV,EAAa,EAAQ,GAE9B,GAAU,KAAN,AAAW,EAEb,OADA,EAAM,QAAQ,CAAG,EACV,EAAmB,EAAQ,GAEpC,GAAI,mBAAmB,IAAI,CAAC,GAC1B,EAD+B,KACxB,KAET,GAAI,KAAK,IAAI,CAAC,GAEZ,EAFiB,KACjB,EAAO,QAAQ,CAAC,UACT,SAET,GAAI,AAAM,KAAK,GACT,EAAO,GAAG,CAAC,KAEb,CAFmB,MACnB,EAAO,SAAS,GACT,UAGX,GAAI,EAAe,IAAI,CAAC,GAEtB,EAF2B,KAC3B,EAAO,QAAQ,CAAC,GACT,WAET,EAAO,QAAQ,CAAC,WAChB,IAAI,EAAM,EAAO,OAAO,GAAG,WAAW,UAClC,AAAJ,EAAa,oBAAoB,CAAC,GAAa,GAAP,OACpC,EAAM,oBAAoB,CAAC,GAAa,GAAP,IAC9B,UACT,CAgDmC,CAAS,CAAE,EAAQ,GAElD,OAAO,CACT,EAEA,aAAc,CACZ,cAAe,YACf,cAAe,CAAC,MAAO,CAAC,KAAM,KAAM,MAAO,IAAI,CAAC,CAClD,CACF","ignoreList":[0]}