{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/stylus.js"],"sourcesContent":["// developer.mozilla.org/en-US/docs/Web/HTML/Element\nvar tagKeywords_ = [\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\", \"b\", \"base\",\"bdi\", \"bdo\",\"bgsound\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\", \"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"div\", \"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\", \"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\", \"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\", \"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"nobr\",\"noframes\", \"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"pre\", \"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\", \"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\", \"u\",\"ul\",\"var\",\"video\"];\n\n// github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n// Note, \"url-prefix\" should precede \"url\" in order to match correctly in documentTypesRegexp\nvar documentTypes_ = [\"domain\", \"regexp\", \"url-prefix\", \"url\"];\nvar mediaTypes_ = [\"all\",\"aural\",\"braille\",\"handheld\",\"print\",\"projection\",\"screen\",\"tty\",\"tv\",\"embossed\"];\nvar mediaFeatures_ = [\"width\",\"min-width\",\"max-width\",\"height\",\"min-height\",\"max-height\",\"device-width\",\"min-device-width\",\"max-device-width\",\"device-height\",\"min-device-height\",\"max-device-height\",\"aspect-ratio\",\"min-aspect-ratio\",\"max-aspect-ratio\",\"device-aspect-ratio\",\"min-device-aspect-ratio\",\"max-device-aspect-ratio\",\"color\",\"min-color\",\"max-color\",\"color-index\",\"min-color-index\",\"max-color-index\",\"monochrome\",\"min-monochrome\",\"max-monochrome\",\"resolution\",\"min-resolution\",\"max-resolution\",\"scan\",\"grid\",\"dynamic-range\",\"video-dynamic-range\"];\nvar propertyKeywords_ = [\"align-content\",\"align-items\",\"align-self\",\"alignment-adjust\",\"alignment-baseline\",\"anchor-point\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"appearance\",\"azimuth\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"baseline-shift\",\"binding\",\"bleed\",\"bookmark-label\",\"bookmark-level\",\"bookmark-state\",\"bookmark-target\",\"border\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"clear\",\"clip\",\"color\",\"color-profile\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"content\",\"counter-increment\",\"counter-reset\",\"crop\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"dominant-baseline\",\"drop-initial-after-adjust\",\"drop-initial-after-align\",\"drop-initial-before-adjust\",\"drop-initial-before-align\",\"drop-initial-size\",\"drop-initial-value\",\"elevation\",\"empty-cells\",\"fit\",\"fit-position\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"float-offset\",\"flow-from\",\"flow-into\",\"font\",\"font-feature-settings\",\"font-family\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-alternates\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-weight\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-position\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"inline-box-align\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"line-stacking\",\"line-stacking-ruby\",\"line-stacking-shift\",\"line-stacking-strategy\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"marker-offset\",\"marks\",\"marquee-direction\",\"marquee-loop\",\"marquee-play-count\",\"marquee-speed\",\"marquee-style\",\"max-height\",\"max-width\",\"min-height\",\"min-width\",\"move-to\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-style\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-bottom\",\"padding-left\",\"padding-right\",\"padding-top\",\"page\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"page-policy\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pitch\",\"pitch-range\",\"play-during\",\"position\",\"presentation-level\",\"punctuation-trim\",\"quotes\",\"region-break-after\",\"region-break-before\",\"region-break-inside\",\"region-fragment\",\"rendering-intent\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"richness\",\"right\",\"rotation\",\"rotation-point\",\"ruby-align\",\"ruby-overhang\",\"ruby-position\",\"ruby-span\",\"shape-image-threshold\",\"shape-inside\",\"shape-margin\",\"shape-outside\",\"size\",\"speak\",\"speak-as\",\"speak-header\",\"speak-numeral\",\"speak-punctuation\",\"speech-rate\",\"stress\",\"string-set\",\"tab-size\",\"table-layout\",\"target\",\"target-name\",\"target-new\",\"target-position\",\"text-align\",\"text-align-last\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-skip\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-height\",\"text-indent\",\"text-justify\",\"text-outline\",\"text-overflow\",\"text-shadow\",\"text-size-adjust\",\"text-space-collapse\",\"text-transform\",\"text-underline-position\",\"text-wrap\",\"top\",\"transform\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"z-index\",\"clip-path\",\"clip-rule\",\"mask\",\"enable-background\",\"filter\",\"flood-color\",\"flood-opacity\",\"lighting-color\",\"stop-color\",\"stop-opacity\",\"pointer-events\",\"color-interpolation\",\"color-interpolation-filters\",\"color-rendering\",\"fill\",\"fill-opacity\",\"fill-rule\",\"image-rendering\",\"marker\",\"marker-end\",\"marker-mid\",\"marker-start\",\"shape-rendering\",\"stroke\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke-width\",\"text-rendering\",\"baseline-shift\",\"dominant-baseline\",\"glyph-orientation-horizontal\",\"glyph-orientation-vertical\",\"text-anchor\",\"writing-mode\",\"font-smoothing\",\"osx-font-smoothing\"];\nvar nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\",\"scrollbar-base-color\",\"scrollbar-dark-shadow-color\",\"scrollbar-face-color\",\"scrollbar-highlight-color\",\"scrollbar-shadow-color\",\"scrollbar-3d-light-color\",\"scrollbar-track-color\",\"shape-inside\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"zoom\"];\nvar fontProperties_ = [\"font-family\",\"src\",\"unicode-range\",\"font-variant\",\"font-feature-settings\",\"font-stretch\",\"font-weight\",\"font-style\"];\nvar colorKeywords_ = [\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"grey\",\"green\",\"greenyellow\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\"];\nvar valueKeywords_ = [\"above\",\"absolute\",\"activeborder\",\"additive\",\"activecaption\",\"afar\",\"after-white-space\",\"ahead\",\"alias\",\"all\",\"all-scroll\",\"alphabetic\",\"alternate\",\"always\",\"amharic\",\"amharic-abegede\",\"antialiased\",\"appworkspace\",\"arabic-indic\",\"armenian\",\"asterisks\",\"attr\",\"auto\",\"avoid\",\"avoid-column\",\"avoid-page\",\"avoid-region\",\"background\",\"backwards\",\"baseline\",\"below\",\"bidi-override\",\"binary\",\"bengali\",\"blink\",\"block\",\"block-axis\",\"bold\",\"bolder\",\"border\",\"border-box\",\"both\",\"bottom\",\"break\",\"break-all\",\"break-word\",\"bullets\",\"button\",\"buttonface\",\"buttonhighlight\",\"buttonshadow\",\"buttontext\",\"calc\",\"cambodian\",\"capitalize\",\"caps-lock-indicator\",\"caption\",\"captiontext\",\"caret\",\"cell\",\"center\",\"checkbox\",\"circle\",\"cjk-decimal\",\"cjk-earthly-branch\",\"cjk-heavenly-stem\",\"cjk-ideographic\",\"clear\",\"clip\",\"close-quote\",\"col-resize\",\"collapse\",\"column\",\"compact\",\"condensed\",\"conic-gradient\",\"contain\",\"content\",\"contents\",\"content-box\",\"context-menu\",\"continuous\",\"copy\",\"counter\",\"counters\",\"cover\",\"crop\",\"cross\",\"crosshair\",\"currentcolor\",\"cursive\",\"cyclic\",\"dashed\",\"decimal\",\"decimal-leading-zero\",\"default\",\"default-button\",\"destination-atop\",\"destination-in\",\"destination-out\",\"destination-over\",\"devanagari\",\"disc\",\"discard\",\"disclosure-closed\",\"disclosure-open\",\"document\",\"dot-dash\",\"dot-dot-dash\",\"dotted\",\"double\",\"down\",\"e-resize\",\"ease\",\"ease-in\",\"ease-in-out\",\"ease-out\",\"element\",\"ellipse\",\"ellipsis\",\"embed\",\"end\",\"ethiopic\",\"ethiopic-abegede\",\"ethiopic-abegede-am-et\",\"ethiopic-abegede-gez\",\"ethiopic-abegede-ti-er\",\"ethiopic-abegede-ti-et\",\"ethiopic-halehame-aa-er\",\"ethiopic-halehame-aa-et\",\"ethiopic-halehame-am-et\",\"ethiopic-halehame-gez\",\"ethiopic-halehame-om-et\",\"ethiopic-halehame-sid-et\",\"ethiopic-halehame-so-et\",\"ethiopic-halehame-ti-er\",\"ethiopic-halehame-ti-et\",\"ethiopic-halehame-tig\",\"ethiopic-numeric\",\"ew-resize\",\"expanded\",\"extends\",\"extra-condensed\",\"extra-expanded\",\"fantasy\",\"fast\",\"fill\",\"fixed\",\"flat\",\"flex\",\"footnotes\",\"forwards\",\"from\",\"geometricPrecision\",\"georgian\",\"graytext\",\"groove\",\"gujarati\",\"gurmukhi\",\"hand\",\"hangul\",\"hangul-consonant\",\"hebrew\",\"help\",\"hidden\",\"hide\",\"high\",\"higher\",\"highlight\",\"highlighttext\",\"hiragana\",\"hiragana-iroha\",\"horizontal\",\"hsl\",\"hsla\",\"icon\",\"ignore\",\"inactiveborder\",\"inactivecaption\",\"inactivecaptiontext\",\"infinite\",\"infobackground\",\"infotext\",\"inherit\",\"initial\",\"inline\",\"inline-axis\",\"inline-block\",\"inline-flex\",\"inline-table\",\"inset\",\"inside\",\"intrinsic\",\"invert\",\"italic\",\"japanese-formal\",\"japanese-informal\",\"justify\",\"kannada\",\"katakana\",\"katakana-iroha\",\"keep-all\",\"khmer\",\"korean-hangul-formal\",\"korean-hanja-formal\",\"korean-hanja-informal\",\"landscape\",\"lao\",\"large\",\"larger\",\"left\",\"level\",\"lighter\",\"line-through\",\"linear\",\"linear-gradient\",\"lines\",\"list-item\",\"listbox\",\"listitem\",\"local\",\"logical\",\"loud\",\"lower\",\"lower-alpha\",\"lower-armenian\",\"lower-greek\",\"lower-hexadecimal\",\"lower-latin\",\"lower-norwegian\",\"lower-roman\",\"lowercase\",\"ltr\",\"malayalam\",\"match\",\"matrix\",\"matrix3d\",\"media-play-button\",\"media-slider\",\"media-sliderthumb\",\"media-volume-slider\",\"media-volume-sliderthumb\",\"medium\",\"menu\",\"menulist\",\"menulist-button\",\"menutext\",\"message-box\",\"middle\",\"min-intrinsic\",\"mix\",\"mongolian\",\"monospace\",\"move\",\"multiple\",\"myanmar\",\"n-resize\",\"narrower\",\"ne-resize\",\"nesw-resize\",\"no-close-quote\",\"no-drop\",\"no-open-quote\",\"no-repeat\",\"none\",\"normal\",\"not-allowed\",\"nowrap\",\"ns-resize\",\"numbers\",\"numeric\",\"nw-resize\",\"nwse-resize\",\"oblique\",\"octal\",\"open-quote\",\"optimizeLegibility\",\"optimizeSpeed\",\"oriya\",\"oromo\",\"outset\",\"outside\",\"outside-shape\",\"overlay\",\"overline\",\"padding\",\"padding-box\",\"painted\",\"page\",\"paused\",\"persian\",\"perspective\",\"plus-darker\",\"plus-lighter\",\"pointer\",\"polygon\",\"portrait\",\"pre\",\"pre-line\",\"pre-wrap\",\"preserve-3d\",\"progress\",\"push-button\",\"radial-gradient\",\"radio\",\"read-only\",\"read-write\",\"read-write-plaintext-only\",\"rectangle\",\"region\",\"relative\",\"repeat\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"repeating-conic-gradient\",\"repeat-x\",\"repeat-y\",\"reset\",\"reverse\",\"rgb\",\"rgba\",\"ridge\",\"right\",\"rotate\",\"rotate3d\",\"rotateX\",\"rotateY\",\"rotateZ\",\"round\",\"row-resize\",\"rtl\",\"run-in\",\"running\",\"s-resize\",\"sans-serif\",\"scale\",\"scale3d\",\"scaleX\",\"scaleY\",\"scaleZ\",\"scroll\",\"scrollbar\",\"scroll-position\",\"se-resize\",\"searchfield\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"semi-condensed\",\"semi-expanded\",\"separate\",\"serif\",\"show\",\"sidama\",\"simp-chinese-formal\",\"simp-chinese-informal\",\"single\",\"skew\",\"skewX\",\"skewY\",\"skip-white-space\",\"slide\",\"slider-horizontal\",\"slider-vertical\",\"sliderthumb-horizontal\",\"sliderthumb-vertical\",\"slow\",\"small\",\"small-caps\",\"small-caption\",\"smaller\",\"solid\",\"somali\",\"source-atop\",\"source-in\",\"source-out\",\"source-over\",\"space\",\"spell-out\",\"square\",\"square-button\",\"standard\",\"start\",\"static\",\"status-bar\",\"stretch\",\"stroke\",\"sub\",\"subpixel-antialiased\",\"super\",\"sw-resize\",\"symbolic\",\"symbols\",\"table\",\"table-caption\",\"table-cell\",\"table-column\",\"table-column-group\",\"table-footer-group\",\"table-header-group\",\"table-row\",\"table-row-group\",\"tamil\",\"telugu\",\"text\",\"text-bottom\",\"text-top\",\"textarea\",\"textfield\",\"thai\",\"thick\",\"thin\",\"threeddarkshadow\",\"threedface\",\"threedhighlight\",\"threedlightshadow\",\"threedshadow\",\"tibetan\",\"tigre\",\"tigrinya-er\",\"tigrinya-er-abegede\",\"tigrinya-et\",\"tigrinya-et-abegede\",\"to\",\"top\",\"trad-chinese-formal\",\"trad-chinese-informal\",\"translate\",\"translate3d\",\"translateX\",\"translateY\",\"translateZ\",\"transparent\",\"ultra-condensed\",\"ultra-expanded\",\"underline\",\"up\",\"upper-alpha\",\"upper-armenian\",\"upper-greek\",\"upper-hexadecimal\",\"upper-latin\",\"upper-norwegian\",\"upper-roman\",\"uppercase\",\"urdu\",\"url\",\"var\",\"vertical\",\"vertical-text\",\"visible\",\"visibleFill\",\"visiblePainted\",\"visibleStroke\",\"visual\",\"w-resize\",\"wait\",\"wave\",\"wider\",\"window\",\"windowframe\",\"windowtext\",\"words\",\"x-large\",\"x-small\",\"xor\",\"xx-large\",\"xx-small\",\"bicubic\",\"optimizespeed\",\"grayscale\",\"row\",\"row-reverse\",\"wrap\",\"wrap-reverse\",\"column-reverse\",\"flex-start\",\"flex-end\",\"space-between\",\"space-around\", \"unset\"];\n\nvar wordOperatorKeywords_ = [\"in\",\"and\",\"or\",\"not\",\"is not\",\"is a\",\"is\",\"isnt\",\"defined\",\"if unless\"],\n    blockKeywords_ = [\"for\",\"if\",\"else\",\"unless\", \"from\", \"to\"],\n    commonAtoms_ = [\"null\",\"true\",\"false\",\"href\",\"title\",\"type\",\"not-allowed\",\"readonly\",\"disabled\"],\n    commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\n\nvar hintWords = tagKeywords_.concat(documentTypes_,mediaTypes_,mediaFeatures_,\n                                    propertyKeywords_,nonStandardPropertyKeywords_,\n                                    colorKeywords_,valueKeywords_,fontProperties_,\n                                    wordOperatorKeywords_,blockKeywords_,\n                                    commonAtoms_,commonDef_);\n\nfunction wordRegexp(words) {\n  words = words.sort(function(a,b){return b > a;});\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\n\nfunction keySet(array) {\n  var keys = {};\n  for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\n  return keys;\n}\n\nfunction escapeRegExp(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nvar tagKeywords = keySet(tagKeywords_),\n    tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\n    propertyKeywords = keySet(propertyKeywords_),\n    nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\n    valueKeywords = keySet(valueKeywords_),\n    colorKeywords = keySet(colorKeywords_),\n    documentTypes = keySet(documentTypes_),\n    documentTypesRegexp = wordRegexp(documentTypes_),\n    mediaFeatures = keySet(mediaFeatures_),\n    mediaTypes = keySet(mediaTypes_),\n    fontProperties = keySet(fontProperties_),\n    operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\n    wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\n    blockKeywords = keySet(blockKeywords_),\n    vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\n    commonAtoms = keySet(commonAtoms_),\n    firstWordMatch = \"\",\n    states = {},\n    ch,\n    style,\n    type,\n    override;\n\n/**\n * Tokenizers\n */\nfunction tokenBase(stream, state) {\n  firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n  state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n  state.context.line.indent = stream.indentation();\n  ch = stream.peek();\n\n  // Line comment\n  if (stream.match(\"//\")) {\n    stream.skipToEnd();\n    return [\"comment\", \"comment\"];\n  }\n  // Block comment\n  if (stream.match(\"/*\")) {\n    state.tokenize = tokenCComment;\n    return tokenCComment(stream, state);\n  }\n  // String\n  if (ch == \"\\\"\" || ch == \"'\") {\n    stream.next();\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  // Def\n  if (ch == \"@\") {\n    stream.next();\n    stream.eatWhile(/[\\w\\\\-]/);\n    return [\"def\", stream.current()];\n  }\n  // ID selector or Hex color\n  if (ch == \"#\") {\n    stream.next();\n    // Hex color\n    if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) {\n      return [\"atom\", \"atom\"];\n    }\n    // ID selector\n    if (stream.match(/^[a-z][\\w-]*/i)) {\n      return [\"builtin\", \"hash\"];\n    }\n  }\n  // Vendor prefixes\n  if (stream.match(vendorPrefixesRegexp)) {\n    return [\"meta\", \"vendor-prefixes\"];\n  }\n  // Numbers\n  if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n    stream.eatWhile(/[a-z%]/i);\n    return [\"number\", \"unit\"];\n  }\n  // !important|optional\n  if (ch == \"!\") {\n    stream.next();\n    return [stream.match(/^(important|optional)/i) ? \"keyword\": \"operator\", \"important\"];\n  }\n  // Class\n  if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\n    return [\"qualifier\", \"qualifier\"];\n  }\n  // url url-prefix domain regexp\n  if (stream.match(documentTypesRegexp)) {\n    if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\n    return [\"property\", \"word\"];\n  }\n  // Mixins / Functions\n  if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n    stream.backUp(1);\n    return [\"keyword\", \"mixin\"];\n  }\n  // Block mixins\n  if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n    stream.backUp(1);\n    return [\"keyword\", \"block-mixin\"];\n  }\n  // Parent Reference BEM naming\n  if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\n    return [\"qualifier\", \"qualifier\"];\n  }\n  // / Root Reference & Parent Reference\n  if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n    stream.backUp(1);\n    return [\"variableName.special\", \"reference\"];\n  }\n  if (stream.match(/^&{1}\\s*$/)) {\n    return [\"variableName.special\", \"reference\"];\n  }\n  // Word operator\n  if (stream.match(wordOperatorKeywordsRegexp)) {\n    return [\"operator\", \"operator\"];\n  }\n  // Word\n  if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n    // Variable\n    if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n      if (!wordIsTag(stream.current())) {\n        stream.match('.');\n        return [\"variable\", \"variable-name\"];\n      }\n    }\n    return [\"variable\", \"word\"];\n  }\n  // Operators\n  if (stream.match(operatorsRegexp)) {\n    return [\"operator\", stream.current()];\n  }\n  // Delimiters\n  if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\n    stream.next();\n    return [null, ch];\n  }\n  // Non-detected items\n  stream.next();\n  return [null, null];\n}\n\n/**\n * Token comment\n */\nfunction tokenCComment(stream, state) {\n  var maybeEnd = false, ch;\n  while ((ch = stream.next()) != null) {\n    if (maybeEnd && ch == \"/\") {\n      state.tokenize = null;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return [\"comment\", \"comment\"];\n}\n\n/**\n * Token string\n */\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) {\n        if (quote == \")\") stream.backUp(1);\n        break;\n      }\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n    return [\"string\", \"string\"];\n  };\n}\n\n/**\n * Token parenthesized\n */\nfunction tokenParenthesized(stream, state) {\n  stream.next(); // Must be \"(\"\n  if (!stream.match(/\\s*[\\\"\\')]/, false))\n    state.tokenize = tokenString(\")\");\n  else\n    state.tokenize = null;\n  return [null, \"(\"];\n}\n\n/**\n * Context management\n */\nfunction Context(type, indent, prev, line) {\n  this.type = type;\n  this.indent = indent;\n  this.prev = prev;\n  this.line = line || {firstWord: \"\", indent: 0};\n}\n\nfunction pushContext(state, stream, type, indent) {\n  indent = indent >= 0 ? indent : stream.indentUnit;\n  state.context = new Context(type, stream.indentation() + indent, state.context);\n  return type;\n}\n\nfunction popContext(state, stream, currentIndent) {\n  var contextIndent = state.context.indent - stream.indentUnit;\n  currentIndent = currentIndent || false;\n  state.context = state.context.prev;\n  if (currentIndent) state.context.indent = contextIndent;\n  return state.context.type;\n}\n\nfunction pass(type, stream, state) {\n  return states[state.context.type](type, stream, state);\n}\n\nfunction popAndPass(type, stream, state, n) {\n  for (var i = n || 1; i > 0; i--)\n    state.context = state.context.prev;\n  return pass(type, stream, state);\n}\n\n\n/**\n * Parser\n */\nfunction wordIsTag(word) {\n  return word.toLowerCase() in tagKeywords;\n}\n\nfunction wordIsProperty(word) {\n  word = word.toLowerCase();\n  return word in propertyKeywords || word in fontProperties;\n}\n\nfunction wordIsBlock(word) {\n  return word.toLowerCase() in blockKeywords;\n}\n\nfunction wordIsVendorPrefix(word) {\n  return word.toLowerCase().match(vendorPrefixesRegexp);\n}\n\nfunction wordAsValue(word) {\n  var wordLC = word.toLowerCase();\n  var override = \"variable\";\n  if (wordIsTag(word)) override = \"tag\";\n  else if (wordIsBlock(word)) override = \"block-keyword\";\n  else if (wordIsProperty(word)) override = \"property\";\n  else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";\n  else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\";\n\n  // Font family\n  else if (word.match(/^[A-Z]/)) override = \"string\";\n  return override;\n}\n\nfunction typeIsBlock(type, stream) {\n  return ((endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\")) || type == \"block-mixin\");\n}\n\nfunction typeIsInterpolation(type, stream) {\n  return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n}\n\nfunction typeIsPseudo(type, stream) {\n  return type == \":\" && stream.match(/^[a-z-]+/, false);\n}\n\nfunction startOfLine(stream) {\n  return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\n}\n\nfunction endOfLine(stream) {\n  return stream.eol() || stream.match(/^\\s*$/, false);\n}\n\nfunction firstWordOfLine(line) {\n  var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n  var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n  return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n}\n\n\n/**\n * Block\n */\nstates.block = function(type, stream, state) {\n  if ((type == \"comment\" && startOfLine(stream)) ||\n      (type == \",\" && endOfLine(stream)) ||\n      type == \"mixin\") {\n    return pushContext(state, stream, \"block\", 0);\n  }\n  if (typeIsInterpolation(type, stream)) {\n    return pushContext(state, stream, \"interpolation\");\n  }\n  if (endOfLine(stream) && type == \"]\") {\n    if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n  }\n  if (typeIsBlock(type, stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"}\" && endOfLine(stream)) {\n    return pushContext(state, stream, \"block\", 0);\n  }\n  if (type == \"variable-name\") {\n    if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"variableName\");\n    }\n    else {\n      return pushContext(state, stream, \"variableName\", 0);\n    }\n  }\n  if (type == \"=\") {\n    if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"*\") {\n    if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/,false)) {\n      override = \"tag\";\n      return pushContext(state, stream, \"block\");\n    }\n  }\n  if (typeIsPseudo(type, stream)) {\n    return pushContext(state, stream, \"pseudo\");\n  }\n  if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n    return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n  }\n  if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n    return pushContext(state, stream, \"keyframes\");\n  }\n  if (/@extends?/.test(type)) {\n    return pushContext(state, stream, \"extend\", 0);\n  }\n  if (type && type.charAt(0) == \"@\") {\n\n    // Property Lookup\n    if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\n      override = \"variable\";\n      return \"block\";\n    }\n    if (/(@import|@require|@charset)/.test(type)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"reference\" && endOfLine(stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"(\") {\n    return pushContext(state, stream, \"parens\");\n  }\n\n  if (type == \"vendor-prefixes\") {\n    return pushContext(state, stream, \"vendorPrefixes\");\n  }\n  if (type == \"word\") {\n    var word = stream.current();\n    override = wordAsValue(word);\n\n    if (override == \"property\") {\n      if (startOfLine(stream)) {\n        return pushContext(state, stream, \"block\", 0);\n      } else {\n        override = \"atom\";\n        return \"block\";\n      }\n    }\n\n    if (override == \"tag\") {\n\n      // tag is a css value\n      if (/embed|menu|pre|progress|sub|table/.test(word)) {\n        if (wordIsProperty(firstWordOfLine(stream))) {\n          override = \"atom\";\n          return \"block\";\n        }\n      }\n\n      // tag is an attribute\n      if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word +\"\\\\s*\\\\]\"))) {\n        override = \"atom\";\n        return \"block\";\n      }\n\n      // tag is a variable\n      if (tagVariablesRegexp.test(word)) {\n        if ((startOfLine(stream) && stream.string.match(/=/)) ||\n            (!startOfLine(stream) &&\n             !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) &&\n             !wordIsTag(firstWordOfLine(stream)))) {\n          override = \"variable\";\n          if (wordIsBlock(firstWordOfLine(stream)))  return \"block\";\n          return pushContext(state, stream, \"block\", 0);\n        }\n      }\n\n      if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    }\n    if (override == \"block-keyword\") {\n      override = \"keyword\";\n\n      // Postfix conditionals\n      if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\n        return \"block\";\n      }\n      return pushContext(state, stream, \"block\");\n    }\n    if (word == \"return\") return pushContext(state, stream, \"block\", 0);\n\n    // Placeholder selector\n    if (override == \"variable\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\n      return pushContext(state, stream, \"block\");\n    }\n  }\n  return state.context.type;\n};\n\n\n/**\n * Parens\n */\nstates.parens = function(type, stream, state) {\n  if (type == \"(\") return pushContext(state, stream, \"parens\");\n  if (type == \")\") {\n    if (state.context.prev.type == \"parens\") {\n      return popContext(state, stream);\n    }\n    if ((stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream)) ||\n        wordIsBlock(firstWordOfLine(stream)) ||\n        /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) ||\n        (!stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) &&\n         wordIsTag(firstWordOfLine(stream)))) {\n      return pushContext(state, stream, \"block\");\n    }\n    if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) ||\n        stream.string.match(/^\\s*(\\(|\\)|[0-9])/) ||\n        stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) ||\n        stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    else return pushContext(state, stream, \"block\", 0);\n  }\n  if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\n    override = \"variable\";\n  }\n  if (type == \"word\") {\n    var word = stream.current();\n    override = wordAsValue(word);\n    if (override == \"tag\" && tagVariablesRegexp.test(word)) {\n      override = \"variable\";\n    }\n    if (override == \"property\" || word == \"to\") override = \"atom\";\n  }\n  if (type == \"variable-name\") {\n    return pushContext(state, stream, \"variableName\");\n  }\n  if (typeIsPseudo(type, stream)) {\n    return pushContext(state, stream, \"pseudo\");\n  }\n  return state.context.type;\n};\n\n\n/**\n * Vendor prefixes\n */\nstates.vendorPrefixes = function(type, stream, state) {\n  if (type == \"word\") {\n    override = \"property\";\n    return pushContext(state, stream, \"block\", 0);\n  }\n  return popContext(state, stream);\n};\n\n\n/**\n * Pseudo\n */\nstates.pseudo = function(type, stream, state) {\n  if (!wordIsProperty(firstWordOfLine(stream.string))) {\n    stream.match(/^[a-z-]+/);\n    override = \"variableName.special\";\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    return popContext(state, stream);\n  }\n  return popAndPass(type, stream, state);\n};\n\n\n/**\n * atBlock\n */\nstates.atBlock = function(type, stream, state) {\n  if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n  if (typeIsBlock(type, stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n  if (typeIsInterpolation(type, stream)) {\n    return pushContext(state, stream, \"interpolation\");\n  }\n  if (type == \"word\") {\n    var word = stream.current().toLowerCase();\n    if (/^(only|not|and|or)$/.test(word))\n      override = \"keyword\";\n    else if (documentTypes.hasOwnProperty(word))\n      override = \"tag\";\n    else if (mediaTypes.hasOwnProperty(word))\n      override = \"attribute\";\n    else if (mediaFeatures.hasOwnProperty(word))\n      override = \"property\";\n    else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n      override = \"string.special\";\n    else override = wordAsValue(stream.current());\n    if (override == \"tag\" && endOfLine(stream)) {\n      return pushContext(state, stream, \"block\");\n    }\n  }\n  if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\n    override = \"keyword\";\n  }\n  return state.context.type;\n};\n\nstates.atBlock_parens = function(type, stream, state) {\n  if (type == \"{\" || type == \"}\") return state.context.type;\n  if (type == \")\") {\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    else return pushContext(state, stream, \"atBlock\");\n  }\n  if (type == \"word\") {\n    var word = stream.current().toLowerCase();\n    override = wordAsValue(word);\n    if (/^(max|min)/.test(word)) override = \"property\";\n    if (override == \"tag\") {\n      tagVariablesRegexp.test(word) ? override = \"variable\" : override = \"atom\";\n    }\n    return state.context.type;\n  }\n  return states.atBlock(type, stream, state);\n};\n\n\n/**\n * Keyframes\n */\nstates.keyframes = function(type, stream, state) {\n  if (stream.indentation() == \"0\" && ((type == \"}\" && startOfLine(stream)) || type == \"]\" || type == \"hash\"\n                                      || type == \"qualifier\" || wordIsTag(stream.current()))) {\n    return popAndPass(type, stream, state);\n  }\n  if (type == \"{\") return pushContext(state, stream, \"keyframes\");\n  if (type == \"}\") {\n    if (startOfLine(stream)) return popContext(state, stream, true);\n    else return pushContext(state, stream, \"keyframes\");\n  }\n  if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\n    return pushContext(state, stream, \"keyframes\");\n  }\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n    if (override == \"block-keyword\") {\n      override = \"keyword\";\n      return pushContext(state, stream, \"keyframes\");\n    }\n  }\n  if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n    return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n  }\n  if (type == \"mixin\") {\n    return pushContext(state, stream, \"block\", 0);\n  }\n  return state.context.type;\n};\n\n\n/**\n * Interpolation\n */\nstates.interpolation = function(type, stream, state) {\n  if (type == \"{\") popContext(state, stream) && pushContext(state, stream, \"block\");\n  if (type == \"}\") {\n    if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) ||\n        (stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream)))) {\n      return pushContext(state, stream, \"block\");\n    }\n    if (!stream.string.match(/^(\\{|\\s*\\&)/) ||\n        stream.match(/\\s*[\\w-]/,false)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"variable-name\") {\n    return pushContext(state, stream, \"variableName\", 0);\n  }\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n    if (override == \"tag\") override = \"atom\";\n  }\n  return state.context.type;\n};\n\n\n/**\n * Extend/s\n */\nstates.extend = function(type, stream, state) {\n  if (type == \"[\" || type == \"=\") return \"extend\";\n  if (type == \"]\") return popContext(state, stream);\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n    return \"extend\";\n  }\n  return popContext(state, stream);\n};\n\n\n/**\n * Variable name\n */\nstates.variableName = function(type, stream, state) {\n  if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n    if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable\";\n    return \"variableName\";\n  }\n  return popAndPass(type, stream, state);\n};\n\nexport const stylus = {\n  name: \"stylus\",\n  startState: function() {\n    return {\n      tokenize: null,\n      state: \"block\",\n      context: new Context(\"block\", 0, null)\n    };\n  },\n  token: function(stream, state) {\n    if (!state.tokenize && stream.eatSpace()) return null;\n    style = (state.tokenize || tokenBase)(stream, state);\n    if (style && typeof style == \"object\") {\n      type = style[1];\n      style = style[0];\n    }\n    override = style;\n    state.state = states[state.state](type, stream, state);\n    return override;\n  },\n  indent: function(state, textAfter, iCx) {\n    var cx = state.context,\n        ch = textAfter && textAfter.charAt(0),\n        indent = cx.indent,\n        lineFirstWord = firstWordOfLine(textAfter),\n        lineIndent = cx.line.indent,\n        prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\n        prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n\n    if (cx.prev &&\n        (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") ||\n         ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n         ch == \"{\" && (cx.type == \"at\"))) {\n      indent = cx.indent - iCx.unit;\n    } else if (!(/(\\})/.test(ch))) {\n      if (/@|\\$|\\d/.test(ch) ||\n          /^\\{/.test(textAfter) ||\n/^\\s*\\/(\\/|\\*)/.test(textAfter) ||\n          /^\\s*\\/\\*/.test(prevLineFirstWord) ||\n          /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) ||\n          /^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) ||\n          /^return/.test(textAfter) ||\n          wordIsBlock(lineFirstWord)) {\n        indent = lineIndent;\n      } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\n        if (/\\,\\s*$/.test(prevLineFirstWord)) {\n          indent = prevLineIndent;\n        } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord)) {\n          indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\n        } else {\n          indent = lineIndent;\n        }\n      } else if (!/,\\s*$/.test(textAfter) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\n        if (wordIsBlock(prevLineFirstWord)) {\n          indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\n        } else if (/^\\{/.test(prevLineFirstWord)) {\n          indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + iCx.unit;\n        } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\n          indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n        } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) ||\n                   /=\\s*$/.test(prevLineFirstWord) ||\n                   wordIsTag(prevLineFirstWord) ||\n                   /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\n          indent = prevLineIndent + iCx.unit;\n        } else {\n          indent = lineIndent;\n        }\n      }\n    }\n    return indent;\n  },\n  languageData: {\n    indentOnInput: /^\\s*\\}$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n    autocomplete: hintWords\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}