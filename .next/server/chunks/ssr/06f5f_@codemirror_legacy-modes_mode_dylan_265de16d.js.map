{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/dylan.js"],"sourcesContent":["function forEach(arr, f) {\n  for (var i = 0; i < arr.length; i++) f(arr[i], i)\n}\nfunction some(arr, f) {\n  for (var i = 0; i < arr.length; i++) if (f(arr[i], i)) return true\n  return false\n}\n\n// Words\nvar words = {\n  // Words that introduce unnamed definitions like \"define interface\"\n  unnamedDefinition: [\"interface\"],\n\n  // Words that introduce simple named definitions like \"define library\"\n  namedDefinition: [\"module\", \"library\", \"macro\",\n                    \"C-struct\", \"C-union\",\n                    \"C-function\", \"C-callable-wrapper\"\n                   ],\n\n  // Words that introduce type definitions like \"define class\".\n  // These are also parameterized like \"define method\" and are\n  // appended to otherParameterizedDefinitionWords\n  typeParameterizedDefinition: [\"class\", \"C-subtype\", \"C-mapped-subtype\"],\n\n  // Words that introduce trickier definitions like \"define method\".\n  // These require special definitions to be added to startExpressions\n  otherParameterizedDefinition: [\"method\", \"function\",\n                                 \"C-variable\", \"C-address\"\n                                ],\n\n  // Words that introduce module constant definitions.\n  // These must also be simple definitions and are\n  // appended to otherSimpleDefinitionWords\n  constantSimpleDefinition: [\"constant\"],\n\n  // Words that introduce module variable definitions.\n  // These must also be simple definitions and are\n  // appended to otherSimpleDefinitionWords\n  variableSimpleDefinition: [\"variable\"],\n\n  // Other words that introduce simple definitions\n  // (without implicit bodies).\n  otherSimpleDefinition: [\"generic\", \"domain\",\n                          \"C-pointer-type\",\n                          \"table\"\n                         ],\n\n  // Words that begin statements with implicit bodies.\n  statement: [\"if\", \"block\", \"begin\", \"method\", \"case\",\n              \"for\", \"select\", \"when\", \"unless\", \"until\",\n              \"while\", \"iterate\", \"profiling\", \"dynamic-bind\"\n             ],\n\n  // Patterns that act as separators in compound statements.\n  // This may include any general pattern that must be indented\n  // specially.\n  separator: [\"finally\", \"exception\", \"cleanup\", \"else\",\n              \"elseif\", \"afterwards\"\n             ],\n\n  // Keywords that do not require special indentation handling,\n  // but which should be highlighted\n  other: [\"above\", \"below\", \"by\", \"from\", \"handler\", \"in\",\n          \"instance\", \"let\", \"local\", \"otherwise\", \"slot\",\n          \"subclass\", \"then\", \"to\", \"keyed-by\", \"virtual\"\n         ],\n\n  // Condition signaling function calls\n  signalingCalls: [\"signal\", \"error\", \"cerror\",\n                   \"break\", \"check-type\", \"abort\"\n                  ]\n};\n\nwords[\"otherDefinition\"] =\n  words[\"unnamedDefinition\"]\n  .concat(words[\"namedDefinition\"])\n  .concat(words[\"otherParameterizedDefinition\"]);\n\nwords[\"definition\"] =\n  words[\"typeParameterizedDefinition\"]\n  .concat(words[\"otherDefinition\"]);\n\nwords[\"parameterizedDefinition\"] =\n  words[\"typeParameterizedDefinition\"]\n  .concat(words[\"otherParameterizedDefinition\"]);\n\nwords[\"simpleDefinition\"] =\n  words[\"constantSimpleDefinition\"]\n  .concat(words[\"variableSimpleDefinition\"])\n  .concat(words[\"otherSimpleDefinition\"]);\n\nwords[\"keyword\"] =\n  words[\"statement\"]\n  .concat(words[\"separator\"])\n  .concat(words[\"other\"]);\n\n// Patterns\nvar symbolPattern = \"[-_a-zA-Z?!*@<>$%]+\";\nvar symbol = new RegExp(\"^\" + symbolPattern);\nvar patterns = {\n  // Symbols with special syntax\n  symbolKeyword: symbolPattern + \":\",\n  symbolClass: \"<\" + symbolPattern + \">\",\n  symbolGlobal: \"\\\\*\" + symbolPattern + \"\\\\*\",\n  symbolConstant: \"\\\\$\" + symbolPattern\n};\nvar patternStyles = {\n  symbolKeyword: \"atom\",\n  symbolClass: \"tag\",\n  symbolGlobal: \"variableName.standard\",\n  symbolConstant: \"variableName.constant\"\n};\n\n// Compile all patterns to regular expressions\nfor (var patternName in patterns)\n  if (patterns.hasOwnProperty(patternName))\n    patterns[patternName] = new RegExp(\"^\" + patterns[patternName]);\n\n// Names beginning \"with-\" and \"without-\" are commonly\n// used as statement macro\npatterns[\"keyword\"] = [/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];\n\nvar styles = {};\nstyles[\"keyword\"] = \"keyword\";\nstyles[\"definition\"] = \"def\";\nstyles[\"simpleDefinition\"] = \"def\";\nstyles[\"signalingCalls\"] = \"builtin\";\n\n// protected words lookup table\nvar wordLookup = {};\nvar styleLookup = {};\n\nforEach([\n  \"keyword\",\n  \"definition\",\n  \"simpleDefinition\",\n  \"signalingCalls\"\n], function(type) {\n  forEach(words[type], function(word) {\n    wordLookup[word] = type;\n    styleLookup[word] = styles[type];\n  });\n});\n\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  // String\n  var ch = stream.peek();\n  if (ch == \"'\" || ch == '\"') {\n    stream.next();\n    return chain(stream, state, tokenString(ch, \"string\"));\n  }\n  // Comment\n  else if (ch == \"/\") {\n    stream.next();\n    if (stream.eat(\"*\")) {\n      return chain(stream, state, tokenComment);\n    } else if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    stream.backUp(1);\n  }\n  // Decimal\n  else if (/[+\\-\\d\\.]/.test(ch)) {\n    if (stream.match(/^[+-]?[0-9]*\\.[0-9]*([esdx][+-]?[0-9]+)?/i) ||\n        stream.match(/^[+-]?[0-9]+([esdx][+-]?[0-9]+)/i) ||\n        stream.match(/^[+-]?\\d+/)) {\n      return \"number\";\n    }\n  }\n  // Hash\n  else if (ch == \"#\") {\n    stream.next();\n    // Symbol with string syntax\n    ch = stream.peek();\n    if (ch == '\"') {\n      stream.next();\n      return chain(stream, state, tokenString('\"', \"string\"));\n    }\n    // Binary number\n    else if (ch == \"b\") {\n      stream.next();\n      stream.eatWhile(/[01]/);\n      return \"number\";\n    }\n    // Hex number\n    else if (ch == \"x\") {\n      stream.next();\n      stream.eatWhile(/[\\da-f]/i);\n      return \"number\";\n    }\n    // Octal number\n    else if (ch == \"o\") {\n      stream.next();\n      stream.eatWhile(/[0-7]/);\n      return \"number\";\n    }\n    // Token concatenation in macros\n    else if (ch == '#') {\n      stream.next();\n      return \"punctuation\";\n    }\n    // Sequence literals\n    else if ((ch == '[') || (ch == '(')) {\n      stream.next();\n      return \"bracket\";\n      // Hash symbol\n    } else if (stream.match(/f|t|all-keys|include|key|next|rest/i)) {\n      return \"atom\";\n    } else {\n      stream.eatWhile(/[-a-zA-Z]/);\n      return \"error\";\n    }\n  } else if (ch == \"~\") {\n    stream.next();\n    ch = stream.peek();\n    if (ch == \"=\") {\n      stream.next();\n      ch = stream.peek();\n      if (ch == \"=\") {\n        stream.next();\n        return \"operator\";\n      }\n      return \"operator\";\n    }\n    return \"operator\";\n  } else if (ch == \":\") {\n    stream.next();\n    ch = stream.peek();\n    if (ch == \"=\") {\n      stream.next();\n      return \"operator\";\n    } else if (ch == \":\") {\n      stream.next();\n      return \"punctuation\";\n    }\n  } else if (\"[](){}\".indexOf(ch) != -1) {\n    stream.next();\n    return \"bracket\";\n  } else if (\".,\".indexOf(ch) != -1) {\n    stream.next();\n    return \"punctuation\";\n  } else if (stream.match(\"end\")) {\n    return \"keyword\";\n  }\n  for (var name in patterns) {\n    if (patterns.hasOwnProperty(name)) {\n      var pattern = patterns[name];\n      if ((pattern instanceof Array && some(pattern, function(p) {\n        return stream.match(p);\n      })) || stream.match(pattern))\n        return patternStyles[name];\n    }\n  }\n  if (/[+\\-*\\/^=<>&|]/.test(ch)) {\n    stream.next();\n    return \"operator\";\n  }\n  if (stream.match(\"define\")) {\n    return \"def\";\n  } else {\n    stream.eatWhile(/[\\w\\-]/);\n    // Keyword\n    if (wordLookup.hasOwnProperty(stream.current())) {\n      return styleLookup[stream.current()];\n    } else if (stream.current().match(symbol)) {\n      return \"variable\";\n    } else {\n      stream.next();\n      return \"variableName.standard\";\n    }\n  }\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, maybeNested = false, nestedCount = 0, ch;\n  while ((ch = stream.next())) {\n    if (ch == \"/\" && maybeEnd) {\n      if (nestedCount > 0) {\n        nestedCount--;\n      } else {\n        state.tokenize = tokenBase;\n        break;\n      }\n    } else if (ch == \"*\" && maybeNested) {\n      nestedCount++;\n    }\n    maybeEnd = (ch == \"*\");\n    maybeNested = (ch == \"/\");\n  }\n  return \"comment\";\n}\n\nfunction tokenString(quote, style) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !escaped) {\n      state.tokenize = tokenBase;\n    }\n    return style;\n  };\n}\n\n// Interface\nexport const dylan = {\n  name: \"dylan\",\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      currentIndent: 0\n    };\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace())\n      return null;\n    var style = state.tokenize(stream, state);\n    return style;\n  },\n  languageData: {\n    commentTokens: {block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n\n"],"names":[],"mappings":"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","ignoreList":[0]}