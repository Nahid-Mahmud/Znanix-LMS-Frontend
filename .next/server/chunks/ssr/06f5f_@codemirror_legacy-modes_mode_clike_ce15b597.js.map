{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/clike.js"],"sourcesContent":["function Context(indented, column, type, info, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.info = info;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type, info) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\" && type != \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, info, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\nfunction typeBefore(stream, state, pos) {\n  if (state.prevToken == \"variable\" || state.prevToken == \"type\") return true;\n  if (/\\S(?:[^- ]>|[*\\]])\\s*$|\\*$/.test(stream.string.slice(0, pos))) return true;\n  if (state.typeAtEndOfLine && stream.column() == stream.indentation()) return true;\n}\n\nfunction isTopScope(context) {\n  for (;;) {\n    if (!context || context.type == \"top\") return true;\n    if (context.type == \"}\" && context.prev.info != \"namespace\") return false;\n    context = context.prev;\n  }\n}\n\nexport function clike(parserConfig) {\n  var statementIndentUnit = parserConfig.statementIndentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      types = parserConfig.types || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      defKeywords = parserConfig.defKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false,\n      indentSwitch = parserConfig.indentSwitch !== false,\n      namespaceSeparator = parserConfig.namespaceSeparator,\n      isPunctuationChar = parserConfig.isPunctuationChar || /[\\[\\]{}\\(\\),;\\:\\.]/,\n      numberStart = parserConfig.numberStart || /[\\d\\.]/,\n      number = parserConfig.number || /^(?:0x[a-f\\d]+|0b[01]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:e[-+]?\\d+)?)(u|ll?|l|f)?/i,\n      isOperatorChar = parserConfig.isOperatorChar || /[+\\-*&%=<>!?|\\/]/,\n      isIdentifierChar = parserConfig.isIdentifierChar || /[\\w\\$_\\xa1-\\uffff]/,\n      // An optional function that takes a {string} token and returns true if it\n      // should be treated as a builtin.\n      isReservedIdentifier = parserConfig.isReservedIdentifier || false;\n\n  var curPunc, isDefKeyword;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (numberStart.test(ch)) {\n      stream.backUp(1)\n      if (stream.match(number)) return \"number\"\n      stream.next()\n    }\n    if (isPunctuationChar.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      while (!stream.match(/^\\/[\\/*]/, false) && stream.eat(isOperatorChar)) {}\n      return \"operator\";\n    }\n    stream.eatWhile(isIdentifierChar);\n    if (namespaceSeparator) while (stream.match(namespaceSeparator))\n      stream.eatWhile(isIdentifierChar);\n\n    var cur = stream.current();\n    if (contains(keywords, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      if (contains(defKeywords, cur)) isDefKeyword = true;\n      return \"keyword\";\n    }\n    if (contains(types, cur)) return \"type\";\n    if (contains(builtin, cur)\n        || (isReservedIdentifier && isReservedIdentifier(cur))) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (contains(atoms, cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function maybeEOL(stream, state) {\n    if (parserConfig.typeFirstDefinitions && stream.eol() && isTopScope(state.context))\n      state.typeAtEndOfLine = typeBefore(stream, state, stream.pos)\n  }\n\n  // Interface\n\n  return {\n    name: parserConfig.name,\n    startState: function(indentUnit) {\n      return {\n        tokenize: null,\n        context: new Context(-indentUnit, 0, \"top\", null, false),\n        indented: 0,\n        startOfLine: true,\n        prevToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) { maybeEOL(stream, state); return null; }\n      curPunc = isDefKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \";\" || curPunc == \":\" || (curPunc == \",\" && stream.match(/^\\s*(?:\\/\\/.*)?$/, false)))\n        while (state.context.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (indentStatements &&\n               (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != \";\") ||\n                (ctx.type == \"statement\" && curPunc == \"newstatement\"))) {\n        pushContext(state, stream.column(), \"statement\", stream.current());\n      }\n\n      if (style == \"variable\" &&\n          ((state.prevToken == \"def\" ||\n            (parserConfig.typeFirstDefinitions && typeBefore(stream, state, stream.start) &&\n             isTopScope(state.context) && stream.match(/^\\s*\\(/, false)))))\n        style = \"def\";\n\n      if (hooks.token) {\n        var result = hooks.token(stream, state, style);\n        if (result !== undefined) style = result;\n      }\n\n      if (style == \"def\" && parserConfig.styleDefs === false) style = \"variable\";\n\n      state.startOfLine = false;\n      state.prevToken = isDefKeyword ? \"def\" : style || curPunc;\n      maybeEOL(stream, state);\n      return style;\n    },\n\n    indent: function(state, textAfter, context) {\n      if (state.tokenize != tokenBase && state.tokenize != null || state.typeAtEndOfLine && isTopScope(state.context))\n        return null;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      if (parserConfig.dontIndentStatements)\n        while (ctx.type == \"statement\" && parserConfig.dontIndentStatements.test(ctx.info))\n          ctx = ctx.prev\n      if (hooks.indent) {\n        var hook = hooks.indent(state, ctx, textAfter, context.unit);\n        if (typeof hook == \"number\") return hook\n      }\n      var switchBlock = ctx.prev && ctx.prev.info == \"switch\";\n      if (parserConfig.allmanIndentation && /[{(]/.test(firstChar)) {\n        while (ctx.type != \"top\" && ctx.type != \"}\") ctx = ctx.prev\n        return ctx.indented\n      }\n      if (ctx.type == \"statement\")\n        return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit || context.unit);\n      if (ctx.align && (!dontAlignCalls || ctx.type != \")\"))\n        return ctx.column + (closing ? 0 : 1);\n      if (ctx.type == \")\" && !closing)\n        return ctx.indented + (statementIndentUnit || context.unit);\n\n      return ctx.indented + (closing ? 0 : context.unit) +\n        (!closing && switchBlock && !/^(?:case|default)\\b/.test(textAfter) ? context.unit : 0);\n    },\n\n    languageData: {\n      indentOnInput: indentSwitch ? /^\\s*(?:case .*?:|default:|\\{\\}?|\\})$/ : /^\\s*[{}]$/,\n      commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n      autocomplete: Object.keys(keywords).concat(Object.keys(types)).concat(Object.keys(builtin)).concat(Object.keys(atoms)),\n      ...parserConfig.languageData\n    }\n  };\n};\n\nfunction words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nfunction contains(words, word) {\n  if (typeof words === \"function\") {\n    return words(word);\n  } else {\n    return words.propertyIsEnumerable(word);\n  }\n}\nvar cKeywords = \"auto if break case register continue return default do sizeof \" +\n    \"static else struct switch extern typedef union for goto while enum const \" +\n    \"volatile inline restrict asm fortran\";\n\n// Keywords from https://en.cppreference.com/w/cpp/keyword includes C++20.\nvar cppKeywords = \"alignas alignof and and_eq audit axiom bitand bitor catch \" +\n    \"class compl concept constexpr const_cast decltype delete dynamic_cast \" +\n    \"explicit export final friend import module mutable namespace new noexcept \" +\n    \"not not_eq operator or or_eq override private protected public \" +\n    \"reinterpret_cast requires static_assert static_cast template this \" +\n    \"thread_local throw try typeid typename using virtual xor xor_eq\";\n\nvar objCKeywords = \"bycopy byref in inout oneway out self super atomic nonatomic retain copy \" +\n    \"readwrite readonly strong weak assign typeof nullable nonnull null_resettable _cmd \" +\n    \"@interface @implementation @end @protocol @encode @property @synthesize @dynamic @class \" +\n    \"@public @package @private @protected @required @optional @try @catch @finally @import \" +\n    \"@selector @encode @defs @synchronized @autoreleasepool @compatibility_alias @available\";\n\nvar objCBuiltins = \"FOUNDATION_EXPORT FOUNDATION_EXTERN NS_INLINE NS_FORMAT_FUNCTION \" +\n    \" NS_RETURNS_RETAINEDNS_ERROR_ENUM NS_RETURNS_NOT_RETAINED NS_RETURNS_INNER_POINTER \" +\n    \"NS_DESIGNATED_INITIALIZER NS_ENUM NS_OPTIONS NS_REQUIRES_NIL_TERMINATION \" +\n    \"NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_SWIFT_NAME NS_REFINED_FOR_SWIFT\"\n\n// Do not use this. Use the cTypes function below. This is global just to avoid\n// excessive calls when cTypes is being called multiple times during a parse.\nvar basicCTypes = words(\"int long char short double float unsigned signed \" +\n                        \"void bool\");\n\n// Do not use this. Use the objCTypes function below. This is global just to avoid\n// excessive calls when objCTypes is being called multiple times during a parse.\nvar basicObjCTypes = words(\"SEL instancetype id Class Protocol BOOL\");\n\n// Returns true if identifier is a \"C\" type.\n// C type is defined as those that are reserved by the compiler (basicTypes),\n// and those that end in _t (Reserved by POSIX for types)\n// http://www.gnu.org/software/libc/manual/html_node/Reserved-Names.html\nfunction cTypes(identifier) {\n  return contains(basicCTypes, identifier) || /.+_t$/.test(identifier);\n}\n\n// Returns true if identifier is a \"Objective C\" type.\nfunction objCTypes(identifier) {\n  return cTypes(identifier) || contains(basicObjCTypes, identifier);\n}\n\nvar cBlockKeywords = \"case do else for if switch while struct enum union\";\nvar cDefKeywords = \"struct enum union\";\n\nfunction cppHook(stream, state) {\n  if (!state.startOfLine) return false\n  for (var ch, next = null; ch = stream.peek();) {\n    if (ch == \"\\\\\" && stream.match(/^.$/)) {\n      next = cppHook\n      break\n    } else if (ch == \"/\" && stream.match(/^\\/[\\/\\*]/, false)) {\n      break\n    }\n    stream.next()\n  }\n  state.tokenize = next\n  return \"meta\"\n}\n\nfunction pointerHook(_stream, state) {\n  if (state.prevToken == \"type\") return \"type\";\n  return false;\n}\n\n// For C and C++ (and ObjC): identifiers starting with __\n// or _ followed by a capital letter are reserved for the compiler.\nfunction cIsReservedIdentifier(token) {\n  if (!token || token.length < 2) return false;\n  if (token[0] != '_') return false;\n  return (token[1] == '_') || (token[1] !== token[1].toLowerCase());\n}\n\nfunction cpp14Literal(stream) {\n  stream.eatWhile(/[\\w\\.']/);\n  return \"number\";\n}\n\nfunction cpp11StringHook(stream, state) {\n  stream.backUp(1);\n  // Raw strings.\n  if (stream.match(/^(?:R|u8R|uR|UR|LR)/)) {\n    var match = stream.match(/^\"([^\\s\\\\()]{0,16})\\(/);\n    if (!match) {\n      return false;\n    }\n    state.cpp11RawStringDelim = match[1];\n    state.tokenize = tokenRawString;\n    return tokenRawString(stream, state);\n  }\n  // Unicode strings/chars.\n  if (stream.match(/^(?:u8|u|U|L)/)) {\n    if (stream.match(/^[\"']/, /* eat */ false)) {\n      return \"string\";\n    }\n    return false;\n  }\n  // Ignore this hook.\n  stream.next();\n  return false;\n}\n\nfunction cppLooksLikeConstructor(word) {\n  var lastTwo = /(\\w+)::~?(\\w+)$/.exec(word);\n  return lastTwo && lastTwo[1] == lastTwo[2];\n}\n\n// C#-style strings where \"\" escapes a quote.\nfunction tokenAtString(stream, state) {\n  var next;\n  while ((next = stream.next()) != null) {\n    if (next == '\"' && !stream.eat('\"')) {\n      state.tokenize = null;\n      break;\n    }\n  }\n  return \"string\";\n}\n\n// C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n// <delim> can be a string up to 16 characters long.\nfunction tokenRawString(stream, state) {\n  // Escape characters that have special regex meanings.\n  var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n  var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n  if (match)\n    state.tokenize = null;\n  else\n    stream.skipToEnd();\n  return \"string\";\n}\n\nexport const c = clike({\n  name: \"c\",\n  keywords: words(cKeywords),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords),\n  defKeywords: words(cDefKeywords),\n  typeFirstDefinitions: true,\n  atoms: words(\"NULL true false\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n  }\n})\n\nexport const cpp = clike({\n  name: \"cpp\",\n  keywords: words(cKeywords + \" \" + cppKeywords),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords + \" class try catch\"),\n  defKeywords: words(cDefKeywords + \" class namespace\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false NULL nullptr\"),\n  dontIndentStatements: /^template$/,\n  isIdentifierChar: /[\\w\\$_~\\xa1-\\uffff]/,\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n    \"u\": cpp11StringHook,\n    \"U\": cpp11StringHook,\n    \"L\": cpp11StringHook,\n    \"R\": cpp11StringHook,\n    \"0\": cpp14Literal,\n    \"1\": cpp14Literal,\n    \"2\": cpp14Literal,\n    \"3\": cpp14Literal,\n    \"4\": cpp14Literal,\n    \"5\": cpp14Literal,\n    \"6\": cpp14Literal,\n    \"7\": cpp14Literal,\n    \"8\": cpp14Literal,\n    \"9\": cpp14Literal,\n    token: function(stream, state, style) {\n      if (style == \"variable\" && stream.peek() == \"(\" &&\n          (state.prevToken == \";\" || state.prevToken == null ||\n           state.prevToken == \"}\") &&\n          cppLooksLikeConstructor(stream.current()))\n        return \"def\";\n    }\n  },\n  namespaceSeparator: \"::\"\n});\n\nexport const java = clike({\n  name: \"java\",\n  keywords: words(\"abstract assert break case catch class const continue default \" +\n                  \"do else enum extends final finally for goto if implements import \" +\n                  \"instanceof interface native new package private protected public \" +\n                  \"return static strictfp super switch synchronized this throw throws transient \" +\n                  \"try volatile while @interface\"),\n  types: words(\"var byte short int long float double boolean char void Boolean Byte Character Double Float \" +\n               \"Integer Long Number Object Short String StringBuffer StringBuilder Void\"),\n  blockKeywords: words(\"catch class do else finally for if switch try while\"),\n  defKeywords: words(\"class interface enum @interface\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n  hooks: {\n    \"@\": function(stream) {\n      // Don't match the @interface keyword.\n      if (stream.match('interface', false)) return false;\n\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function(stream, state) {\n      if (!stream.match(/\"\"$/)) return false;\n      state.tokenize = tokenTripleString;\n      return state.tokenize(stream, state);\n    }\n  }\n})\n\nexport const csharp = clike({\n  name: \"csharp\",\n  keywords: words(\"abstract as async await base break case catch checked class const continue\" +\n                  \" default delegate do else enum event explicit extern finally fixed for\" +\n                  \" foreach goto if implicit in init interface internal is lock namespace new\" +\n                  \" operator out override params private protected public readonly record ref required return sealed\" +\n                  \" sizeof stackalloc static struct switch this throw try typeof unchecked\" +\n                  \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" +\n                  \" global group into join let orderby partial remove select set value var yield\"),\n  types: words(\"Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func\" +\n               \" Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32\" +\n               \" UInt64 bool byte char decimal double short int long object\"  +\n               \" sbyte float string ushort uint ulong\"),\n  blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n  defKeywords: words(\"class interface namespace record struct var\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  hooks: {\n    \"@\": function(stream, state) {\n      if (stream.eat('\"')) {\n        state.tokenize = tokenAtString;\n        return tokenAtString(stream, state);\n      }\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    }\n  }\n});\n\nfunction tokenTripleString(stream, state) {\n  var escaped = false;\n  while (!stream.eol()) {\n    if (!escaped && stream.match('\"\"\"')) {\n      state.tokenize = null;\n      break;\n    }\n    escaped = stream.next() == \"\\\\\" && !escaped;\n  }\n  return \"string\";\n}\n\nfunction tokenNestedComment(depth) {\n  return function (stream, state) {\n    var ch\n    while (ch = stream.next()) {\n      if (ch == \"*\" && stream.eat(\"/\")) {\n        if (depth == 1) {\n          state.tokenize = null\n          break\n        } else {\n          state.tokenize = tokenNestedComment(depth - 1)\n          return state.tokenize(stream, state)\n        }\n      } else if (ch == \"/\" && stream.eat(\"*\")) {\n        state.tokenize = tokenNestedComment(depth + 1)\n        return state.tokenize(stream, state)\n      }\n    }\n    return \"comment\"\n  }\n}\n\nexport const scala = clike({\n  name: \"scala\",\n  keywords: words(\n    /* scala */\n    \"abstract case catch class def do else extends final finally for forSome if \" +\n      \"implicit import lazy match new null object override package private protected return \" +\n      \"sealed super this throw trait try type val var while with yield _ \" +\n\n    /* package scala */\n    \"assert assume require print println printf readLine readBoolean readByte readShort \" +\n      \"readChar readInt readLong readFloat readDouble\"\n  ),\n  types: words(\n    \"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" +\n      \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable \" +\n      \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" +\n      \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" +\n      \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector \" +\n\n    /* package java.lang */\n    \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n  ),\n  multiLineStrings: true,\n  blockKeywords: words(\"catch class enum do else finally for forSome if match switch try while\"),\n  defKeywords: words(\"class enum def object package trait type val var\"),\n  atoms: words(\"true false null\"),\n  indentStatements: false,\n  indentSwitch: false,\n  isOperatorChar: /[+\\-*&%=<>!?|\\/#:@]/,\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function(stream, state) {\n      if (!stream.match('\"\"')) return false;\n      state.tokenize = tokenTripleString;\n      return state.tokenize(stream, state);\n    },\n    \"'\": function(stream) {\n      if (stream.match(/^(\\\\[^'\\s]+|[^\\\\'])'/)) return \"character\"\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      return \"atom\";\n    },\n    \"=\": function(stream, state) {\n      var cx = state.context\n      if (cx.type == \"}\" && cx.align && stream.eat(\">\")) {\n        state.context = new Context(cx.indented, cx.column, cx.type, cx.info, null, cx.prev)\n        return \"operator\"\n      } else {\n        return false\n      }\n    },\n\n    \"/\": function(stream, state) {\n      if (!stream.eat(\"*\")) return false\n      state.tokenize = tokenNestedComment(1)\n      return state.tokenize(stream, state)\n    }\n  },\n  languageData: {\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']}\n  }\n});\n\nfunction tokenKotlinString(tripleString){\n  return function (stream, state) {\n    var escaped = false, next, end = false;\n    while (!stream.eol()) {\n      if (!tripleString && !escaped && stream.match('\"') ) {end = true; break;}\n      if (tripleString && stream.match('\"\"\"')) {end = true; break;}\n      next = stream.next();\n      if(!escaped && next == \"$\" && stream.match('{'))\n        stream.skipTo(\"}\");\n      escaped = !escaped && next == \"\\\\\" && !tripleString;\n    }\n    if (end || !tripleString)\n      state.tokenize = null;\n    return \"string\";\n  }\n}\n\nexport const kotlin = clike({\n  name: \"kotlin\",\n  keywords: words(\n    /*keywords*/\n    \"package as typealias class interface this super val operator \" +\n      \"var fun for is in This throw return annotation \" +\n      \"break continue object if else while do try when !in !is as? \" +\n\n    /*soft keywords*/\n    \"file import where by get set abstract enum open inner override private public internal \" +\n      \"protected catch finally out final vararg reified dynamic companion constructor init \" +\n      \"sealed field property receiver param sparam lateinit data inline noinline tailrec \" +\n      \"external annotation crossinline const operator infix suspend actual expect setparam\"\n  ),\n  types: words(\n    /* package java.lang */\n    \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void Annotation Any BooleanArray \" +\n      \"ByteArray Char CharArray DeprecationLevel DoubleArray Enum FloatArray Function Int IntArray Lazy \" +\n      \"LazyThreadSafetyMode LongArray Nothing ShortArray Unit\"\n  ),\n  intendSwitch: false,\n  indentStatements: false,\n  multiLineStrings: true,\n  number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+(\\.\\d+)?|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n  blockKeywords: words(\"catch class do else finally for if where try while enum\"),\n  defKeywords: words(\"class val var object interface fun\"),\n  atoms: words(\"true false null this\"),\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '*': function(_stream, state) {\n      return state.prevToken == '.' ? 'variable' : 'operator';\n    },\n    '\"': function(stream, state) {\n      state.tokenize = tokenKotlinString(stream.match('\"\"'));\n      return state.tokenize(stream, state);\n    },\n    \"/\": function(stream, state) {\n      if (!stream.eat(\"*\")) return false;\n      state.tokenize = tokenNestedComment(1);\n      return state.tokenize(stream, state)\n    },\n    indent: function(state, ctx, textAfter, indentUnit) {\n      var firstChar = textAfter && textAfter.charAt(0);\n      if ((state.prevToken == \"}\" || state.prevToken == \")\") && textAfter == \"\")\n        return state.indented;\n      if ((state.prevToken == \"operator\" && textAfter != \"}\" && state.context.type != \"}\") ||\n          state.prevToken == \"variable\" && firstChar == \".\" ||\n          (state.prevToken == \"}\" || state.prevToken == \")\") && firstChar == \".\")\n        return indentUnit * 2 + ctx.indented;\n      if (ctx.align && ctx.type == \"}\")\n        return ctx.indented + (state.context.type == (textAfter || \"\").charAt(0) ? 0 : indentUnit);\n    }\n  },\n  languageData: {\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']}\n  }\n});\n\nexport const shader = clike({\n  name: \"shader\",\n  keywords: words(\"sampler1D sampler2D sampler3D samplerCube \" +\n                  \"sampler1DShadow sampler2DShadow \" +\n                  \"const attribute uniform varying \" +\n                  \"break continue discard return \" +\n                  \"for while do if else struct \" +\n                  \"in out inout\"),\n  types: words(\"float int bool void \" +\n               \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" +\n               \"mat2 mat3 mat4\"),\n  blockKeywords: words(\"for while do if else struct\"),\n  builtin: words(\"radians degrees sin cos tan asin acos atan \" +\n                 \"pow exp log exp2 sqrt inversesqrt \" +\n                 \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" +\n                 \"length distance dot cross normalize ftransform faceforward \" +\n                 \"reflect refract matrixCompMult \" +\n                 \"lessThan lessThanEqual greaterThan greaterThanEqual \" +\n                 \"equal notEqual any all not \" +\n                 \"texture1D texture1DProj texture1DLod texture1DProjLod \" +\n                 \"texture2D texture2DProj texture2DLod texture2DProjLod \" +\n                 \"texture3D texture3DProj texture3DLod texture3DProjLod \" +\n                 \"textureCube textureCubeLod \" +\n                 \"shadow1D shadow2D shadow1DProj shadow2DProj \" +\n                 \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" +\n                 \"dFdx dFdy fwidth \" +\n                 \"noise1 noise2 noise3 noise4\"),\n  atoms: words(\"true false \" +\n               \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" +\n               \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" +\n               \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" +\n               \"gl_FogCoord gl_PointCoord \" +\n               \"gl_Position gl_PointSize gl_ClipVertex \" +\n               \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" +\n               \"gl_TexCoord gl_FogFragCoord \" +\n               \"gl_FragCoord gl_FrontFacing \" +\n               \"gl_FragData gl_FragDepth \" +\n               \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" +\n               \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" +\n               \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" +\n               \"gl_TextureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" +\n               \"gl_ProjectionMatrixInverseTranspose \" +\n               \"gl_ModelViewProjectionMatrixInverseTranspose \" +\n               \"gl_TextureMatrixInverseTranspose \" +\n               \"gl_NormalScale gl_DepthRange gl_ClipPlane \" +\n               \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" +\n               \"gl_FrontLightModelProduct gl_BackLightModelProduct \" +\n               \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" +\n               \"gl_FogParameters \" +\n               \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" +\n               \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" +\n               \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" +\n               \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" +\n               \"gl_MaxDrawBuffers\"),\n  indentSwitch: false,\n  hooks: {\"#\": cppHook}\n})\n\nexport const nesC = clike({\n  name: \"nesc\",\n  keywords: words(cKeywords + \" as atomic async call command component components configuration event generic \" +\n                  \"implementation includes interface module new norace nx_struct nx_union post provides \" +\n                  \"signal task uses abstract extends\"),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords),\n  atoms: words(\"null true false\"),\n  hooks: {\"#\": cppHook}\n})\n\nexport const objectiveC = clike({\n  name: \"objectivec\",\n  keywords: words(cKeywords + \" \" + objCKeywords),\n  types: objCTypes,\n  builtin: words(objCBuiltins),\n  blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized\"),\n  defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class\"),\n  dontIndentStatements: /^@.*$/,\n  typeFirstDefinitions: true,\n  atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n  }\n})\n\nexport const objectiveCpp = clike({\n  name: \"objectivecpp\",\n  keywords: words(cKeywords + \" \" + objCKeywords + \" \" + cppKeywords),\n  types: objCTypes,\n  builtin: words(objCBuiltins),\n  blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized class try catch\"),\n  defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class class namespace\"),\n  dontIndentStatements: /^@.*$|^template$/,\n  typeFirstDefinitions: true,\n  atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n    \"u\": cpp11StringHook,\n    \"U\": cpp11StringHook,\n    \"L\": cpp11StringHook,\n    \"R\": cpp11StringHook,\n    \"0\": cpp14Literal,\n    \"1\": cpp14Literal,\n    \"2\": cpp14Literal,\n    \"3\": cpp14Literal,\n    \"4\": cpp14Literal,\n    \"5\": cpp14Literal,\n    \"6\": cpp14Literal,\n    \"7\": cpp14Literal,\n    \"8\": cpp14Literal,\n    \"9\": cpp14Literal,\n    token: function(stream, state, style) {\n      if (style == \"variable\" && stream.peek() == \"(\" &&\n          (state.prevToken == \";\" || state.prevToken == null ||\n           state.prevToken == \"}\") &&\n          cppLooksLikeConstructor(stream.current()))\n        return \"def\";\n    }\n  },\n  namespaceSeparator: \"::\"\n})\n\nexport const squirrel = clike({\n  name: \"squirrel\",\n  keywords: words(\"base break clone continue const default delete enum extends function in class\" +\n                  \" foreach local resume return this throw typeof yield constructor instanceof static\"),\n  types: cTypes,\n  blockKeywords: words(\"case catch class else for foreach if switch try while\"),\n  defKeywords: words(\"function local class\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  hooks: {\"#\": cppHook}\n})\n\n// Ceylon Strings need to deal with interpolation\nvar stringTokenizer = null;\nfunction tokenCeylonString(type) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"') &&\n          (type == \"single\" || stream.match('\"\"'))) {\n        end = true;\n        break;\n      }\n      if (!escaped && stream.match('``')) {\n        stringTokenizer = tokenCeylonString(type);\n        end = true;\n        break;\n      }\n      next = stream.next();\n      escaped = type == \"single\" && !escaped && next == \"\\\\\";\n    }\n    if (end)\n      state.tokenize = null;\n    return \"string\";\n  }\n}\n\nexport const ceylon = clike({\n  name: \"ceylon\",\n  keywords: words(\"abstracts alias assembly assert assign break case catch class continue dynamic else\" +\n                  \" exists extends finally for function given if import in interface is let module new\" +\n                  \" nonempty object of out outer package return satisfies super switch then this throw\" +\n                  \" try value void while\"),\n  types: function(word) {\n    // In Ceylon all identifiers that start with an uppercase are types\n    var first = word.charAt(0);\n    return (first === first.toUpperCase() && first !== first.toLowerCase());\n  },\n  blockKeywords: words(\"case catch class dynamic else finally for function if interface module new object switch try while\"),\n  defKeywords: words(\"class dynamic function interface module object package value\"),\n  builtin: words(\"abstract actual aliased annotation by default deprecated doc final formal late license\" +\n                 \" native optional sealed see serializable shared suppressWarnings tagged throws variable\"),\n  isPunctuationChar: /[\\[\\]{}\\(\\),;\\:\\.`]/,\n  isOperatorChar: /[+\\-*&%=<>!?|^~:\\/]/,\n  numberStart: /[\\d#$]/,\n  number: /^(?:#[\\da-fA-F_]+|\\$[01_]+|[\\d_]+[kMGTPmunpf]?|[\\d_]+\\.[\\d_]+(?:[eE][-+]?\\d+|[kMGTPmunpf]|)|)/i,\n  multiLineStrings: true,\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null larger smaller equal empty finished\"),\n  indentSwitch: false,\n  styleDefs: false,\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function(stream, state) {\n      state.tokenize = tokenCeylonString(stream.match('\"\"') ? \"triple\" : \"single\");\n      return state.tokenize(stream, state);\n    },\n    '`': function(stream, state) {\n      if (!stringTokenizer || !stream.match('`')) return false;\n      state.tokenize = stringTokenizer;\n      stringTokenizer = null;\n      return state.tokenize(stream, state);\n    },\n    \"'\": function(stream) {\n      if (stream.match(/^(\\\\[^'\\s]+|[^\\\\'])'/)) return \"string.special\"\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      return \"atom\";\n    },\n    token: function(_stream, state, style) {\n      if ((style == \"variable\" || style == \"type\") &&\n          state.prevToken == \".\") {\n        return \"variableName.special\";\n      }\n    }\n  },\n  languageData: {\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']}\n  }\n})\n\nfunction pushInterpolationStack(state) {\n  (state.interpolationStack || (state.interpolationStack = [])).push(state.tokenize);\n}\n\nfunction popInterpolationStack(state) {\n  return (state.interpolationStack || (state.interpolationStack = [])).pop();\n}\n\nfunction sizeInterpolationStack(state) {\n  return state.interpolationStack ? state.interpolationStack.length : 0;\n}\n\nfunction tokenDartString(quote, stream, state, raw) {\n  var tripleQuoted = false;\n  if (stream.eat(quote)) {\n    if (stream.eat(quote)) tripleQuoted = true;\n    else return \"string\"; //empty string\n  }\n  function tokenStringHelper(stream, state) {\n    var escaped = false;\n    while (!stream.eol()) {\n      if (!raw && !escaped && stream.peek() == \"$\") {\n        pushInterpolationStack(state);\n        state.tokenize = tokenInterpolation;\n        return \"string\";\n      }\n      var next = stream.next();\n      if (next == quote && !escaped && (!tripleQuoted || stream.match(quote + quote))) {\n        state.tokenize = null;\n        break;\n      }\n      escaped = !raw && !escaped && next == \"\\\\\";\n    }\n    return \"string\";\n  }\n  state.tokenize = tokenStringHelper;\n  return tokenStringHelper(stream, state);\n}\n\nfunction tokenInterpolation(stream, state) {\n  stream.eat(\"$\");\n  if (stream.eat(\"{\")) {\n    // let clike handle the content of ${...},\n    // we take over again when \"}\" appears (see hooks).\n    state.tokenize = null;\n  } else {\n    state.tokenize = tokenInterpolationIdentifier;\n  }\n  return null;\n}\n\nfunction tokenInterpolationIdentifier(stream, state) {\n  stream.eatWhile(/[\\w_]/);\n  state.tokenize = popInterpolationStack(state);\n  return \"variable\";\n}\n\nexport const dart = clike({\n  name: \"dart\",\n  keywords: words(\"this super static final const abstract class extends external factory \" +\n                  \"implements mixin get native set typedef with enum throw rethrow assert break case \" +\n                  \"continue default in return new deferred async await covariant try catch finally \" +\n                  \"do else for if switch while import library export part of show hide is as extension \" +\n                  \"on yield late required sealed base interface when inline\"),\n  blockKeywords: words(\"try catch finally do else for if switch while\"),\n  builtin: words(\"void bool num int double dynamic var String Null Never\"),\n  atoms: words(\"true false null\"),\n  // clike numbers without the suffixes, and with '_' separators.\n  number: /^(?:0x[a-f\\d_]+|(?:[\\d_]+\\.?[\\d_]*|\\.[\\d_]+)(?:e[-+]?[\\d_]+)?)/i,\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_\\.]/);\n      return \"meta\";\n    },\n\n    // custom string handling to deal with triple-quoted strings and string interpolation\n    \"'\": function(stream, state) {\n      return tokenDartString(\"'\", stream, state, false);\n    },\n    \"\\\"\": function(stream, state) {\n      return tokenDartString(\"\\\"\", stream, state, false);\n    },\n    \"r\": function(stream, state) {\n      var peek = stream.peek();\n      if (peek == \"'\" || peek == \"\\\"\") {\n        return tokenDartString(stream.next(), stream, state, true);\n      }\n      return false;\n    },\n\n    \"}\": function(_stream, state) {\n      // \"}\" is end of interpolation, if interpolation stack is non-empty\n      if (sizeInterpolationStack(state) > 0) {\n        state.tokenize = popInterpolationStack(state);\n        return null;\n      }\n      return false;\n    },\n\n    \"/\": function(stream, state) {\n      if (!stream.eat(\"*\")) return false\n      state.tokenize = tokenNestedComment(1)\n      return state.tokenize(stream, state)\n    },\n    token: function(stream, _, style) {\n      if (style == \"variable\") {\n        // Assume uppercase symbols are classes\n        var isUpper = RegExp('^[_$]*[A-Z][a-zA-Z0-9_$]*$','g');\n        if (isUpper.test(stream.current())) {\n          return 'type';\n        }\n      }\n    }\n  }\n})\n"],"names":[],"mappings":"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","ignoreList":[0]}