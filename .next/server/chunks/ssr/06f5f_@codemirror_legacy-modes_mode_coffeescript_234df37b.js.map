{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/md/Desktop/zanix-LMS/zanix-frontend/node_modules/.pnpm/%40codemirror%2Blegacy-modes%406.5.1/node_modules/%40codemirror/legacy-modes/mode/coffeescript.js"],"sourcesContent":["var ERRORCLASS = \"error\";\n\nfunction wordRegexp(words) {\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\n\nvar operators = /^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/;\nvar delimiters = /^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/;\nvar identifiers = /^[_A-Za-z$][_A-Za-z$0-9]*/;\nvar atProp = /^@[_A-Za-z$][_A-Za-z$0-9]*/;\n\nvar wordOperators = wordRegexp([\"and\", \"or\", \"not\",\n                                \"is\", \"isnt\", \"in\",\n                                \"instanceof\", \"typeof\"]);\nvar indentKeywords = [\"for\", \"while\", \"loop\", \"if\", \"unless\", \"else\",\n                      \"switch\", \"try\", \"catch\", \"finally\", \"class\"];\nvar commonKeywords = [\"break\", \"by\", \"continue\", \"debugger\", \"delete\",\n                      \"do\", \"in\", \"of\", \"new\", \"return\", \"then\",\n                      \"this\", \"@\", \"throw\", \"when\", \"until\", \"extends\"];\n\nvar keywords = wordRegexp(indentKeywords.concat(commonKeywords));\n\nindentKeywords = wordRegexp(indentKeywords);\n\n\nvar stringPrefixes = /^('{3}|\\\"{3}|['\\\"])/;\nvar regexPrefixes = /^(\\/{3}|\\/)/;\nvar commonConstants = [\"Infinity\", \"NaN\", \"undefined\", \"null\", \"true\", \"false\", \"on\", \"off\", \"yes\", \"no\"];\nvar constants = wordRegexp(commonConstants);\n\n// Tokenizers\nfunction tokenBase(stream, state) {\n  // Handle scope changes\n  if (stream.sol()) {\n    if (state.scope.align === null) state.scope.align = false;\n    var scopeOffset = state.scope.offset;\n    if (stream.eatSpace()) {\n      var lineOffset = stream.indentation();\n      if (lineOffset > scopeOffset && state.scope.type == \"coffee\") {\n        return \"indent\";\n      } else if (lineOffset < scopeOffset) {\n        return \"dedent\";\n      }\n      return null;\n    } else {\n      if (scopeOffset > 0) {\n        dedent(stream, state);\n      }\n    }\n  }\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  var ch = stream.peek();\n\n  // Handle docco title comment (single line)\n  if (stream.match(\"####\")) {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  // Handle multi line comments\n  if (stream.match(\"###\")) {\n    state.tokenize = longComment;\n    return state.tokenize(stream, state);\n  }\n\n  // Single line comment\n  if (ch === \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  // Handle number literals\n  if (stream.match(/^-?[0-9\\.]/, false)) {\n    var floatLiteral = false;\n    // Floats\n    if (stream.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n      floatLiteral = true;\n    }\n    if (stream.match(/^-?\\d+\\.\\d*/)) {\n      floatLiteral = true;\n    }\n    if (stream.match(/^-?\\.\\d+/)) {\n      floatLiteral = true;\n    }\n\n    if (floatLiteral) {\n      // prevent from getting extra . on 1..\n      if (stream.peek() == \".\"){\n        stream.backUp(1);\n      }\n      return \"number\";\n    }\n    // Integers\n    var intLiteral = false;\n    // Hex\n    if (stream.match(/^-?0x[0-9a-f]+/i)) {\n      intLiteral = true;\n    }\n    // Decimal\n    if (stream.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n      intLiteral = true;\n    }\n    // Zero by itself with no other piece of number.\n    if (stream.match(/^-?0(?![\\dx])/i)) {\n      intLiteral = true;\n    }\n    if (intLiteral) {\n      return \"number\";\n    }\n  }\n\n  // Handle strings\n  if (stream.match(stringPrefixes)) {\n    state.tokenize = tokenFactory(stream.current(), false, \"string\");\n    return state.tokenize(stream, state);\n  }\n  // Handle regex literals\n  if (stream.match(regexPrefixes)) {\n    if (stream.current() != \"/\" || stream.match(/^.*\\//, false)) { // prevent highlight of division\n      state.tokenize = tokenFactory(stream.current(), true, \"string.special\");\n      return state.tokenize(stream, state);\n    } else {\n      stream.backUp(1);\n    }\n  }\n\n\n\n  // Handle operators and delimiters\n  if (stream.match(operators) || stream.match(wordOperators)) {\n    return \"operator\";\n  }\n  if (stream.match(delimiters)) {\n    return \"punctuation\";\n  }\n\n  if (stream.match(constants)) {\n    return \"atom\";\n  }\n\n  if (stream.match(atProp) || state.prop && stream.match(identifiers)) {\n    return \"property\";\n  }\n\n  if (stream.match(keywords)) {\n    return \"keyword\";\n  }\n\n  if (stream.match(identifiers)) {\n    return \"variable\";\n  }\n\n  // Handle non-detected items\n  stream.next();\n  return ERRORCLASS;\n}\n\nfunction tokenFactory(delimiter, singleline, outclass) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      stream.eatWhile(/[^'\"\\/\\\\]/);\n      if (stream.eat(\"\\\\\")) {\n        stream.next();\n        if (singleline && stream.eol()) {\n          return outclass;\n        }\n      } else if (stream.match(delimiter)) {\n        state.tokenize = tokenBase;\n        return outclass;\n      } else {\n        stream.eat(/['\"\\/]/);\n      }\n    }\n    if (singleline) {\n      state.tokenize = tokenBase;\n    }\n    return outclass;\n  };\n}\n\nfunction longComment(stream, state) {\n  while (!stream.eol()) {\n    stream.eatWhile(/[^#]/);\n    if (stream.match(\"###\")) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    stream.eatWhile(\"#\");\n  }\n  return \"comment\";\n}\n\nfunction indent(stream, state, type = \"coffee\") {\n  var offset = 0, align = false, alignOffset = null;\n  for (var scope = state.scope; scope; scope = scope.prev) {\n    if (scope.type === \"coffee\" || scope.type == \"}\") {\n      offset = scope.offset + stream.indentUnit;\n      break;\n    }\n  }\n  if (type !== \"coffee\") {\n    align = null;\n    alignOffset = stream.column() + stream.current().length;\n  } else if (state.scope.align) {\n    state.scope.align = false;\n  }\n  state.scope = {\n    offset: offset,\n    type: type,\n    prev: state.scope,\n    align: align,\n    alignOffset: alignOffset\n  };\n}\n\nfunction dedent(stream, state) {\n  if (!state.scope.prev) return;\n  if (state.scope.type === \"coffee\") {\n    var _indent = stream.indentation();\n    var matched = false;\n    for (var scope = state.scope; scope; scope = scope.prev) {\n      if (_indent === scope.offset) {\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      return true;\n    }\n    while (state.scope.prev && state.scope.offset !== _indent) {\n      state.scope = state.scope.prev;\n    }\n    return false;\n  } else {\n    state.scope = state.scope.prev;\n    return false;\n  }\n}\n\nfunction tokenLexer(stream, state) {\n  var style = state.tokenize(stream, state);\n  var current = stream.current();\n\n  // Handle scope changes.\n  if (current === \"return\") {\n    state.dedent = true;\n  }\n  if (((current === \"->\" || current === \"=>\") && stream.eol())\n      || style === \"indent\") {\n    indent(stream, state);\n  }\n  var delimiter_index = \"[({\".indexOf(current);\n  if (delimiter_index !== -1) {\n    indent(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n  }\n  if (indentKeywords.exec(current)){\n    indent(stream, state);\n  }\n  if (current == \"then\"){\n    dedent(stream, state);\n  }\n\n\n  if (style === \"dedent\") {\n    if (dedent(stream, state)) {\n      return ERRORCLASS;\n    }\n  }\n  delimiter_index = \"])}\".indexOf(current);\n  if (delimiter_index !== -1) {\n    while (state.scope.type == \"coffee\" && state.scope.prev)\n      state.scope = state.scope.prev;\n    if (state.scope.type == current)\n      state.scope = state.scope.prev;\n  }\n  if (state.dedent && stream.eol()) {\n    if (state.scope.type == \"coffee\" && state.scope.prev)\n      state.scope = state.scope.prev;\n    state.dedent = false;\n  }\n\n  return style == \"indent\" || style == \"dedent\" ? null : style;\n}\n\nexport const coffeeScript = {\n  name: \"coffeescript\",\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      scope: {offset: 0, type:\"coffee\", prev: null, align: false},\n      prop: false,\n      dedent: 0\n    };\n  },\n\n  token: function(stream, state) {\n    var fillAlign = state.scope.align === null && state.scope;\n    if (fillAlign && stream.sol()) fillAlign.align = false;\n\n    var style = tokenLexer(stream, state);\n    if (style && style != \"comment\") {\n      if (fillAlign) fillAlign.align = true;\n      state.prop = style == \"punctuation\" && stream.current() == \".\"\n    }\n\n    return style;\n  },\n\n  indent: function(state, text) {\n    if (state.tokenize != tokenBase) return 0;\n    var scope = state.scope;\n    var closer = text && \"])}\".indexOf(text.charAt(0)) > -1;\n    if (closer) while (scope.type == \"coffee\" && scope.prev) scope = scope.prev;\n    var closes = closer && scope.type === text.charAt(0);\n    if (scope.align)\n      return scope.alignOffset - (closes ? 1 : 0);\n    else\n      return (closes ? scope.prev : scope).offset;\n  },\n\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}