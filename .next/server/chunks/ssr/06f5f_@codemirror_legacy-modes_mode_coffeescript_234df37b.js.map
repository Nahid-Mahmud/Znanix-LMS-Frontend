{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/coffeescript.js"],"sourcesContent":["var ERRORCLASS = \"error\";\n\nfunction wordRegexp(words) {\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\n\nvar operators = /^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/;\nvar delimiters = /^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/;\nvar identifiers = /^[_A-Za-z$][_A-Za-z$0-9]*/;\nvar atProp = /^@[_A-Za-z$][_A-Za-z$0-9]*/;\n\nvar wordOperators = wordRegexp([\"and\", \"or\", \"not\",\n                                \"is\", \"isnt\", \"in\",\n                                \"instanceof\", \"typeof\"]);\nvar indentKeywords = [\"for\", \"while\", \"loop\", \"if\", \"unless\", \"else\",\n                      \"switch\", \"try\", \"catch\", \"finally\", \"class\"];\nvar commonKeywords = [\"break\", \"by\", \"continue\", \"debugger\", \"delete\",\n                      \"do\", \"in\", \"of\", \"new\", \"return\", \"then\",\n                      \"this\", \"@\", \"throw\", \"when\", \"until\", \"extends\"];\n\nvar keywords = wordRegexp(indentKeywords.concat(commonKeywords));\n\nindentKeywords = wordRegexp(indentKeywords);\n\n\nvar stringPrefixes = /^('{3}|\\\"{3}|['\\\"])/;\nvar regexPrefixes = /^(\\/{3}|\\/)/;\nvar commonConstants = [\"Infinity\", \"NaN\", \"undefined\", \"null\", \"true\", \"false\", \"on\", \"off\", \"yes\", \"no\"];\nvar constants = wordRegexp(commonConstants);\n\n// Tokenizers\nfunction tokenBase(stream, state) {\n  // Handle scope changes\n  if (stream.sol()) {\n    if (state.scope.align === null) state.scope.align = false;\n    var scopeOffset = state.scope.offset;\n    if (stream.eatSpace()) {\n      var lineOffset = stream.indentation();\n      if (lineOffset > scopeOffset && state.scope.type == \"coffee\") {\n        return \"indent\";\n      } else if (lineOffset < scopeOffset) {\n        return \"dedent\";\n      }\n      return null;\n    } else {\n      if (scopeOffset > 0) {\n        dedent(stream, state);\n      }\n    }\n  }\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  var ch = stream.peek();\n\n  // Handle docco title comment (single line)\n  if (stream.match(\"####\")) {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  // Handle multi line comments\n  if (stream.match(\"###\")) {\n    state.tokenize = longComment;\n    return state.tokenize(stream, state);\n  }\n\n  // Single line comment\n  if (ch === \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  // Handle number literals\n  if (stream.match(/^-?[0-9\\.]/, false)) {\n    var floatLiteral = false;\n    // Floats\n    if (stream.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n      floatLiteral = true;\n    }\n    if (stream.match(/^-?\\d+\\.\\d*/)) {\n      floatLiteral = true;\n    }\n    if (stream.match(/^-?\\.\\d+/)) {\n      floatLiteral = true;\n    }\n\n    if (floatLiteral) {\n      // prevent from getting extra . on 1..\n      if (stream.peek() == \".\"){\n        stream.backUp(1);\n      }\n      return \"number\";\n    }\n    // Integers\n    var intLiteral = false;\n    // Hex\n    if (stream.match(/^-?0x[0-9a-f]+/i)) {\n      intLiteral = true;\n    }\n    // Decimal\n    if (stream.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n      intLiteral = true;\n    }\n    // Zero by itself with no other piece of number.\n    if (stream.match(/^-?0(?![\\dx])/i)) {\n      intLiteral = true;\n    }\n    if (intLiteral) {\n      return \"number\";\n    }\n  }\n\n  // Handle strings\n  if (stream.match(stringPrefixes)) {\n    state.tokenize = tokenFactory(stream.current(), false, \"string\");\n    return state.tokenize(stream, state);\n  }\n  // Handle regex literals\n  if (stream.match(regexPrefixes)) {\n    if (stream.current() != \"/\" || stream.match(/^.*\\//, false)) { // prevent highlight of division\n      state.tokenize = tokenFactory(stream.current(), true, \"string.special\");\n      return state.tokenize(stream, state);\n    } else {\n      stream.backUp(1);\n    }\n  }\n\n\n\n  // Handle operators and delimiters\n  if (stream.match(operators) || stream.match(wordOperators)) {\n    return \"operator\";\n  }\n  if (stream.match(delimiters)) {\n    return \"punctuation\";\n  }\n\n  if (stream.match(constants)) {\n    return \"atom\";\n  }\n\n  if (stream.match(atProp) || state.prop && stream.match(identifiers)) {\n    return \"property\";\n  }\n\n  if (stream.match(keywords)) {\n    return \"keyword\";\n  }\n\n  if (stream.match(identifiers)) {\n    return \"variable\";\n  }\n\n  // Handle non-detected items\n  stream.next();\n  return ERRORCLASS;\n}\n\nfunction tokenFactory(delimiter, singleline, outclass) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      stream.eatWhile(/[^'\"\\/\\\\]/);\n      if (stream.eat(\"\\\\\")) {\n        stream.next();\n        if (singleline && stream.eol()) {\n          return outclass;\n        }\n      } else if (stream.match(delimiter)) {\n        state.tokenize = tokenBase;\n        return outclass;\n      } else {\n        stream.eat(/['\"\\/]/);\n      }\n    }\n    if (singleline) {\n      state.tokenize = tokenBase;\n    }\n    return outclass;\n  };\n}\n\nfunction longComment(stream, state) {\n  while (!stream.eol()) {\n    stream.eatWhile(/[^#]/);\n    if (stream.match(\"###\")) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    stream.eatWhile(\"#\");\n  }\n  return \"comment\";\n}\n\nfunction indent(stream, state, type = \"coffee\") {\n  var offset = 0, align = false, alignOffset = null;\n  for (var scope = state.scope; scope; scope = scope.prev) {\n    if (scope.type === \"coffee\" || scope.type == \"}\") {\n      offset = scope.offset + stream.indentUnit;\n      break;\n    }\n  }\n  if (type !== \"coffee\") {\n    align = null;\n    alignOffset = stream.column() + stream.current().length;\n  } else if (state.scope.align) {\n    state.scope.align = false;\n  }\n  state.scope = {\n    offset: offset,\n    type: type,\n    prev: state.scope,\n    align: align,\n    alignOffset: alignOffset\n  };\n}\n\nfunction dedent(stream, state) {\n  if (!state.scope.prev) return;\n  if (state.scope.type === \"coffee\") {\n    var _indent = stream.indentation();\n    var matched = false;\n    for (var scope = state.scope; scope; scope = scope.prev) {\n      if (_indent === scope.offset) {\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      return true;\n    }\n    while (state.scope.prev && state.scope.offset !== _indent) {\n      state.scope = state.scope.prev;\n    }\n    return false;\n  } else {\n    state.scope = state.scope.prev;\n    return false;\n  }\n}\n\nfunction tokenLexer(stream, state) {\n  var style = state.tokenize(stream, state);\n  var current = stream.current();\n\n  // Handle scope changes.\n  if (current === \"return\") {\n    state.dedent = true;\n  }\n  if (((current === \"->\" || current === \"=>\") && stream.eol())\n      || style === \"indent\") {\n    indent(stream, state);\n  }\n  var delimiter_index = \"[({\".indexOf(current);\n  if (delimiter_index !== -1) {\n    indent(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n  }\n  if (indentKeywords.exec(current)){\n    indent(stream, state);\n  }\n  if (current == \"then\"){\n    dedent(stream, state);\n  }\n\n\n  if (style === \"dedent\") {\n    if (dedent(stream, state)) {\n      return ERRORCLASS;\n    }\n  }\n  delimiter_index = \"])}\".indexOf(current);\n  if (delimiter_index !== -1) {\n    while (state.scope.type == \"coffee\" && state.scope.prev)\n      state.scope = state.scope.prev;\n    if (state.scope.type == current)\n      state.scope = state.scope.prev;\n  }\n  if (state.dedent && stream.eol()) {\n    if (state.scope.type == \"coffee\" && state.scope.prev)\n      state.scope = state.scope.prev;\n    state.dedent = false;\n  }\n\n  return style == \"indent\" || style == \"dedent\" ? null : style;\n}\n\nexport const coffeeScript = {\n  name: \"coffeescript\",\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      scope: {offset: 0, type:\"coffee\", prev: null, align: false},\n      prop: false,\n      dedent: 0\n    };\n  },\n\n  token: function(stream, state) {\n    var fillAlign = state.scope.align === null && state.scope;\n    if (fillAlign && stream.sol()) fillAlign.align = false;\n\n    var style = tokenLexer(stream, state);\n    if (style && style != \"comment\") {\n      if (fillAlign) fillAlign.align = true;\n      state.prop = style == \"punctuation\" && stream.current() == \".\"\n    }\n\n    return style;\n  },\n\n  indent: function(state, text) {\n    if (state.tokenize != tokenBase) return 0;\n    var scope = state.scope;\n    var closer = text && \"])}\".indexOf(text.charAt(0)) > -1;\n    if (closer) while (scope.type == \"coffee\" && scope.prev) scope = scope.prev;\n    var closes = closer && scope.type === text.charAt(0);\n    if (scope.align)\n      return scope.alignOffset - (closes ? 1 : 0);\n    else\n      return (closes ? scope.prev : scope).offset;\n  },\n\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}