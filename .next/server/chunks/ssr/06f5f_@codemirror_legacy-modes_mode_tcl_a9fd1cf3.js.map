{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/tcl.js"],"sourcesContent":["function parseWords(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nvar keywords = parseWords(\"Tcl safe after append array auto_execok auto_import auto_load \" +\n                          \"auto_mkindex auto_mkindex_old auto_qualify auto_reset bgerror \" +\n                          \"binary break catch cd close concat continue dde eof encoding error \" +\n                          \"eval exec exit expr fblocked fconfigure fcopy file fileevent filename \" +\n                          \"filename flush for foreach format gets glob global history http if \" +\n                          \"incr info interp join lappend lindex linsert list llength load lrange \" +\n                          \"lreplace lsearch lset lsort memory msgcat namespace open package parray \" +\n                          \"pid pkg::create pkg_mkIndex proc puts pwd re_syntax read regex regexp \" +\n                          \"registry regsub rename resource return scan seek set socket source split \" +\n                          \"string subst switch tcl_endOfWord tcl_findLibrary tcl_startOfNextWord \" +\n                          \"tcl_wordBreakAfter tcl_startOfPreviousWord tcl_wordBreakBefore tcltest \" +\n                          \"tclvars tell time trace unknown unset update uplevel upvar variable \" +\n                          \"vwait\");\nvar functions = parseWords(\"if elseif else and not or eq ne in ni for foreach while switch\");\nvar isOperatorChar = /[+\\-*&%=<>!?^\\/\\|]/;\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\nfunction tokenBase(stream, state) {\n  var beforeParams = state.beforeParams;\n  state.beforeParams = false;\n  var ch = stream.next();\n  if ((ch == '\"' || ch == \"'\") && state.inParams) {\n    return chain(stream, state, tokenString(ch));\n  } else if (/[\\[\\]{}\\(\\),;\\.]/.test(ch)) {\n    if (ch == \"(\" && beforeParams) state.inParams = true;\n    else if (ch == \")\") state.inParams = false;\n    return null;\n  } else if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  } else if (ch == \"#\") {\n    if (stream.eat(\"*\"))\n      return chain(stream, state, tokenComment);\n    if (ch == \"#\" && stream.match(/ *\\[ *\\[/))\n      return chain(stream, state, tokenUnparsed);\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (ch == '\"') {\n    stream.skipTo(/\"/);\n    return \"comment\";\n  } else if (ch == \"$\") {\n    stream.eatWhile(/[$_a-z0-9A-Z\\.{:]/);\n    stream.eatWhile(/}/);\n    state.beforeParams = true;\n    return \"builtin\";\n  } else if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"comment\";\n  } else {\n    stream.eatWhile(/[\\w\\$_{}\\xa1-\\uffff]/);\n    var word = stream.current().toLowerCase();\n    if (keywords && keywords.propertyIsEnumerable(word))\n      return \"keyword\";\n    if (functions && functions.propertyIsEnumerable(word)) {\n      state.beforeParams = true;\n      return \"keyword\";\n    }\n    return null;\n  }\n}\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end) state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"#\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\nfunction tokenUnparsed(stream, state) {\n  var maybeEnd = 0, ch;\n  while (ch = stream.next()) {\n    if (ch == \"#\" && maybeEnd == 2) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    if (ch == \"]\")\n      maybeEnd++;\n    else if (ch != \" \")\n      maybeEnd = 0;\n  }\n  return \"meta\";\n}\nexport const tcl = {\n  name: \"tcl\",\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      beforeParams: false,\n      inParams: false\n    };\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  },\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}