{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/toml.js"],"sourcesContent":["export const toml = {\n  name: \"toml\",\n  startState: function () {\n    return {\n      inString: false,\n      stringType: \"\",\n      lhs: true,\n      inArray: 0\n    };\n  },\n  token: function (stream, state) {\n    //check for state changes\n    if (!state.inString && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n      state.stringType = stream.peek();\n      stream.next(); // Skip quote\n      state.inString = true; // Update state\n    }\n    if (stream.sol() && state.inArray === 0) {\n      state.lhs = true;\n    }\n    //return state\n    if (state.inString) {\n      while (state.inString && !stream.eol()) {\n        if (stream.peek() === state.stringType) {\n          stream.next(); // Skip quote\n          state.inString = false; // Clear flag\n        } else if (stream.peek() === '\\\\') {\n          stream.next();\n          stream.next();\n        } else {\n          stream.match(/^.[^\\\\\\\"\\']*/);\n        }\n      }\n      return state.lhs ? \"property\" : \"string\"; // Token style\n    } else if (state.inArray && stream.peek() === ']') {\n      stream.next();\n      state.inArray--;\n      return 'bracket';\n    } else if (state.lhs && stream.peek() === '[' && stream.skipTo(']')) {\n      stream.next();//skip closing ]\n      // array of objects has an extra open & close []\n      if (stream.peek() === ']') stream.next();\n      return \"atom\";\n    } else if (stream.peek() === \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (state.lhs && stream.eatWhile(function (c) { return c != '=' && c != ' '; })) {\n      return \"property\";\n    } else if (state.lhs && stream.peek() === \"=\") {\n      stream.next();\n      state.lhs = false;\n      return null;\n    } else if (!state.lhs && stream.match(/^\\d\\d\\d\\d[\\d\\-\\:\\.T]*Z/)) {\n      return 'atom'; //date\n    } else if (!state.lhs && (stream.match('true') || stream.match('false'))) {\n      return 'atom';\n    } else if (!state.lhs && stream.peek() === '[') {\n      state.inArray++;\n      stream.next();\n      return 'bracket';\n    } else if (!state.lhs && stream.match(/^\\-?\\d+(?:\\.\\d+)?/)) {\n      return 'number';\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n    return null;\n  },\n  languageData: {\n    commentTokens: { line: '#' },\n  },\n};\n"],"names":[],"mappings":"4DAAO,IAAM,EAAO,CAClB,KAAM,OACN,WAAY,WACV,MAAO,CACL,SAAU,GACV,WAAY,GACZ,KAAK,EACL,QAAS,CACX,CACF,EACA,MAAO,SAAU,CAAM,CAAE,CAAK,EAW5B,GATK,EAAM,QAAQ,EAAuB,EAAnB,GAAE,EAAO,IAAI,IAAgC,GAAI,EAArB,CAAwB,CAAjB,IAAI,KAC5D,EAAM,UAAU,CAAG,EAAO,IAAI,GAC9B,EAAO,IAAI,GACX,CADe,CACT,QAAQ,EAAG,EADW,CAG1B,EAAO,CAFc,EAEX,IAAwB,GAAG,CAArB,EAAM,GAFc,IAEP,GAC/B,EAAM,GAAG,EAAG,CAAA,EAGV,EAAM,QAAQ,CAAE,CAClB,KAAO,EAAM,QAAQ,EAAI,CAAC,EAAO,GAAG,GAAI,CAClC,EAAO,IAAI,KAAO,EAAM,UAAU,EAAE,AACtC,EAAO,IAAI,GACX,CADe,CACT,QAAQ,EAAG,EADW,CAED,IADH,EACS,CAAxB,EAAO,IAAI,IADiB,AAErC,EAAO,IAAI,GACX,EAAO,IAAI,IAEX,EAAO,KAAK,CAAC,gBAGjB,OAAO,EAAM,GAAG,CAAG,WAAa,QAClC,CAAO,CADqC,EACjC,EAAM,OAAO,EAAsB,CADY,IACP,CAAvB,EAAO,IAAI,GAGrC,OAFA,EAAO,IAAI,GACX,EAAM,OAAO,GACN,UACF,GAAI,EAAM,GAAG,EAAsB,MAAlB,EAAO,IAAI,IAAc,EAAO,MAAM,CAAC,KAI7D,CAJmE,MACnE,EAAO,IAAI,GAEW,CAFR,KAEV,EAAO,IAAI,IAAY,CAFG,CAEI,IAAI,GAC/B,OACF,GAAsB,KAAK,CAAvB,EAAO,IAAI,GAEpB,OADA,EAAO,SAAS,GACT,UACF,GAAI,EAAO,QAAQ,IAAI,KAEvB,GAAI,EAAM,GAAG,EAAI,EAAO,QAAQ,CAAC,SAAU,CAAC,EAAI,MAAY,KAAL,GAAiB,KAAL,CAAU,GAClF,CADsF,KAC/E,gBACF,GAAI,EAAM,GAAG,EAAsB,KAAK,CAAvB,EAAO,IAAI,GACjC,EAAO,IAAI,GACX,EAAM,GAAG,EAAG,OAEP,GAAI,CAAC,EAAM,GAAG,EAAI,EAAO,KAAK,CAAC,2BAA2B,AAEtD,CAAC,EAAM,GAAG,GAAK,CAAD,CAAQ,KAAK,CAAC,SAAW,EAAO,KAAK,CAAC,QAAA,CAAQ,CADrE,EACwE,IADjE,OAGF,CAHU,EAGN,CAAC,EAAM,CAHK,EAGF,EAAsB,KAAK,CAAvB,EAAO,IAAI,GAGlC,OAFA,EAAM,OAAO,GACb,EAAO,IAAI,GACJ,UACF,GAAI,CAAC,EAAM,GAAG,EAAI,EAAO,KAAK,CAAC,qBACpC,CAD0D,KACnD,QACE,CAAC,EAAO,QAAQ,IAAI,AAC7B,EAAO,IAAI,GAEb,OAAO,IACT,EACA,aAAc,CACZ,cAAe,CAAE,KAAM,GAAI,CAC7B,CACF","ignoreList":[0]}