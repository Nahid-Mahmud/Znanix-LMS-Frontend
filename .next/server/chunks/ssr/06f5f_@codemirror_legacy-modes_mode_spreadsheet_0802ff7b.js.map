{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/spreadsheet.js"],"sourcesContent":["export const spreadsheet = {\n  name: \"spreadsheet\",\n\n  startState: function () {\n    return {\n      stringType: null,\n      stack: []\n    };\n  },\n  token: function (stream, state) {\n    if (!stream) return;\n\n    //check for state changes\n    if (state.stack.length === 0) {\n      //strings\n      if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.stack.unshift(\"string\");\n      }\n    }\n\n    //return state\n    //stack has\n    switch (state.stack[0]) {\n    case \"string\":\n      while (state.stack[0] === \"string\" && !stream.eol()) {\n        if (stream.peek() === state.stringType) {\n          stream.next(); // Skip quote\n          state.stack.shift(); // Clear flag\n        } else if (stream.peek() === \"\\\\\") {\n          stream.next();\n          stream.next();\n        } else {\n          stream.match(/^.[^\\\\\\\"\\']*/);\n        }\n      }\n      return \"string\";\n\n    case \"characterClass\":\n      while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n        if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./)))\n          state.stack.shift();\n      }\n      return \"operator\";\n    }\n\n    var peek = stream.peek();\n\n    //no stack\n    switch (peek) {\n    case \"[\":\n      stream.next();\n      state.stack.unshift(\"characterClass\");\n      return \"bracket\";\n    case \":\":\n      stream.next();\n      return \"operator\";\n    case \"\\\\\":\n      if (stream.match(/\\\\[a-z]+/)) return \"string.special\";\n      else {\n        stream.next();\n        return \"atom\";\n      }\n    case \".\":\n    case \",\":\n    case \";\":\n    case \"*\":\n    case \"-\":\n    case \"+\":\n    case \"^\":\n    case \"<\":\n    case \"/\":\n    case \"=\":\n      stream.next();\n      return \"atom\";\n    case \"$\":\n      stream.next();\n      return \"builtin\";\n    }\n\n    if (stream.match(/\\d+/)) {\n      if (stream.match(/^\\w+/)) return \"error\";\n      return \"number\";\n    } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n      if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n      return \"variable\";\n    } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n      stream.next();\n      return \"bracket\";\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n    return null;\n  }\n};\n"],"names":[],"mappings":"mEAAO,IAAM,EAAc,CACzB,KAAM,cAEN,WAAY,WACV,MAAO,CACL,WAAY,KACZ,MAAO,EAAE,AACX,CACF,EACA,MAAO,SAAU,CAAM,CAAE,CAAK,EAC5B,GAAK,CAAD,EAcJ,KAda,EAGc,GAAG,CAA1B,EAAM,KAAK,CAAC,MAAM,EAEf,CAAiB,OAAV,IAAI,IAAgC,KAAjB,EAAO,IAAI,EAAM,GAAM,CACpD,EAAM,UAAU,CAAG,EAAO,IAAI,GAC9B,EAAO,IAAI,GACX,CADe,CACT,KAAK,CAAC,MADgB,CACT,CAAC,WAMhB,EAAM,KAAK,CAAC,EAAE,EACtB,IAAK,SACH,KAA0B,WAAnB,EAAM,KAAK,CAAC,EAAE,EAAiB,CAAC,EAAO,GAAG,GAAI,CAC/C,EAAO,IAAI,KAAO,EAAM,UAAU,EACpC,AADsC,EAC/B,IAAI,GACX,CADe,CACT,KAAK,CAAC,KAAK,CADW,GACP,AACM,MAAM,CAAxB,EAAO,IADkB,AACd,IACpB,EAAO,IAAI,GACX,EAAO,IAAI,IAEX,EAAO,KAAK,CAAC,gBAGjB,MAAO,QAET,KAAK,iBACH,KAA0B,mBAAnB,EAAM,KAAK,CAAC,EAAE,EAAyB,CAAC,EAAO,GAAG,GAAI,CACvD,AAAE,CAAD,CAAQ,KAAK,CAAC,cAAgB,EAAO,KAAK,CAAC,OAAO,EACrD,EAAM,KAAK,CAAC,KAAK,GAErB,MAAO,UACT,CAEA,IAAI,EAAO,EAAO,IAAI,GAGtB,OAAQ,GACR,IAAK,IAGH,OAFA,EAAO,IAAI,GACX,EAAM,KAAK,CAAC,OAAO,CAAC,kBACb,SACT,KAAK,IAEH,OADA,EAAO,IAAI,GACJ,UACT,KAAK,KACH,GAAI,EAAO,KAAK,CAAC,YAAa,MAAO,iBAGnC,OADA,EAAO,IAAI,GACJ,MAEX,KAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAEH,OADA,EAAO,IAAI,GACJ,MACT,KAAK,IAEH,OADA,EAAO,IAAI,GACJ,SACT,CAEA,GAAI,EAAO,KAAK,CAAC,QAAQ,MACvB,AAAI,EAAO,KAAK,CAAC,QAAgB,CAAP,OACnB,SACF,GAAI,EAAO,KAAK,CAAC,kBAAkB,MACxC,AAAI,EAAO,KAAK,CAAC,aAAa,GAAe,KAAP,KAC/B,WACF,GAAI,AAAgD,CAAC,GAAG,CAAnD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,CAAC,OAAO,CAAC,GAEhD,OADA,EAAO,IAAI,GACJ,SACE,CAAC,EAAO,QAAQ,IAAI,AAC7B,EAAO,IAAI,GAEb,OAAO,KACT,CACF","ignoreList":[0]}