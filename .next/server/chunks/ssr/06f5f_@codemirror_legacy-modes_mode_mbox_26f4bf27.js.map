{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/mbox.js"],"sourcesContent":["var rfc2822 = [\n  \"From\", \"Sender\", \"Reply-To\", \"To\", \"Cc\", \"Bcc\", \"Message-ID\",\n  \"In-Reply-To\", \"References\", \"Resent-From\", \"Resent-Sender\", \"Resent-To\",\n  \"Resent-Cc\", \"Resent-Bcc\", \"Resent-Message-ID\", \"Return-Path\", \"Received\"\n];\nvar rfc2822NoEmail = [\n  \"Date\", \"Subject\", \"Comments\", \"Keywords\", \"Resent-Date\"\n];\n\nvar whitespace = /^[ \\t]/;\nvar separator = /^From /; // See RFC 4155\nvar rfc2822Header = new RegExp(\"^(\" + rfc2822.join(\"|\") + \"): \");\nvar rfc2822HeaderNoEmail = new RegExp(\"^(\" + rfc2822NoEmail.join(\"|\") + \"): \");\nvar header = /^[^:]+:/; // Optional fields defined in RFC 2822\nvar email = /^[^ ]+@[^ ]+/;\nvar untilEmail = /^.*?(?=[^ ]+?@[^ ]+)/;\nvar bracketedEmail = /^<.*?>/;\nvar untilBracketedEmail = /^.*?(?=<.*>)/;\n\nfunction styleForHeader(header) {\n  if (header === \"Subject\") return \"header\";\n  return \"string\";\n}\n\nfunction readToken(stream, state) {\n  if (stream.sol()) {\n    // From last line\n    state.inSeparator = false;\n    if (state.inHeader && stream.match(whitespace)) {\n      // Header folding\n      return null;\n    } else {\n      state.inHeader = false;\n      state.header = null;\n    }\n\n    if (stream.match(separator)) {\n      state.inHeaders = true;\n      state.inSeparator = true;\n      return \"atom\";\n    }\n\n    var match;\n    var emailPermitted = false;\n    if ((match = stream.match(rfc2822HeaderNoEmail)) ||\n        (emailPermitted = true) && (match = stream.match(rfc2822Header))) {\n      state.inHeaders = true;\n      state.inHeader = true;\n      state.emailPermitted = emailPermitted;\n      state.header = match[1];\n      return \"atom\";\n    }\n\n    // Use vim's heuristics: recognize custom headers only if the line is in a\n    // block of legitimate headers.\n    if (state.inHeaders && (match = stream.match(header))) {\n      state.inHeader = true;\n      state.emailPermitted = true;\n      state.header = match[1];\n      return \"atom\";\n    }\n\n    state.inHeaders = false;\n    stream.skipToEnd();\n    return null;\n  }\n\n  if (state.inSeparator) {\n    if (stream.match(email)) return \"link\";\n    if (stream.match(untilEmail)) return \"atom\";\n    stream.skipToEnd();\n    return \"atom\";\n  }\n\n  if (state.inHeader) {\n    var style = styleForHeader(state.header);\n\n    if (state.emailPermitted) {\n      if (stream.match(bracketedEmail)) return style + \" link\";\n      if (stream.match(untilBracketedEmail)) return style;\n    }\n    stream.skipToEnd();\n    return style;\n  }\n\n  stream.skipToEnd();\n  return null;\n};\n\nexport const mbox = {\n  name: \"mbox\",\n  startState: function() {\n    return {\n      // Is in a mbox separator\n      inSeparator: false,\n      // Is in a mail header\n      inHeader: false,\n      // If bracketed email is permitted. Only applicable when inHeader\n      emailPermitted: false,\n      // Name of current header\n      header: null,\n      // Is in a region of mail headers\n      inHeaders: false\n    };\n  },\n  token: readToken,\n  blankLine: function(state) {\n    state.inHeaders = state.inSeparator = state.inHeader = false;\n  },\n  languageData: {\n    autocomplete: rfc2822.concat(rfc2822NoEmail)\n  }\n}\n\n"],"names":[],"mappings":"4DAAA,IAAI,EAAU,CACZ,OAAQ,SAAU,WAAY,KAAM,KAAM,MAAO,aACjD,cAAe,aAAc,cAAe,gBAAiB,YAC7D,YAAa,aAAc,oBAAqB,cAAe,WAChE,CACG,EAAiB,CACnB,OAAQ,UAAW,WAAY,WAAY,cAC5C,CAEG,EAAa,SACb,EAAY,SACZ,CADsB,CACN,AAAI,OAAO,KAAO,EADG,AACK,IAAI,CAAC,KAAO,OACtD,EAAuB,AAAI,OAAO,KAAO,EAAe,IAAI,CAAC,KAAO,OACpE,EAAS,UACT,CADoB,CACZ,eACR,EAAa,oBAF6C,GAG1D,EAAiB,SACjB,EAAsB,eAwEnB,IAAM,EAAO,CAClB,KAAM,OACN,WAAY,WACV,MAAO,CAEL,YAAa,GAEb,UAAU,EAEV,eAAgB,GAEhB,OAAQ,KAER,WAAW,CACb,CACF,EACA,MAjFF,CAiFS,QAjFA,AAAU,CAAM,CAAE,CAAK,EAC9B,GAAI,EAAO,GAAG,GAAI,CAGhB,GADA,EAAM,WAAW,EAAG,EAChB,EAAM,QAAQ,EAAI,EAAO,KAAK,CAAC,GAEjC,OAAO,GAFuC,EAQhD,GAJE,EAAM,QAAQ,EAAG,EACjB,EAAM,MAAM,CAAG,KAGb,EAAO,KAAK,CAAC,GAGf,OAFA,EAD2B,AACrB,SAAS,EAAG,EAClB,EAAM,WAAW,EAAG,EACb,OAIT,IADI,EACA,GAAiB,QACrB,AAAI,CAAC,EAAQ,EAAO,KAAK,CAAC,EAAA,CAAqB,GAC3C,AAAC,GAAiB,EAAU,EAAQ,AAAd,EAAqB,GAAhB,EAAqB,CAAC,EAAc,GAAG,AACpE,EAAM,SAAS,EAAG,EAClB,EAAM,QAAQ,EAAG,EACjB,EAAM,cAAc,CAAG,EACvB,EAAM,MAAM,CAAG,CAAK,CAAC,EAAE,CAChB,QAKL,EAAM,SAAS,GAAK,CAAD,CAAS,EAAO,KAAK,CAAC,EAAA,CAAO,EAClD,CADqD,CAC/C,QAAQ,EAAG,EACjB,EAAM,cAAc,EAAG,EACvB,EAAM,MAAM,CAAG,CAAK,CAAC,EAAE,CAChB,SAGT,EAAM,SAAS,EAAG,EAClB,EAAO,SAAS,GACT,KACT,CAEA,GAAI,EAAM,WAAW,EAAE,MACrB,AAAI,EAAO,KAAK,CAAC,GAAe,KAAP,GACrB,EAAO,KAAK,CAAC,IACjB,EAAO,OADuB,EACd,GADqB,QAKvC,GAAI,EAAM,QAAQ,CAAE,CAClB,IAAI,EAvDN,AAAI,AAAW,MAuDD,KAvDY,CAuDG,EAAM,MAAM,CAvDR,SAC1B,SAwDL,GAAI,EAAM,cAAc,CAAE,CACxB,GAAI,EAAO,KAAK,CAAC,GAAiB,OAAO,EAAQ,QACjD,GAAI,EAAO,KAAK,CAAC,GAAsB,OAAO,CAChD,CAEA,OADA,EAAO,SAAS,GACT,CACT,CAGA,OADA,EAAO,SAAS,GACT,IACT,EAmBE,UAAW,SAAS,CAAK,EACvB,EAAM,SAAS,CAAG,EAAM,WAAW,CAAG,EAAM,QAAQ,EAAG,CACzD,EACA,aAAc,CACZ,aAAc,EAAQ,MAAM,CAAC,EAC/B,CACF","ignoreList":[0]}