{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/solr.js"],"sourcesContent":["var isStringChar = /[^\\s\\|\\!\\+\\-\\*\\?\\~\\^\\&\\:\\(\\)\\[\\]\\{\\}\\\"\\\\]/;\nvar isOperatorChar = /[\\|\\!\\+\\-\\*\\?\\~\\^\\&]/;\nvar isOperatorString = /^(OR|AND|NOT|TO)$/;\n\nfunction isNumber(word) {\n  return parseFloat(word).toString() === word;\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) break;\n      escaped = !escaped && next == \"\\\\\";\n    }\n\n    if (!escaped) state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\n\nfunction tokenOperator(operator) {\n  return function(stream, state) {\n    if (operator == \"|\")\n      stream.eat(/\\|/);\n    else if (operator == \"&\")\n      stream.eat(/\\&/);\n\n    state.tokenize = tokenBase;\n    return \"operator\";\n  };\n}\n\nfunction tokenWord(ch) {\n  return function(stream, state) {\n    var word = ch;\n    while ((ch = stream.peek()) && ch.match(isStringChar) != null) {\n      word += stream.next();\n    }\n\n    state.tokenize = tokenBase;\n    if (isOperatorString.test(word))\n      return \"operator\";\n    else if (isNumber(word))\n      return \"number\";\n    else if (stream.peek() == \":\")\n      return \"propertyName\";\n    else\n      return \"string\";\n  };\n}\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == '\"')\n    state.tokenize = tokenString(ch);\n  else if (isOperatorChar.test(ch))\n    state.tokenize = tokenOperator(ch);\n  else if (isStringChar.test(ch))\n    state.tokenize = tokenWord(ch);\n\n  return (state.tokenize != tokenBase) ? state.tokenize(stream, state) : null;\n}\n\nexport const solr = {\n  name: \"solr\",\n\n  startState: function() {\n    return {\n      tokenize: tokenBase\n    };\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  }\n};\n"],"names":[],"mappings":"2DAAA,IAAI,EAAe,4CACf,EAAiB,uBACjB,EAAmB,oBAkDvB,SAAS,EAAU,CAAM,CAAE,CAAK,EAC9B,IApBiB,EAAE,AAoBf,EAAK,EAAO,IAAI,GAQpB,MAPU,KAAN,EACF,EAAM,QAAQ,CA9CT,EA8CY,OA9CH,CAAM,CAAE,CAAK,EAE3B,IADA,EACO,EADc,EAAjB,GAAU,EACmB,AAC/B,KADqC,EAA/B,EAAO,EAAO,IAAI,EAAA,CAAE,GACtB,GA2CuB,GA3CL,CAAA,CAAV,EAAmB,AAC/B,EAAU,CAAC,GAAmB,CADT,KACC,EAIxB,OADI,AAAC,IAAS,EAAM,QAAQ,CAAG,CAAA,EACxB,QACT,EAsCS,EAAe,IAAI,CAAC,GAC3B,EAAM,QAAQ,CAnCT,EAmCY,OAnCH,CAAM,CAAE,CAAK,EAO3B,MANI,AAAY,OACd,EAAO,GAAG,CAAC,MACJ,AAAY,KAgCU,GA/B7B,EAAO,GAAG,CAAC,MAEb,EAAM,QAAQ,CAAG,EACV,UACT,EA4BS,EAAa,IAAI,CAAC,OACE,EAA3B,EAAM,QAAQ,CAzBT,EAyBY,OAzBH,CAAM,CAAE,CAAK,EAE3B,IADA,MAAI,EAAO,EACJ,CAAC,EAAK,EAAO,IAAI,EAAA,CAAE,EAA+B,KAAM,CAAhC,EAAG,KAAK,CAAC,IACtC,GAAQ,EAAO,IAAI,SAIrB,CADA,EAAM,QAAQ,CAAG,EACb,EAAiB,IAAI,CAAC,IACjB,GAAP,QArCG,WAAW,AADF,EAuCI,EAvCA,CACI,IAuCpB,IAvC4B,KAAO,EAuC5B,SACiB,KAAjB,AACP,EADc,IAAI,GACX,eAEA,QACX,GAYQ,EAAM,QAAQ,EAAI,EAAa,EAAM,QAAQ,CAAC,EAAQ,GAAS,IACzE,CAEO,IAAM,EAAO,CAClB,KAAM,OAEN,WAAY,WACV,MAAO,CACL,SAAU,CACZ,CACF,EAEA,MAAO,SAAS,CAAM,CAAE,CAAK,SAC3B,AAAI,EAAO,QAAQ,GAAW,CAAP,IAChB,EAAM,QAAQ,CAAC,EAAQ,EAChC,CACF","ignoreList":[0]}