{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/tiddlywiki.js"],"sourcesContent":["// Tokenizer\nvar textwords = {};\n\nvar keywords = {\n  \"allTags\": true, \"closeAll\": true, \"list\": true,\n  \"newJournal\": true, \"newTiddler\": true,\n  \"permaview\": true, \"saveChanges\": true,\n  \"search\": true, \"slider\": true, \"tabs\": true,\n  \"tag\": true, \"tagging\": true, \"tags\": true,\n  \"tiddler\": true, \"timeline\": true,\n  \"today\": true, \"version\": true, \"option\": true,\n  \"with\": true, \"filter\": true\n};\n\nvar isSpaceName = /[\\w_\\-]/i,\n    reHR = /^\\-\\-\\-\\-+$/,                                 // <hr>\n    reWikiCommentStart = /^\\/\\*\\*\\*$/,            // /***\n    reWikiCommentStop = /^\\*\\*\\*\\/$/,             // ***/\n    reBlockQuote = /^<<<$/,\n\n    reJsCodeStart = /^\\/\\/\\{\\{\\{$/,                       // //{{{ js block start\n    reJsCodeStop = /^\\/\\/\\}\\}\\}$/,                        // //}}} js stop\n    reXmlCodeStart = /^<!--\\{\\{\\{-->$/,           // xml block start\n    reXmlCodeStop = /^<!--\\}\\}\\}-->$/,            // xml stop\n\n    reCodeBlockStart = /^\\{\\{\\{$/,                        // {{{ TW text div block start\n    reCodeBlockStop = /^\\}\\}\\}$/,                 // }}} TW text stop\n\n    reUntilCodeStop = /.*?\\}\\}\\}/;\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  var sol = stream.sol(), ch = stream.peek();\n\n  state.block = false;        // indicates the start of a code block.\n\n  // check start of  blocks\n  if (sol && /[<\\/\\*{}\\-]/.test(ch)) {\n    if (stream.match(reCodeBlockStart)) {\n      state.block = true;\n      return chain(stream, state, twTokenCode);\n    }\n    if (stream.match(reBlockQuote))\n      return 'quote';\n    if (stream.match(reWikiCommentStart) || stream.match(reWikiCommentStop))\n      return 'comment';\n    if (stream.match(reJsCodeStart) || stream.match(reJsCodeStop) || stream.match(reXmlCodeStart) || stream.match(reXmlCodeStop))\n      return 'comment';\n    if (stream.match(reHR))\n      return 'contentSeparator';\n  }\n\n  stream.next();\n  if (sol && /[\\/\\*!#;:>|]/.test(ch)) {\n    if (ch == \"!\") { // tw header\n      stream.skipToEnd();\n      return \"header\";\n    }\n    if (ch == \"*\") { // tw list\n      stream.eatWhile('*');\n      return \"comment\";\n    }\n    if (ch == \"#\") { // tw numbered list\n      stream.eatWhile('#');\n      return \"comment\";\n    }\n    if (ch == \";\") { // definition list, term\n      stream.eatWhile(';');\n      return \"comment\";\n    }\n    if (ch == \":\") { // definition list, description\n      stream.eatWhile(':');\n      return \"comment\";\n    }\n    if (ch == \">\") { // single line quote\n      stream.eatWhile(\">\");\n      return \"quote\";\n    }\n    if (ch == '|')\n      return 'header';\n  }\n\n  if (ch == '{' && stream.match('{{'))\n    return chain(stream, state, twTokenCode);\n\n  // rudimentary html:// file:// link matching. TW knows much more ...\n  if (/[hf]/i.test(ch) &&\n      /[ti]/i.test(stream.peek()) &&\n      stream.match(/\\b(ttps?|tp|ile):\\/\\/[\\-A-Z0-9+&@#\\/%?=~_|$!:,.;]*[A-Z0-9+&@#\\/%=~_|$]/i))\n    return \"link\";\n\n  // just a little string indicator, don't want to have the whole string covered\n  if (ch == '\"')\n    return 'string';\n\n  if (ch == '~')    // _no_ CamelCase indicator should be bold\n    return 'brace';\n\n  if (/[\\[\\]]/.test(ch) && stream.match(ch)) // check for [[..]]\n    return 'brace';\n\n  if (ch == \"@\") {    // check for space link. TODO fix @@...@@ highlighting\n    stream.eatWhile(isSpaceName);\n    return \"link\";\n  }\n\n  if (/\\d/.test(ch)) {        // numbers\n    stream.eatWhile(/\\d/);\n    return \"number\";\n  }\n\n  if (ch == \"/\") { // tw invisible comment\n    if (stream.eat(\"%\")) {\n      return chain(stream, state, twTokenComment);\n    } else if (stream.eat(\"/\")) { //\n      return chain(stream, state, twTokenEm);\n    }\n  }\n\n  if (ch == \"_\" && stream.eat(\"_\")) // tw underline\n    return chain(stream, state, twTokenUnderline);\n\n  // strikethrough and mdash handling\n  if (ch == \"-\" && stream.eat(\"-\")) {\n    // if strikethrough looks ugly, change CSS.\n    if (stream.peek() != ' ')\n      return chain(stream, state, twTokenStrike);\n    // mdash\n    if (stream.peek() == ' ')\n      return 'brace';\n  }\n\n  if (ch == \"'\" && stream.eat(\"'\")) // tw bold\n    return chain(stream, state, twTokenStrong);\n\n  if (ch == \"<\" && stream.eat(\"<\")) // tw macro\n    return chain(stream, state, twTokenMacro);\n\n  // core macro handling\n  stream.eatWhile(/[\\w\\$_]/);\n  return textwords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n}\n\n// tw invisible comment\nfunction twTokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"%\");\n  }\n  return \"comment\";\n}\n\n// tw strong / bold\nfunction twTokenStrong(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"'\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"'\");\n  }\n  return \"strong\";\n}\n\n// tw code\nfunction twTokenCode(stream, state) {\n  var sb = state.block;\n\n  if (sb && stream.current()) {\n    return \"comment\";\n  }\n\n  if (!sb && stream.match(reUntilCodeStop)) {\n    state.tokenize = tokenBase;\n    return \"comment\";\n  }\n\n  if (sb && stream.sol() && stream.match(reCodeBlockStop)) {\n    state.tokenize = tokenBase;\n    return \"comment\";\n  }\n\n  stream.next();\n  return \"comment\";\n}\n\n// tw em / italic\nfunction twTokenEm(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"/\");\n  }\n  return \"emphasis\";\n}\n\n// tw underlined text\nfunction twTokenUnderline(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"_\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"_\");\n  }\n  return \"link\";\n}\n\n// tw strike through text looks ugly\n// change CSS if needed\nfunction twTokenStrike(stream, state) {\n  var maybeEnd = false, ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"-\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"-\");\n  }\n  return \"deleted\";\n}\n\n// macro\nfunction twTokenMacro(stream, state) {\n  if (stream.current() == '<<') {\n    return 'meta';\n  }\n\n  var ch = stream.next();\n  if (!ch) {\n    state.tokenize = tokenBase;\n    return null;\n  }\n  if (ch == \">\") {\n    if (stream.peek() == '>') {\n      stream.next();\n      state.tokenize = tokenBase;\n      return \"meta\";\n    }\n  }\n\n  stream.eatWhile(/[\\w\\$_]/);\n  return keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n}\n\n// Interface\nexport const tiddlyWiki = {\n  name: \"tiddlywiki\",\n\n  startState: function () {\n    return {tokenize: tokenBase};\n  },\n\n  token: function (stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    return style;\n  }\n};\n\n"],"names":[],"mappings":"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","ignoreList":[0]}