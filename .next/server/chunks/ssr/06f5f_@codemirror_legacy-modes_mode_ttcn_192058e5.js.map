{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/ttcn.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\nconst parserConfig = {\n  name: \"ttcn\",\n  keywords: words(\"activate address alive all alt altstep and and4b any\" +\n                  \" break case component const continue control deactivate\" +\n                  \" display do else encode enumerated except exception\" +\n                  \" execute extends extension external for from function\" +\n                  \" goto group if import in infinity inout interleave\" +\n                  \" label language length log match message mixed mod\" +\n                  \" modifies module modulepar mtc noblock not not4b nowait\" +\n                  \" of on optional or or4b out override param pattern port\" +\n                  \" procedure record recursive rem repeat return runs select\" +\n                  \" self sender set signature system template testcase to\" +\n                  \" type union value valueof var variant while with xor xor4b\"),\n  builtin: words(\"bit2hex bit2int bit2oct bit2str char2int char2oct encvalue\" +\n                 \" decomp decvalue float2int float2str hex2bit hex2int\" +\n                 \" hex2oct hex2str int2bit int2char int2float int2hex\" +\n                 \" int2oct int2str int2unichar isbound ischosen ispresent\" +\n                 \" isvalue lengthof log2str oct2bit oct2char oct2hex oct2int\" +\n                 \" oct2str regexp replace rnd sizeof str2bit str2float\" +\n                 \" str2hex str2int str2oct substr unichar2int unichar2char\" +\n                 \" enum2int\"),\n  types: words(\"anytype bitstring boolean char charstring default float\" +\n               \" hexstring integer objid octetstring universal verdicttype timer\"),\n  timerOps: words(\"read running start stop timeout\"),\n  portOps: words(\"call catch check clear getcall getreply halt raise receive\" +\n                 \" reply send trigger\"),\n  configOps: words(\"create connect disconnect done kill killed map unmap\"),\n  verdictOps: words(\"getverdict setverdict\"),\n  sutOps: words(\"action\"),\n  functionOps: words(\"apply derefers refers\"),\n\n  verdictConsts: words(\"error fail inconc none pass\"),\n  booleanConsts: words(\"true false\"),\n  otherConsts: words(\"null NULL omit\"),\n\n  visibilityModifiers: words(\"private public friend\"),\n  templateMatch: words(\"complement ifpresent subset superset permutation\"),\n  multiLineStrings: true\n}\n\nvar wordList = []\nfunction add(obj) {\n  if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop))\n    wordList.push(prop);\n}\nadd(parserConfig.keywords);\nadd(parserConfig.builtin);\nadd(parserConfig.timerOps);\nadd(parserConfig.portOps);\n\nvar keywords = parserConfig.keywords || {},\n    builtin = parserConfig.builtin || {},\n    timerOps = parserConfig.timerOps || {},\n    portOps  = parserConfig.portOps || {},\n    configOps = parserConfig.configOps || {},\n    verdictOps = parserConfig.verdictOps || {},\n    sutOps = parserConfig.sutOps || {},\n    functionOps = parserConfig.functionOps || {},\n\n    verdictConsts = parserConfig.verdictConsts || {},\n    booleanConsts = parserConfig.booleanConsts || {},\n    otherConsts   = parserConfig.otherConsts || {},\n\n    types = parserConfig.types || {},\n    visibilityModifiers = parserConfig.visibilityModifiers || {},\n    templateMatch = parserConfig.templateMatch || {},\n    multiLineStrings = parserConfig.multiLineStrings,\n    indentStatements = parserConfig.indentStatements !== false;\nvar isOperatorChar = /[+\\-*&@=<>!\\/]/;\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (ch == '\"' || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\[\\]{}\\(\\),;\\\\:\\?\\.]/.test(ch)) {\n    curPunc = ch;\n    return \"punctuation\";\n  }\n  if (ch == \"#\"){\n    stream.skipToEnd();\n    return \"atom\";\n  }\n  if (ch == \"%\"){\n    stream.eatWhile(/\\b/);\n    return \"atom\";\n  }\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n  if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    if(ch == \"@\"){\n      if(stream.match(\"try\") || stream.match(\"catch\")\n         || stream.match(\"lazy\")){\n        return \"keyword\";\n      }\n    }\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n  var cur = stream.current();\n\n  if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n  if (builtin.propertyIsEnumerable(cur)) return \"builtin\";\n\n  if (timerOps.propertyIsEnumerable(cur)) return \"def\";\n  if (configOps.propertyIsEnumerable(cur)) return \"def\";\n  if (verdictOps.propertyIsEnumerable(cur)) return \"def\";\n  if (portOps.propertyIsEnumerable(cur)) return \"def\";\n  if (sutOps.propertyIsEnumerable(cur)) return \"def\";\n  if (functionOps.propertyIsEnumerable(cur)) return \"def\";\n\n  if (verdictConsts.propertyIsEnumerable(cur)) return \"string\";\n  if (booleanConsts.propertyIsEnumerable(cur)) return \"string\";\n  if (otherConsts.propertyIsEnumerable(cur)) return \"string\";\n\n  if (types.propertyIsEnumerable(cur)) return \"typeName.standard\";\n  if (visibilityModifiers.propertyIsEnumerable(cur))\n    return \"modifier\";\n  if (templateMatch.propertyIsEnumerable(cur)) return \"atom\";\n\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped){\n        var afterQuote = stream.peek();\n        //look if the character after the quote is like the B in '10100010'B\n        if (afterQuote){\n          afterQuote = afterQuote.toLowerCase();\n          if(afterQuote == \"b\" || afterQuote == \"h\" || afterQuote == \"o\")\n            stream.next();\n        }\n        end = true; break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !(escaped || multiLineStrings))\n      state.tokenize = null;\n    return \"string\";\n  };\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = null;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\n\nfunction pushContext(state, col, type) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, null, state.context);\n}\n\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n//Interface\nexport const ttcn = {\n  name: \"ttcn\",\n  startState: function() {\n    return {\n      tokenize: null,\n      context: new Context(0, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\")\n        && ctx.type == \"statement\"){\n      popContext(state);\n    }\n    else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"}\") {\n      while (ctx.type == \"statement\") ctx = popContext(state);\n      if (ctx.type == \"}\") ctx = popContext(state);\n      while (ctx.type == \"statement\") ctx = popContext(state);\n    }\n    else if (curPunc == ctx.type) popContext(state);\n    else if (indentStatements &&\n             (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';') ||\n              (ctx.type == \"statement\" && curPunc == \"newstatement\")))\n      pushContext(state, stream.column(), \"statement\");\n\n    state.startOfLine = false;\n\n    return style;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n    autocomplete: wordList\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}