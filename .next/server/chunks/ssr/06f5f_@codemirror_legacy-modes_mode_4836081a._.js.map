{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/simple-mode.js","turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/dockerfile.js"],"sourcesContent":["export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    mergeTokens: meta.mergeTokens,\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.dontIndentStates.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n","import {simpleMode} from \"./simple-mode.js\"\n\nvar from = \"from\";\nvar fromRegex = new RegExp(\"^(\\\\s*)\\\\b(\" + from + \")\\\\b\", \"i\");\n\nvar shells = [\"run\", \"cmd\", \"entrypoint\", \"shell\"];\nvar shellsAsArrayRegex = new RegExp(\"^(\\\\s*)(\" + shells.join('|') + \")(\\\\s+\\\\[)\", \"i\");\n\nvar expose = \"expose\";\nvar exposeRegex = new RegExp(\"^(\\\\s*)(\" + expose + \")(\\\\s+)\", \"i\");\n\nvar others = [\n  \"arg\", \"from\", \"maintainer\", \"label\", \"env\",\n  \"add\", \"copy\", \"volume\", \"user\",\n  \"workdir\", \"onbuild\", \"stopsignal\", \"healthcheck\", \"shell\"\n];\n\n// Collect all Dockerfile directives\nvar instructions = [from, expose].concat(shells).concat(others),\n    instructionRegex = \"(\" + instructions.join('|') + \")\",\n    instructionOnlyLine = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s*)(#.*)?$\", \"i\"),\n    instructionWithArguments = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s+)\", \"i\");\n\nexport const dockerFile = simpleMode({\n  start: [\n    // Block comment: This is a line starting with a comment\n    {\n      regex: /^\\s*#.*$/,\n      sol: true,\n      token: \"comment\"\n    },\n    {\n      regex: fromRegex,\n      token: [null, \"keyword\"],\n      sol: true,\n      next: \"from\"\n    },\n    // Highlight an instruction without any arguments (for convenience)\n    {\n      regex: instructionOnlyLine,\n      token: [null, \"keyword\", null, \"error\"],\n      sol: true\n    },\n    {\n      regex: shellsAsArrayRegex,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"array\"\n    },\n    {\n      regex: exposeRegex,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"expose\"\n    },\n    // Highlight an instruction followed by arguments\n    {\n      regex: instructionWithArguments,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"arguments\"\n    },\n    {\n      regex: /./,\n      token: null\n    }\n  ],\n  from: [\n    {\n      regex: /\\s*$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      // Line comment without instruction arguments is an error\n      regex: /(\\s*)(#.*)$/,\n      token: [null, \"error\"],\n      next: \"start\"\n    },\n    {\n      regex: /(\\s*\\S+\\s+)(as)/i,\n      token: [null, \"keyword\"],\n      next: \"start\"\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  single: [\n    {\n      regex: /(?:[^\\\\']|\\\\.)/,\n      token: \"string\"\n    },\n    {\n      regex: /'/,\n      token: \"string\",\n      pop: true\n    }\n  ],\n  double: [\n    {\n      regex: /(?:[^\\\\\"]|\\\\.)/,\n      token: \"string\"\n    },\n    {\n      regex: /\"/,\n      token: \"string\",\n      pop: true\n    }\n  ],\n  array: [\n    {\n      regex: /\\]/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n      token: \"string\"\n    }\n  ],\n  expose: [\n    {\n      regex: /\\d+$/,\n      token: \"number\",\n      next: \"start\"\n    },\n    {\n      regex: /[^\\d]+$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /\\d+/,\n      token: \"number\"\n    },\n    {\n      regex: /[^\\d]+/,\n      token: null\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  arguments: [\n    {\n      regex: /^\\s*#.*$/,\n      sol: true,\n      token: \"comment\"\n    },\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?$/,\n      token: \"string\",\n      next: \"start\"\n    },\n    {\n      regex: /\"/,\n      token: \"string\",\n      push: \"double\"\n    },\n    {\n      regex: /'(?:[^\\\\']|\\\\.)*'?$/,\n      token: \"string\",\n      next: \"start\"\n    },\n    {\n      regex: /'/,\n      token: \"string\",\n      push: \"single\"\n    },\n    {\n      regex: /[^#\"']+[\\\\`]$/,\n      token: null\n    },\n    {\n      regex: /[^#\"']+$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /[^#\"']+/,\n      token: null\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n});\n\n"],"names":[],"mappings":"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IACP,MAAO,IACT,EACD,CACD,KAAM,CACJ,CACE,MAAO,OACP,MAAO,KACP,KAAM,OACR,EACA,CAEE,MAAO,cACP,MAAO,CAAC,KAAM,QAAQ,CACtB,KAAM,OACR,EACA,CACE,MAAO,mBACP,MAAO,CAAC,KAAM,UAAU,CACxB,KAAM,OACR,EAEA,CACE,MAAO,KACP,KAAM,OACR,EACD,CACD,OAAQ,CACN,CACE,MAAO,iBACP,MAAO,QACT,EACA,CACE,MAAO,IACP,MAAO,SACP,KAAK,CACP,EACD,CACD,OAAQ,CACN,CACE,MAAO,iBACP,MAAO,QACT,EACA,CACE,MAAO,IACP,MAAO,SACP,KAAK,CACP,EACD,CACD,MAAO,CACL,CACE,MAAO,KACP,MAAO,KACP,KAAM,OACR,EACA,CACE,MAAO,qBACP,MAAO,QACT,EACD,CACD,OAAQ,CACN,CACE,MAAO,OACP,MAAO,SACP,KAAM,OACR,EACA,CACE,MAAO,UACP,MAAO,KACP,KAAM,OACR,EACA,CACE,MAAO,MACP,MAAO,QACT,EACA,CACE,MAAO,SACP,MAAO,IACT,EAEA,CACE,MAAO,KACP,KAAM,OACR,EACD,CACD,UAAW,CACT,CACE,MAAO,WACP,KAAK,EACL,MAAO,SACT,EACA,CACE,MAAO,sBACP,MAAO,SACP,KAAM,OACR,EACA,CACE,MAAO,IACP,MAAO,SACP,KAAM,QACR,EACA,CACE,MAAO,sBACP,MAAO,SACP,KAAM,OACR,EACA,CACE,MAAO,IACP,MAAO,SACP,KAAM,QACR,EACA,CACE,MAAO,gBACP,MAAO,IACT,EACA,CACE,MAAO,WACP,MAAO,KACP,KAAM,OACR,EACA,CACE,MAAO,UACP,MAAO,IACT,EAEA,CACE,MAAO,KACP,KAAM,OACR,EACD,CACD,aAAc,CACZ,cAAe,CAAC,KAAM,GAAG,CAC3B,CACF","ignoreList":[0,1]}