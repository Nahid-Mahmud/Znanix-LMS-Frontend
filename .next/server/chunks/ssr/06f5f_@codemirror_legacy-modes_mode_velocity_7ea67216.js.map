{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/velocity.js"],"sourcesContent":["function parseWords(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\nvar keywords = parseWords(\"#end #else #break #stop #[[ #]] \" +\n                          \"#{end} #{else} #{break} #{stop}\");\nvar functions = parseWords(\"#if #elseif #foreach #set #include #parse #macro #define #evaluate \" +\n                           \"#{if} #{elseif} #{foreach} #{set} #{include} #{parse} #{macro} #{define} #{evaluate}\");\nvar specials = parseWords(\"$foreach.count $foreach.hasNext $foreach.first $foreach.last $foreach.topmost $foreach.parent.count $foreach.parent.hasNext $foreach.parent.first $foreach.parent.last $foreach.parent $velocityCount $!bodyContent $bodyContent\");\nvar isOperatorChar = /[+\\-*&%=<>!?:\\/|]/;\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\nfunction tokenBase(stream, state) {\n  var beforeParams = state.beforeParams;\n  state.beforeParams = false;\n  var ch = stream.next();\n  // start of unparsed string?\n  if ((ch == \"'\") && !state.inString && state.inParams) {\n    state.lastTokenWasBuiltin = false;\n    return chain(stream, state, tokenString(ch));\n  }\n  // start of parsed string?\n  else if ((ch == '\"')) {\n    state.lastTokenWasBuiltin = false;\n    if (state.inString) {\n      state.inString = false;\n      return \"string\";\n    }\n    else if (state.inParams)\n      return chain(stream, state, tokenString(ch));\n  }\n  // is it one of the special signs []{}().,;? Separator?\n  else if (/[\\[\\]{}\\(\\),;\\.]/.test(ch)) {\n    if (ch == \"(\" && beforeParams)\n      state.inParams = true;\n    else if (ch == \")\") {\n      state.inParams = false;\n      state.lastTokenWasBuiltin = true;\n    }\n    return null;\n  }\n  // start of a number value?\n  else if (/\\d/.test(ch)) {\n    state.lastTokenWasBuiltin = false;\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n  // multi line comment?\n  else if (ch == \"#\" && stream.eat(\"*\")) {\n    state.lastTokenWasBuiltin = false;\n    return chain(stream, state, tokenComment);\n  }\n  // unparsed content?\n  else if (ch == \"#\" && stream.match(/ *\\[ *\\[/)) {\n    state.lastTokenWasBuiltin = false;\n    return chain(stream, state, tokenUnparsed);\n  }\n  // single line comment?\n  else if (ch == \"#\" && stream.eat(\"#\")) {\n    state.lastTokenWasBuiltin = false;\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  // variable?\n  else if (ch == \"$\") {\n    stream.eat(\"!\");\n    stream.eatWhile(/[\\w\\d\\$_\\.{}-]/);\n    // is it one of the specials?\n    if (specials && specials.propertyIsEnumerable(stream.current())) {\n      return \"keyword\";\n    }\n    else {\n      state.lastTokenWasBuiltin = true;\n      state.beforeParams = true;\n      return \"builtin\";\n    }\n  }\n  // is it a operator?\n  else if (isOperatorChar.test(ch)) {\n    state.lastTokenWasBuiltin = false;\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  else {\n    // get the whole word\n    stream.eatWhile(/[\\w\\$_{}@]/);\n    var word = stream.current();\n    // is it one of the listed keywords?\n    if (keywords && keywords.propertyIsEnumerable(word))\n      return \"keyword\";\n    // is it one of the listed functions?\n    if (functions && functions.propertyIsEnumerable(word) ||\n        (stream.current().match(/^#@?[a-z0-9_]+ *$/i) && stream.peek()==\"(\") &&\n        !(functions && functions.propertyIsEnumerable(word.toLowerCase()))) {\n      state.beforeParams = true;\n      state.lastTokenWasBuiltin = false;\n      return \"keyword\";\n    }\n    if (state.inString) {\n      state.lastTokenWasBuiltin = false;\n      return \"string\";\n    }\n    if (stream.pos > word.length && stream.string.charAt(stream.pos-word.length-1)==\".\" && state.lastTokenWasBuiltin)\n      return \"builtin\";\n    // default: just a \"word\"\n    state.lastTokenWasBuiltin = false;\n    return null;\n  }\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if ((next == quote) && !escaped) {\n        end = true;\n        break;\n      }\n      if (quote=='\"' && stream.peek() == '$' && !escaped) {\n        state.inString = true;\n        end = true;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end) state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"#\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction tokenUnparsed(stream, state) {\n  var maybeEnd = 0, ch;\n  while (ch = stream.next()) {\n    if (ch == \"#\" && maybeEnd == 2) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    if (ch == \"]\")\n      maybeEnd++;\n    else if (ch != \" \")\n      maybeEnd = 0;\n  }\n  return \"meta\";\n}\n// Interface\n\nexport const velocity = {\n  name: \"velocity\",\n\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      beforeParams: false,\n      inParams: false,\n      inString: false,\n      lastTokenWasBuiltin: false\n    };\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  },\n  languageData: {\n    commentTokens: {line: \"##\", block: {open: \"#*\", close: \"*#\"}}\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}