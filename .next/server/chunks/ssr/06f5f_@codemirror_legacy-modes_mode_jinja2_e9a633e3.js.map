{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/@codemirror+legacy-modes@6.5.1/node_modules/@codemirror/legacy-modes/mode/jinja2.js"],"sourcesContent":["var keywords = [\"and\", \"as\", \"block\", \"endblock\", \"by\", \"cycle\", \"debug\", \"else\", \"elif\",\n                \"extends\", \"filter\", \"endfilter\", \"firstof\", \"do\", \"for\",\n                \"endfor\", \"if\", \"endif\", \"ifchanged\", \"endifchanged\",\n                \"ifequal\", \"endifequal\", \"ifnotequal\", \"set\", \"raw\", \"endraw\",\n                \"endifnotequal\", \"in\", \"include\", \"load\", \"not\", \"now\", \"or\",\n                \"parsed\", \"regroup\", \"reversed\", \"spaceless\", \"call\", \"endcall\", \"macro\",\n                \"endmacro\", \"endspaceless\", \"ssi\", \"templatetag\", \"openblock\",\n                \"closeblock\", \"openvariable\", \"closevariable\", \"without\", \"context\",\n                \"openbrace\", \"closebrace\", \"opencomment\",\n                \"closecomment\", \"widthratio\", \"url\", \"with\", \"endwith\",\n                \"get_current_language\", \"trans\", \"endtrans\", \"noop\", \"blocktrans\",\n                \"endblocktrans\", \"get_available_languages\",\n                \"get_current_language_bidi\", \"pluralize\", \"autoescape\", \"endautoescape\"],\n    operator = /^[+\\-*&%=<>!?|~^]/,\n    sign = /^[:\\[\\(\\{]/,\n    atom = [\"true\", \"false\"],\n    number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\n\nkeywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\");\natom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\");\n\nfunction tokenBase (stream, state) {\n  var ch = stream.peek();\n\n  //Comment\n  if (state.incomment) {\n    if(!stream.skipTo(\"#}\")) {\n      stream.skipToEnd();\n    } else {\n      stream.eatWhile(/\\#|}/);\n      state.incomment = false;\n    }\n    return \"comment\";\n    //Tag\n  } else if (state.intag) {\n    //After operator\n    if(state.operator) {\n      state.operator = false;\n      if(stream.match(atom)) {\n        return \"atom\";\n      }\n      if(stream.match(number)) {\n        return \"number\";\n      }\n    }\n    //After sign\n    if(state.sign) {\n      state.sign = false;\n      if(stream.match(atom)) {\n        return \"atom\";\n      }\n      if(stream.match(number)) {\n        return \"number\";\n      }\n    }\n\n    if(state.instring) {\n      if(ch == state.instring) {\n        state.instring = false;\n      }\n      stream.next();\n      return \"string\";\n    } else if(ch == \"'\" || ch == '\"') {\n      state.instring = ch;\n      stream.next();\n      return \"string\";\n    } else if (state.inbraces > 0 && ch ==\")\") {\n      stream.next()\n      state.inbraces--;\n    }\n    else if (ch == \"(\") {\n      stream.next()\n      state.inbraces++;\n    }\n    else if (state.inbrackets > 0 && ch ==\"]\") {\n      stream.next()\n      state.inbrackets--;\n    }\n    else if (ch == \"[\") {\n      stream.next()\n      state.inbrackets++;\n    } else if (!state.lineTag && (stream.match(state.intag + \"}\") || stream.eat(\"-\") && stream.match(state.intag + \"}\"))) {\n      state.intag = false;\n      return \"tag\";\n    } else if(stream.match(operator)) {\n      state.operator = true;\n      return \"operator\";\n    } else if(stream.match(sign)) {\n      state.sign = true;\n    } else {\n      if (stream.column() == 1 && state.lineTag && stream.match(keywords)) {\n        //allow nospace after tag before the keyword\n        return \"keyword\";\n      }\n      if(stream.eat(\" \") || stream.sol()) {\n        if(stream.match(keywords)) {\n          return \"keyword\";\n        }\n        if(stream.match(atom)) {\n          return \"atom\";\n        }\n        if(stream.match(number)) {\n          return \"number\";\n        }\n        if(stream.sol()) {\n          stream.next();\n        }\n      } else {\n        stream.next();\n      }\n\n    }\n    return \"variable\";\n  } else if (stream.eat(\"{\")) {\n    if (stream.eat(\"#\")) {\n      state.incomment = true;\n      if(!stream.skipTo(\"#}\")) {\n        stream.skipToEnd();\n      } else {\n        stream.eatWhile(/\\#|}/);\n        state.incomment = false;\n      }\n      return \"comment\";\n      //Open tag\n    } else if (ch = stream.eat(/\\{|%/)) {\n      //Cache close tag\n      state.intag = ch;\n      state.inbraces = 0;\n      state.inbrackets = 0;\n      if(ch == \"{\") {\n        state.intag = \"}\";\n      }\n      stream.eat(\"-\");\n      return \"tag\";\n    }\n    //Line statements\n  } else if (stream.eat('#')) {\n    if (stream.peek() == '#') {\n      stream.skipToEnd();\n      return \"comment\"\n    }\n    else if (!stream.eol()) {\n      state.intag = true;\n      state.lineTag = true;\n      state.inbraces = 0;\n      state.inbrackets = 0;\n      return \"tag\";\n    }\n  }\n  stream.next();\n};\n\nexport const jinja2 = {\n  name: \"jinja2\",\n  startState: function () {\n    return {tokenize: tokenBase, inbrackets: 0, inbraces: 0};\n  },\n  token: function(stream, state) {\n    var style = state.tokenize(stream, state);\n    if (stream.eol() && state.lineTag && !state.instring && state.inbraces == 0 && state.inbrackets == 0) {\n      //Close line statement at the EOL\n      state.intag = false\n      state.lineTag = false\n    }\n    return style;\n  },\n  languageData: {\n    commentTokens: {block: {open: \"{#\", close: \"#}\", line: \"##\"}}\n  }\n};\n"],"names":[],"mappings":"8DAAA,IAAI,EAAW,CAAC,MAAO,KAAM,QAAS,WAAY,KAAM,QAAS,QAAS,OAAQ,OAClE,UAAW,SAAU,YAAa,UAAW,KAAM,MACnD,SAAU,KAAM,QAAS,YAAa,eACtC,UAAW,aAAc,aAAc,MAAO,MAAO,SACrD,gBAAiB,KAAM,UAAW,OAAQ,MAAO,MAAO,KACxD,SAAU,UAAW,WAAY,YAAa,OAAQ,UAAW,QACjE,WAAY,eAAgB,MAAO,cAAe,YAClD,aAAc,eAAgB,gBAAiB,UAAW,UAC1D,YAAa,aAAc,cAC3B,eAAgB,aAAc,MAAO,OAAQ,UAC7C,uBAAwB,QAAS,WAAY,OAAQ,aACrD,gBAAiB,0BACjB,4BAA6B,YAAa,aAAc,gBAAgB,CACpF,EAAW,oBACX,EAAO,aACP,EAAO,CAAC,OAAQ,QAAQ,CACxB,EAAS,6BAKb,SAAS,EAAW,CAAM,CAAE,CAAK,EAC/B,IAAI,EAAK,EAAO,IAAI,GAGpB,GAAI,EAAM,SAAS,CAOjB,CAPmB,MACf,EAAO,MAAM,CAAC,OAAO,AAGvB,EAAO,QAAQ,CAAC,QAChB,EAAM,SAAS,EAAG,GAHlB,EAAO,SAAS,GAKX,UAEF,GAAI,EAAM,KAAK,CAAE,CAEtB,GAAG,EAAM,QAAQ,CAAE,CAEjB,GADA,EAAM,QAAQ,EAAG,EACd,EAAO,KAAK,CAAC,GACd,IADqB,EACd,OAET,GAAG,EAAO,KAAK,CAAC,GACd,MADuB,AAChB,QAEX,CAEA,GAAG,EAAM,IAAI,CAAE,CAEb,GADA,EAAM,IAAI,EAAG,EACV,EAAO,KAAK,CAAC,GACd,IADqB,EACd,OAET,GAAG,EAAO,KAAK,CAAC,GACd,MAAO,AADgB,QAG3B,CAEA,GAAG,EAAM,QAAQ,CAKf,CALiB,MACd,GAAM,EAAM,QAAQ,EAAE,CACvB,EAAM,QAAQ,EAAG,CAAA,EAEnB,EAAO,IAAI,GACJ,SACF,GAAS,KAAN,GAAmB,KAAN,AAAW,EAGhC,OAFA,EAAM,QAAQ,CAAG,EACjB,EAAO,IAAI,GACJ,SACF,GAAI,EAAM,QAAQ,CAAG,GAAU,KAAL,AAAU,EACzC,EAAO,IAAI,GACX,EAAM,QAAQ,QAEX,GAAU,KAAN,AAAW,EAClB,EAAO,IAAI,GACX,EAAM,QAAQ,QAEX,GAAI,EAAM,UAAU,CAAG,GAAU,KAAL,AAAU,EACzC,EAAO,IAAI,GACX,EAAM,UAAU,QAEb,GAAU,KAAK,AAAX,EACP,EAAO,IAAI,GACX,EAAM,UAAU,QACX,GAAI,CAAC,EAAM,OAAO,GAAK,CAAD,CAAQ,KAAK,CAAC,EAAM,KAAK,CAAG,MAAQ,EAAO,GAAG,CAAC,MAAQ,EAAO,KAAK,CAAC,EAAM,KAAK,CAAG,IAAA,CAAI,CAEjH,EAFoH,KACpH,EAAM,KAAK,EAAG,EACP,WACF,GAAG,EAAO,KAAK,CAAC,GAErB,OADA,CADgC,CAC1B,QAAQ,EAAG,EACV,gBACF,GAAG,EAAO,KAAK,CAAC,GACrB,EAAM,EADsB,EAClB,EAAG,MACR,CACL,GAAuB,GAAnB,EAAO,MAAM,IAAW,EAAM,OAAO,EAAI,EAAO,KAAK,CAAC,GAExD,MAAO,EAF4D,QAIrE,GAAG,EAAO,GAAG,CAAC,MAAQ,EAAO,GAAG,GAAI,CAClC,GAAG,EAAO,KAAK,CAAC,GACd,MAAO,EADkB,QAG3B,GAAG,EAAO,KAAK,CAAC,GACd,IADqB,EACd,OAET,GAAG,EAAO,KAAK,CAAC,GACd,MADuB,AAChB,SAEN,EAAO,GAAG,IAAI,AACf,EAAO,IAAI,EAEf,MACE,CADK,CACE,IAAI,EAGf,CACA,MAAO,UACT,CAAO,GAAI,EAAO,GAAG,CAAC,MAAM,AAC1B,GAAI,EAAO,GAAG,CAAC,KAQb,CARmB,MACnB,EAAM,SAAS,EAAG,EACd,EAAO,MAAM,CAAC,OAAO,AAGvB,EAAO,QAAQ,CAAC,QAChB,EAAM,SAAS,EAAG,GAHlB,EAAO,SAAS,GAKX,eAEF,GAAI,EAAK,EAAO,GAAG,CAAC,QASzB,CATkC,MAElC,EAAM,KAAK,CAAG,EACd,EAAM,QAAQ,CAAG,EACjB,EAAM,UAAU,CAAG,EACV,KAAN,AAAW,IACZ,EAAM,KAAK,CAAG,GAAA,EAEhB,EAAO,GAAG,CAAC,KACJ,KACT,MAEK,GAAI,EAAO,GAAG,CAAC,MACpB,AAD0B,GACL,KAAjB,AAAsB,EAAf,IAAI,GAEb,OADA,EAAO,SAAS,GACT,eAEJ,GAAI,CAAC,EAAO,GAAG,GAKlB,CALsB,MACtB,EAAM,KAAK,EAAG,EACd,EAAM,OAAO,EAAG,EAChB,EAAM,QAAQ,CAAG,EACjB,EAAM,UAAU,CAAG,EACZ,KACT,CAEF,EAAO,IAAI,EACb,CApIA,EAAW,AAAI,OAAO,KAAO,EAAS,IAAI,CAAC,OAAS,SACpD,EAAO,AAAI,OAAO,KAAO,EAAK,IAAI,CAAC,OAAS,SAqIrC,IAAM,EAAS,CACpB,KAAM,SACN,WAAY,WACV,MAAO,CAAC,SAAU,EAAW,WAAY,EAAG,SAAU,CAAC,CACzD,EACA,MAAO,SAAS,CAAM,CAAE,CAAK,EAC3B,IAAI,EAAQ,EAAM,QAAQ,CAAC,EAAQ,GAMnC,OALI,EAAO,GAAG,IAAM,EAAM,OAAO,EAAI,CAAC,EAAM,QAAQ,EAAsB,GAAlB,EAAM,QAAQ,EAA6B,GAApB,AAAuB,EAAjB,UAAU,GAE7F,EAAM,KAAK,EAAG,EACd,EAAM,OAAO,EAAG,GAEX,CACT,EACA,aAAc,CACZ,cAAe,CAAC,MAAO,CAAC,KAAM,KAAM,MAAO,KAAM,KAAM,IAAI,CAAC,CAC9D,CACF","ignoreList":[0]}